From 6aab32db4d1f3fcaa320d863bf8a8e1478b326db Mon Sep 17 00:00:00 2001
From: BlackMesa123 <giangrecosalvo9@gmail.com>
Date: Sun, 9 Jun 2024 16:47:17 +0200
Subject: [PATCH] Replace source SPF with target values

---
 .../server/wifi/SemFrameworkFacade.smali      |  10 +-
 .../server/wifi/SemWifiCoexManager.smali      | 529 +++++--------
 .../server/wifi/SemWifiManagerProxy.smali     |   2 +-
 .../wifi/ap/SemSettingsSoftResetHandler.smali |  28 +-
 .../wifi/ap/SemSoftApConfiguration$13.smali   |  36 +
 .../wifi/ap/SemSoftApConfiguration$4.smali    |  38 +
 .../wifi/ap/SemSoftApConfiguration$9.smali    |  36 +
 .../wifi/ap/SemSoftApConfiguration.smali      | 720 ++++++++----------
 .../server/wifi/ap/SemSoftApManager$1.smali   | 275 +------
 .../server/wifi/ap/SemSoftApManager.smali     | 284 +------
 .../wifi/ap/SemWifiApBroadcastReceiver.smali  |  94 +--
 .../server/wifi/ap/SemWifiApConfigStore.smali |  45 +-
 ...emWifiApPowerSaveImpl$SoftApCallback.smali | 180 +----
 .../wifi/ap/SemWifiApPowerSaveImpl.smali      |  84 +-
 .../server/wifi/ap/SemWifiApServiceImpl.smali | 111 ++-
 ...er$SemWifiApTrafficPollerWorkHandler.smali | 273 +++----
 .../wifi/ap/SemWifiApTrafficPoller.smali      |  62 +-
 .../wifi/ap/datausage/SemWifiApEbpf.smali     |  27 +-
 .../wifi/ap/mcf/SemWifiApContinuityUtil.smali |  39 +-
 .../SemWifiApSmartGattClient$2.smali          | 103 ++-
 .../SemWifiApSmartGattClient.smali            |  47 +-
 .../SemWifiApSmartGattServer$2.smali          |   2 +-
 ...WifiApSmartGattServer$BleWorkHandler.smali | 363 ++++-----
 .../SemWifiApSmartGattServer.smali            |   8 -
 .../smarttethering/SemWifiApSmartUtil.smali   |  35 +-
 .../wifi/b2b/WifiB2bPolicyManager.smali       |  31 +-
 26 files changed, 1125 insertions(+), 2337 deletions(-)
 create mode 100644 smali/com/samsung/android/server/wifi/ap/SemSoftApConfiguration$13.smali
 create mode 100644 smali/com/samsung/android/server/wifi/ap/SemSoftApConfiguration$4.smali
 create mode 100644 smali/com/samsung/android/server/wifi/ap/SemSoftApConfiguration$9.smali

diff --git a/smali/com/samsung/android/server/wifi/SemFrameworkFacade.smali b/smali/com/samsung/android/server/wifi/SemFrameworkFacade.smali
index 9c0d796..d675abc 100644
--- a/smali/com/samsung/android/server/wifi/SemFrameworkFacade.smali
+++ b/smali/com/samsung/android/server/wifi/SemFrameworkFacade.smali
@@ -195,7 +195,9 @@
 
     div-int/lit8 v0, v0, 0x8
 
-    invoke-static {p0}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
+    const-string v1, "100"
+
+    invoke-static {v1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
 
     move-result v1
 
@@ -1074,7 +1076,7 @@
 .method public isSupportMobileAp6G()Z
     .locals 0
 
-    const/4 p0, 0x1
+    const/4 p0, 0x0
 
     return p0
 .end method
@@ -1118,7 +1120,7 @@
 .method public isSupported6Ghz()Z
     .locals 0
 
-    const/4 p0, 0x1
+    const/4 p0, 0x0
 
     return p0
 .end method
@@ -1289,7 +1291,7 @@
 .method public isWifiToCellularSupported()Z
     .locals 0
 
-    const/4 p0, 0x1
+    const/4 p0, 0x0
 
     return p0
 .end method
diff --git a/smali/com/samsung/android/server/wifi/SemWifiCoexManager.smali b/smali/com/samsung/android/server/wifi/SemWifiCoexManager.smali
index ac8c376..c75c8f3 100644
--- a/smali/com/samsung/android/server/wifi/SemWifiCoexManager.smali
+++ b/smali/com/samsung/android/server/wifi/SemWifiCoexManager.smali
@@ -13,7 +13,7 @@
 
 
 # static fields
-.field private static final CUSTOM_BACKOFF_TYPE:Ljava/lang/String; = "CAM_FRONT -1 -1 -1 -1 12 8 CAM_BACK -1 -1 -1 -1 12 8"
+.field private static final CUSTOM_BACKOFF_TYPE:Ljava/lang/String; = ""
 
 .field private static final DBG:Z
 
@@ -324,103 +324,103 @@
 
     iput-object v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCAM_BACK_CUSTOM_BACKOFF:Ljava/lang/String;
 
-    const-string v0, "-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1"
+    const-string v1, "-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1"
 
-    iput-object v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCUSTOM_BACKOFF_DISABLE:Ljava/lang/String;
+    iput-object v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCUSTOM_BACKOFF_DISABLE:Ljava/lang/String;
 
-    iput-object v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mPreBackOff:Ljava/lang/String;
+    iput-object v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mPreBackOff:Ljava/lang/String;
 
-    const/16 v0, 0x18
+    const/16 v1, 0x18
 
-    new-array v0, v0, [Ljava/lang/String;
+    new-array v1, v1, [Ljava/lang/String;
 
-    iput-object v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCustomBackoffArray:[Ljava/lang/String;
+    iput-object v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCustomBackoffArray:[Ljava/lang/String;
 
-    const/16 v0, 0x157c
+    const/16 v1, 0x157c
 
-    iput v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->infStartFreqMhz:I
+    iput v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->infStartFreqMhz:I
 
-    const/16 v0, 0x16fd
+    const/16 v1, 0x16fd
 
-    iput v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->infEndFreqMhz:I
+    iput v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->infEndFreqMhz:I
 
-    const/4 v0, 0x0
+    const/4 v1, 0x0
 
-    iput v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->uwbCxStart5gCh:I
+    iput v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->uwbCxStart5gCh:I
 
-    iput v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->uwbCxEnd5gCh:I
+    iput v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->uwbCxEnd5gCh:I
 
-    iput v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->uwb1TxCxStart5gCh:I
+    iput v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->uwb1TxCxStart5gCh:I
 
-    iput v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->uwb1TxCxEnd5gCh:I
+    iput v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->uwb1TxCxEnd5gCh:I
 
-    const/4 v1, -0x1
+    const/4 v2, -0x1
 
-    iput v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->uwb1TxCxAntId:I
+    iput v2, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->uwb1TxCxAntId:I
 
-    iput v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mStaFreq:I
+    iput v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mStaFreq:I
 
-    iput v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mP2pFreq:I
+    iput v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mP2pFreq:I
 
-    iput v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mSApFreq:I
+    iput v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mSApFreq:I
 
-    iput v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mWifiApState:I
+    iput v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mWifiApState:I
 
-    iput v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mUwbCh:I
+    iput v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mUwbCh:I
 
-    iput-boolean v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mIsUwbCxEnabled:Z
+    iput-boolean v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mIsUwbCxEnabled:Z
 
-    iput-boolean v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mIsUwbBackoffDefined:Z
+    iput-boolean v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mIsUwbBackoffDefined:Z
 
-    iput-boolean v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mIsUwbCxfor5GhzDefined:Z
+    iput-boolean v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mIsUwbCxfor5GhzDefined:Z
 
-    iput-boolean v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mIsUwb1TxCxfor5GhzDefined:Z
+    iput-boolean v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mIsUwb1TxCxfor5GhzDefined:Z
 
-    iput-boolean v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mIsCamFrontBackoffDefined:Z
+    iput-boolean v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mIsCamFrontBackoffDefined:Z
 
-    iput-boolean v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mIsCamBackBackoffDefined:Z
+    iput-boolean v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mIsCamBackBackoffDefined:Z
 
-    iput-boolean v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mUwbBackoffEnable:Z
+    iput-boolean v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mUwbBackoffEnable:Z
 
-    iput-boolean v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCamFrontBackoffEnable:Z
+    iput-boolean v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCamFrontBackoffEnable:Z
 
-    iput-boolean v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCamBackBackoffEnable:Z
+    iput-boolean v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCamBackBackoffEnable:Z
 
-    iput-boolean v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->isCameraRunning:Z
+    iput-boolean v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->isCameraRunning:Z
 
-    iput v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mLteuState:I
+    iput v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mLteuState:I
 
-    iput v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mLteuEnable:I
+    iput v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mLteuEnable:I
 
-    iput-boolean v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mScellEnter:Z
+    iput-boolean v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mScellEnter:Z
 
-    iput-boolean v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->lastScellEnter:Z
+    iput-boolean v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->lastScellEnter:Z
 
-    const/4 v2, 0x1
+    const/4 v3, 0x1
 
-    iput v2, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->LTEU_MOBILEHOTSPOT_5GHZ_ENABLED:I
+    iput v3, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->LTEU_MOBILEHOTSPOT_5GHZ_ENABLED:I
 
-    const/4 v3, 0x2
+    const/4 v4, 0x2
 
-    iput v3, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->LTEU_P2P_5GHZ_CONNECTED:I
+    iput v4, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->LTEU_P2P_5GHZ_CONNECTED:I
 
-    const/4 v3, 0x4
+    const/4 v4, 0x4
 
-    iput v3, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->LTEU_STA_5GHZ_CONNECTED:I
+    iput v4, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->LTEU_STA_5GHZ_CONNECTED:I
 
-    iput v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->laaEnterState:I
+    iput v2, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->laaEnterState:I
 
-    iput v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->laaActiveState:I
+    iput v2, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->laaActiveState:I
 
-    new-instance v1, Lcom/samsung/android/server/wifi/SemWifiCoexManager$1;
+    new-instance v2, Lcom/samsung/android/server/wifi/SemWifiCoexManager$1;
 
-    invoke-direct {v1, p0}, Lcom/samsung/android/server/wifi/SemWifiCoexManager$1;-><init>(Lcom/samsung/android/server/wifi/SemWifiCoexManager;)V
+    invoke-direct {v2, p0}, Lcom/samsung/android/server/wifi/SemWifiCoexManager$1;-><init>(Lcom/samsung/android/server/wifi/SemWifiCoexManager;)V
 
-    iput-object v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mBroadcastReceiver:Landroid/content/BroadcastReceiver;
+    iput-object v2, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mBroadcastReceiver:Landroid/content/BroadcastReceiver;
 
-    const-string v1, "SemWifiCoexManager"
+    const-string v2, "SemWifiCoexManager"
 
-    invoke-static {v1, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+    invoke-static {v2, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
 
     iput-object p1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mContext:Landroid/content/Context;
 
@@ -462,70 +462,68 @@
 
     if-eqz p2, :cond_0
 
-    const-string p2, "CUSTOM_BACKOFF_TYPE = CAM_FRONT -1 -1 -1 -1 12 8 CAM_BACK -1 -1 -1 -1 12 8"
+    const-string p2, "CUSTOM_BACKOFF_TYPE = "
 
-    invoke-static {v1, p2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+    invoke-static {v2, p2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
 
     :cond_0
-    const-string p2, "CAM_FRONT -1 -1 -1 -1 12 8 CAM_BACK -1 -1 -1 -1 12 8"
+    invoke-static {v0}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z
 
-    invoke-static {p2}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z
-
-    move-result p3
+    move-result p2
 
-    if-nez p3, :cond_9
+    if-nez p2, :cond_9
 
-    const-string p3, " "
+    const-string p2, " "
 
-    invoke-virtual {p2, p3}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;
+    invoke-virtual {v0, p2}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;
 
-    move-result-object p2
+    move-result-object p3
 
-    iput-object p2, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCustomBackoffArray:[Ljava/lang/String;
+    iput-object p3, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCustomBackoffArray:[Ljava/lang/String;
 
-    move p2, v0
+    move p3, v1
 
     :goto_0
     iget-object p4, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCustomBackoffArray:[Ljava/lang/String;
 
-    array-length v3, p4
+    array-length v0, p4
 
-    if-ge p2, v3, :cond_9
+    if-ge p3, v0, :cond_9
 
-    const-string v3, "UWB"
+    const-string v0, "UWB"
 
-    aget-object p4, p4, p2
+    aget-object p4, p4, p3
 
-    invoke-virtual {v3, p4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+    invoke-virtual {v0, p4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
 
     move-result p4
 
     if-eqz p4, :cond_2
 
-    add-int/lit8 p4, p2, 0x6
+    add-int/lit8 p4, p3, 0x6
 
     :goto_1
-    add-int/2addr p2, v2
+    add-int/2addr p3, v3
 
-    if-ge p2, p4, :cond_1
+    if-ge p3, p4, :cond_1
 
-    new-instance v3, Ljava/lang/StringBuilder;
+    new-instance v0, Ljava/lang/StringBuilder;
 
-    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V
 
     iget-object v4, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mUWB_CUSTOM_BACKOFF:Ljava/lang/String;
 
-    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
     iget-object v4, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCustomBackoffArray:[Ljava/lang/String;
 
-    aget-object v4, v4, p2
+    aget-object v4, v4, p3
 
-    invoke-static {v3, v4, p3}, Lcom/samsung/android/mcf/continuity/common/DLog$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+    invoke-static {v0, v4, p2}, Lcom/samsung/android/mcf/continuity/common/DLog$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 
-    move-result-object v3
+    move-result-object v0
 
-    iput-object v3, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mUWB_CUSTOM_BACKOFF:Ljava/lang/String;
+    iput-object v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mUWB_CUSTOM_BACKOFF:Ljava/lang/String;
 
     goto :goto_1
 
@@ -534,15 +532,15 @@
 
     invoke-direct {p4}, Ljava/lang/StringBuilder;-><init>()V
 
-    iget-object v3, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mUWB_CUSTOM_BACKOFF:Ljava/lang/String;
+    iget-object v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mUWB_CUSTOM_BACKOFF:Ljava/lang/String;
 
-    invoke-virtual {p4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {p4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    iget-object v3, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCustomBackoffArray:[Ljava/lang/String;
+    iget-object v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCustomBackoffArray:[Ljava/lang/String;
 
-    aget-object v3, v3, p2
+    aget-object v0, v0, p3
 
-    invoke-virtual {p4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {p4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
     invoke-virtual {p4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
 
@@ -554,15 +552,15 @@
 
     invoke-direct {p4}, Ljava/lang/StringBuilder;-><init>()V
 
-    iget-object v3, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mUWB_CUSTOM_BACKOFF:Ljava/lang/String;
+    iget-object v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mUWB_CUSTOM_BACKOFF:Ljava/lang/String;
 
-    invoke-virtual {p4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {p4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    invoke-virtual {p4, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {p4, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    iget-object v3, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mUWB_CUSTOM_BACKOFF:Ljava/lang/String;
+    iget-object v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mUWB_CUSTOM_BACKOFF:Ljava/lang/String;
 
-    invoke-virtual {p4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {p4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
     invoke-virtual {p4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
 
@@ -570,7 +568,7 @@
 
     iput-object p4, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mUWB_CUSTOM_BACKOFF:Ljava/lang/String;
 
-    iput-boolean v2, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mIsUwbBackoffDefined:Z
+    iput-boolean v3, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mIsUwbBackoffDefined:Z
 
     sget-boolean p4, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->DBG:Z
 
@@ -578,53 +576,53 @@
 
     new-instance p4, Ljava/lang/StringBuilder;
 
-    const-string v3, "UWB Backoff is defined as "
+    const-string v0, "UWB Backoff is defined as "
 
-    invoke-direct {p4, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
+    invoke-direct {p4, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
 
-    iget-object v3, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mUWB_CUSTOM_BACKOFF:Ljava/lang/String;
+    iget-object v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mUWB_CUSTOM_BACKOFF:Ljava/lang/String;
 
-    invoke-static {p4, v3, v1}, Lcom/samsung/android/mcf/continuity/common/DLog$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V
+    invoke-static {p4, v0, v2}, Lcom/samsung/android/mcf/continuity/common/DLog$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V
 
     goto/16 :goto_4
 
     :cond_2
     iget-object p4, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCustomBackoffArray:[Ljava/lang/String;
 
-    aget-object p4, p4, p2
+    aget-object p4, p4, p3
 
-    const-string v3, "CAM_FRONT"
+    const-string v0, "CAM_FRONT"
 
-    invoke-virtual {v3, p4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+    invoke-virtual {v0, p4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
 
     move-result p4
 
     if-eqz p4, :cond_4
 
-    add-int/lit8 p4, p2, 0x6
+    add-int/lit8 p4, p3, 0x6
 
     :goto_2
-    add-int/2addr p2, v2
+    add-int/2addr p3, v3
 
-    if-ge p2, p4, :cond_3
+    if-ge p3, p4, :cond_3
 
-    new-instance v3, Ljava/lang/StringBuilder;
+    new-instance v0, Ljava/lang/StringBuilder;
 
-    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V
 
     iget-object v4, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCAM_FRONT_CUSTOM_BACKOFF:Ljava/lang/String;
 
-    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
     iget-object v4, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCustomBackoffArray:[Ljava/lang/String;
 
-    aget-object v4, v4, p2
+    aget-object v4, v4, p3
 
-    invoke-static {v3, v4, p3}, Lcom/samsung/android/mcf/continuity/common/DLog$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+    invoke-static {v0, v4, p2}, Lcom/samsung/android/mcf/continuity/common/DLog$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 
-    move-result-object v3
+    move-result-object v0
 
-    iput-object v3, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCAM_FRONT_CUSTOM_BACKOFF:Ljava/lang/String;
+    iput-object v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCAM_FRONT_CUSTOM_BACKOFF:Ljava/lang/String;
 
     goto :goto_2
 
@@ -633,15 +631,15 @@
 
     invoke-direct {p4}, Ljava/lang/StringBuilder;-><init>()V
 
-    iget-object v3, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCAM_FRONT_CUSTOM_BACKOFF:Ljava/lang/String;
+    iget-object v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCAM_FRONT_CUSTOM_BACKOFF:Ljava/lang/String;
 
-    invoke-virtual {p4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {p4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    iget-object v3, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCustomBackoffArray:[Ljava/lang/String;
+    iget-object v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCustomBackoffArray:[Ljava/lang/String;
 
-    aget-object v3, v3, p2
+    aget-object v0, v0, p3
 
-    invoke-virtual {p4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {p4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
     invoke-virtual {p4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
 
@@ -653,15 +651,15 @@
 
     invoke-direct {p4}, Ljava/lang/StringBuilder;-><init>()V
 
-    iget-object v3, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCAM_FRONT_CUSTOM_BACKOFF:Ljava/lang/String;
+    iget-object v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCAM_FRONT_CUSTOM_BACKOFF:Ljava/lang/String;
 
-    invoke-virtual {p4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {p4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    invoke-virtual {p4, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {p4, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    iget-object v3, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCAM_FRONT_CUSTOM_BACKOFF:Ljava/lang/String;
+    iget-object v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCAM_FRONT_CUSTOM_BACKOFF:Ljava/lang/String;
 
-    invoke-virtual {p4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {p4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
     invoke-virtual {p4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
 
@@ -669,7 +667,7 @@
 
     iput-object p4, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCAM_FRONT_CUSTOM_BACKOFF:Ljava/lang/String;
 
-    iput-boolean v2, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mIsCamFrontBackoffDefined:Z
+    iput-boolean v3, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mIsCamFrontBackoffDefined:Z
 
     sget-boolean p4, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->DBG:Z
 
@@ -677,53 +675,53 @@
 
     new-instance p4, Ljava/lang/StringBuilder;
 
-    const-string v3, "CAM_F Backoff is defined as "
+    const-string v0, "CAM_F Backoff is defined as "
 
-    invoke-direct {p4, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
+    invoke-direct {p4, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
 
-    iget-object v3, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCAM_FRONT_CUSTOM_BACKOFF:Ljava/lang/String;
+    iget-object v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCAM_FRONT_CUSTOM_BACKOFF:Ljava/lang/String;
 
-    invoke-static {p4, v3, v1}, Lcom/samsung/android/mcf/continuity/common/DLog$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V
+    invoke-static {p4, v0, v2}, Lcom/samsung/android/mcf/continuity/common/DLog$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V
 
     goto/16 :goto_4
 
     :cond_4
     iget-object p4, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCustomBackoffArray:[Ljava/lang/String;
 
-    aget-object p4, p4, p2
+    aget-object p4, p4, p3
 
-    const-string v3, "CAM_BACK"
+    const-string v0, "CAM_BACK"
 
-    invoke-virtual {v3, p4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+    invoke-virtual {v0, p4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
 
     move-result p4
 
     if-eqz p4, :cond_6
 
-    add-int/lit8 p4, p2, 0x6
+    add-int/lit8 p4, p3, 0x6
 
     :goto_3
-    add-int/2addr p2, v2
+    add-int/2addr p3, v3
 
-    if-ge p2, p4, :cond_5
+    if-ge p3, p4, :cond_5
 
-    new-instance v3, Ljava/lang/StringBuilder;
+    new-instance v0, Ljava/lang/StringBuilder;
 
-    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V
 
     iget-object v4, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCAM_BACK_CUSTOM_BACKOFF:Ljava/lang/String;
 
-    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
     iget-object v4, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCustomBackoffArray:[Ljava/lang/String;
 
-    aget-object v4, v4, p2
+    aget-object v4, v4, p3
 
-    invoke-static {v3, v4, p3}, Lcom/samsung/android/mcf/continuity/common/DLog$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+    invoke-static {v0, v4, p2}, Lcom/samsung/android/mcf/continuity/common/DLog$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 
-    move-result-object v3
+    move-result-object v0
 
-    iput-object v3, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCAM_BACK_CUSTOM_BACKOFF:Ljava/lang/String;
+    iput-object v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCAM_BACK_CUSTOM_BACKOFF:Ljava/lang/String;
 
     goto :goto_3
 
@@ -732,15 +730,15 @@
 
     invoke-direct {p4}, Ljava/lang/StringBuilder;-><init>()V
 
-    iget-object v3, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCAM_BACK_CUSTOM_BACKOFF:Ljava/lang/String;
+    iget-object v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCAM_BACK_CUSTOM_BACKOFF:Ljava/lang/String;
 
-    invoke-virtual {p4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {p4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    iget-object v3, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCustomBackoffArray:[Ljava/lang/String;
+    iget-object v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCustomBackoffArray:[Ljava/lang/String;
 
-    aget-object v3, v3, p2
+    aget-object v0, v0, p3
 
-    invoke-virtual {p4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {p4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
     invoke-virtual {p4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
 
@@ -752,15 +750,15 @@
 
     invoke-direct {p4}, Ljava/lang/StringBuilder;-><init>()V
 
-    iget-object v3, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCAM_BACK_CUSTOM_BACKOFF:Ljava/lang/String;
+    iget-object v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCAM_BACK_CUSTOM_BACKOFF:Ljava/lang/String;
 
-    invoke-virtual {p4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {p4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    invoke-virtual {p4, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {p4, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    iget-object v3, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCAM_BACK_CUSTOM_BACKOFF:Ljava/lang/String;
+    iget-object v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCAM_BACK_CUSTOM_BACKOFF:Ljava/lang/String;
 
-    invoke-virtual {p4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {p4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
     invoke-virtual {p4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
 
@@ -768,7 +766,7 @@
 
     iput-object p4, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCAM_BACK_CUSTOM_BACKOFF:Ljava/lang/String;
 
-    iput-boolean v2, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mIsCamBackBackoffDefined:Z
+    iput-boolean v3, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mIsCamBackBackoffDefined:Z
 
     sget-boolean p4, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->DBG:Z
 
@@ -776,24 +774,24 @@
 
     new-instance p4, Ljava/lang/StringBuilder;
 
-    const-string v3, "CAM_B Backoff is defined as "
+    const-string v0, "CAM_B Backoff is defined as "
 
-    invoke-direct {p4, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
+    invoke-direct {p4, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
 
-    iget-object v3, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCAM_BACK_CUSTOM_BACKOFF:Ljava/lang/String;
+    iget-object v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCAM_BACK_CUSTOM_BACKOFF:Ljava/lang/String;
 
-    invoke-static {p4, v3, v1}, Lcom/samsung/android/mcf/continuity/common/DLog$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V
+    invoke-static {p4, v0, v2}, Lcom/samsung/android/mcf/continuity/common/DLog$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V
 
     goto/16 :goto_4
 
     :cond_6
     iget-object p4, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCustomBackoffArray:[Ljava/lang/String;
 
-    aget-object p4, p4, p2
+    aget-object p4, p4, p3
 
-    const-string v3, "UWB_5G_CX"
+    const-string v0, "UWB_5G_CX"
 
-    invoke-virtual {v3, p4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+    invoke-virtual {v0, p4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
 
     move-result p4
 
@@ -801,9 +799,9 @@
 
     iget-object p4, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCustomBackoffArray:[Ljava/lang/String;
 
-    add-int/lit8 p2, p2, 0x1
+    add-int/lit8 p3, p3, 0x1
 
-    aget-object p4, p4, p2
+    aget-object p4, p4, p3
 
     invoke-static {p4}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
 
@@ -813,9 +811,9 @@
 
     iget-object p4, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCustomBackoffArray:[Ljava/lang/String;
 
-    add-int/2addr p2, v2
+    add-int/2addr p3, v3
 
-    aget-object p4, p4, p2
+    aget-object p4, p4, p3
 
     invoke-static {p4}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
 
@@ -823,7 +821,7 @@
 
     iput p4, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->uwbCxEnd5gCh:I
 
-    iput-boolean v2, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mIsUwbCxfor5GhzDefined:Z
+    iput-boolean v3, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mIsUwbCxfor5GhzDefined:Z
 
     sget-boolean p4, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->DBG:Z
 
@@ -831,30 +829,30 @@
 
     new-instance p4, Ljava/lang/StringBuilder;
 
-    const-string v3, "UWB_5G_CX is defined as "
+    const-string v0, "UWB_5G_CX is defined as "
 
-    invoke-direct {p4, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
+    invoke-direct {p4, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
 
-    iget v3, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->uwbCxStart5gCh:I
+    iget v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->uwbCxStart5gCh:I
 
-    invoke-virtual {p4, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+    invoke-virtual {p4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
 
-    invoke-virtual {p4, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {p4, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    iget v3, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->uwbCxEnd5gCh:I
+    iget v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->uwbCxEnd5gCh:I
 
-    invoke-static {p4, v3, v1}, Lcom/samsung/android/server/wifi/SemCellularStateManager$1$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ILjava/lang/String;)V
+    invoke-static {p4, v0, v2}, Lcom/samsung/android/server/wifi/SemCellularStateManager$1$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ILjava/lang/String;)V
 
     goto :goto_4
 
     :cond_7
     iget-object p4, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCustomBackoffArray:[Ljava/lang/String;
 
-    aget-object p4, p4, p2
+    aget-object p4, p4, p3
 
-    const-string v3, "UWB_5G_1Tx_CX"
+    const-string v0, "UWB_5G_1Tx_CX"
 
-    invoke-virtual {v3, p4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+    invoke-virtual {v0, p4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
 
     move-result p4
 
@@ -862,9 +860,9 @@
 
     iget-object p4, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCustomBackoffArray:[Ljava/lang/String;
 
-    add-int/lit8 p2, p2, 0x1
+    add-int/lit8 p3, p3, 0x1
 
-    aget-object p4, p4, p2
+    aget-object p4, p4, p3
 
     invoke-static {p4}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
 
@@ -874,9 +872,9 @@
 
     iget-object p4, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCustomBackoffArray:[Ljava/lang/String;
 
-    add-int/2addr p2, v2
+    add-int/2addr p3, v3
 
-    aget-object p4, p4, p2
+    aget-object p4, p4, p3
 
     invoke-static {p4}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
 
@@ -886,9 +884,9 @@
 
     iget-object p4, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mCustomBackoffArray:[Ljava/lang/String;
 
-    add-int/2addr p2, v2
+    add-int/2addr p3, v3
 
-    aget-object p4, p4, p2
+    aget-object p4, p4, p3
 
     invoke-static {p4}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
 
@@ -896,7 +894,7 @@
 
     iput p4, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->uwb1TxCxAntId:I
 
-    iput-boolean v2, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mIsUwb1TxCxfor5GhzDefined:Z
+    iput-boolean v3, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mIsUwb1TxCxfor5GhzDefined:Z
 
     sget-boolean p4, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->DBG:Z
 
@@ -904,30 +902,30 @@
 
     new-instance p4, Ljava/lang/StringBuilder;
 
-    const-string v3, "UWB_5G_1Tx_CX is defined as "
+    const-string v0, "UWB_5G_1Tx_CX is defined as "
 
-    invoke-direct {p4, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
+    invoke-direct {p4, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
 
-    iget v3, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->uwb1TxCxStart5gCh:I
+    iget v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->uwb1TxCxStart5gCh:I
 
-    invoke-virtual {p4, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+    invoke-virtual {p4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
 
-    invoke-virtual {p4, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {p4, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    iget v3, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->uwb1TxCxEnd5gCh:I
+    iget v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->uwb1TxCxEnd5gCh:I
 
-    invoke-static {p4, v3, v1}, Lcom/samsung/android/server/wifi/SemCellularStateManager$1$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ILjava/lang/String;)V
+    invoke-static {p4, v0, v2}, Lcom/samsung/android/server/wifi/SemCellularStateManager$1$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ILjava/lang/String;)V
 
     :cond_8
     :goto_4
-    add-int/2addr p2, v2
+    add-int/2addr p3, v3
 
     goto/16 :goto_0
 
     :cond_9
-    iput v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->laaEnterState:I
+    iput v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->laaEnterState:I
 
-    iput v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->laaActiveState:I
+    iput v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->laaActiveState:I
 
     new-instance p2, Landroid/content/IntentFilter;
 
@@ -949,7 +947,7 @@
 
     new-instance p2, Lcom/samsung/android/server/wifi/SemWifiCoexManager$SoftApCallback;
 
-    invoke-direct {p2, p0, v0}, Lcom/samsung/android/server/wifi/SemWifiCoexManager$SoftApCallback;-><init>(Lcom/samsung/android/server/wifi/SemWifiCoexManager;I)V
+    invoke-direct {p2, p0, v1}, Lcom/samsung/android/server/wifi/SemWifiCoexManager$SoftApCallback;-><init>(Lcom/samsung/android/server/wifi/SemWifiCoexManager;I)V
 
     iput-object p2, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mSoftApCallback:Lcom/samsung/android/server/wifi/SemWifiCoexManager$SoftApCallback;
 
@@ -1726,36 +1724,10 @@
 .end method
 
 .method public getWifiUwbCoexMode()Ljava/lang/String;
-    .locals 2
-
-    iget-object v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mWifiManagerProxy:Lcom/samsung/android/server/wifi/SemWifiManagerProxy;
-
-    invoke-virtual {v0}, Lcom/samsung/android/server/wifi/SemWifiManagerProxy;->isWifiEnabled()Z
-
-    move-result v0
-
-    if-eqz v0, :cond_0
-
-    iget-object p0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mWifiNative:Lcom/samsung/android/server/wifi/halclient/SemWifiNative;
-
-    const-string v0, "wlan0"
-
-    invoke-virtual {p0, v0}, Lcom/samsung/android/server/wifi/halclient/SemWifiNative;->getWifiUwbCoexMode(Ljava/lang/String;)Ljava/lang/String;
-
-    move-result-object p0
-
-    const-string v0, "getWifiUwbCoexMode - return str = "
-
-    const-string v1, "SemWifiCoexManager"
-
-    invoke-static {v0, p0, v1}, Lcom/samsung/android/server/wifi/SemClientModeManager$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
-
-    goto :goto_0
+    .locals 0
 
-    :cond_0
-    const-string p0, ""
+    const/4 p0, 0x0
 
-    :goto_0
     return-object p0
 .end method
 
@@ -1902,17 +1874,17 @@
 .end method
 
 .method public setWifiUwbCoexEnabled(IZ)I
-    .locals 10
+    .locals 2
 
     iget-boolean v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mIsUwbBackoffDefined:Z
 
-    const/4 v1, 0x5
-
-    const/4 v2, 0x0
+    const/4 v1, 0x0
 
     if-eqz v0, :cond_2
 
-    if-eq p1, v1, :cond_1
+    const/4 v0, 0x5
+
+    if-eq p1, v0, :cond_1
 
     const/16 v0, 0x9
 
@@ -1921,7 +1893,7 @@
     goto :goto_0
 
     :cond_0
-    iput-boolean v2, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mUwbBackoffEnable:Z
+    iput-boolean v1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mUwbBackoffEnable:Z
 
     goto :goto_1
 
@@ -1930,125 +1902,8 @@
     iput-boolean p2, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mUwbBackoffEnable:Z
 
     :goto_1
-    invoke-direct {p0, v2}, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->setWifiCustomBackoff(Z)Z
+    invoke-direct {p0, v1}, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->setWifiCustomBackoff(Z)Z
 
     :cond_2
-    iput p1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mUwbCh:I
-
-    if-ne p1, v1, :cond_3
-
-    iput-boolean p2, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mIsUwbCxEnabled:Z
-
-    iget-boolean p2, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mIsUwbCxfor5GhzDefined:Z
-
-    const/16 v0, 0x41
-
-    const/16 v1, 0xbd
-
-    if-eqz p2, :cond_4
-
-    iget p2, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->uwbCxStart5gCh:I
-
-    iget v3, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->uwbCxEnd5gCh:I
-
-    move v8, p2
-
-    move v6, v0
-
-    move v7, v1
-
-    move v9, v3
-
-    goto :goto_2
-
-    :cond_3
-    iput-boolean v2, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mIsUwbCxEnabled:Z
-
-    move v0, v2
-
-    move v1, v0
-
-    :cond_4
-    move v6, v0
-
-    move v7, v1
-
-    move v8, v2
-
-    move v9, v8
-
-    :goto_2
-    iget-object p2, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mWifiManagerProxy:Lcom/samsung/android/server/wifi/SemWifiManagerProxy;
-
-    invoke-virtual {p2}, Lcom/samsung/android/server/wifi/SemWifiManagerProxy;->isWifiEnabled()Z
-
-    move-result p2
-
-    const/4 v0, 0x2
-
-    if-eqz p2, :cond_6
-
-    iget-object p2, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mClientModeManager:Lcom/samsung/android/server/wifi/ISemInterfaceNameProvider;
-
-    invoke-interface {p2}, Lcom/samsung/android/server/wifi/ISemInterfaceNameProvider;->getPrimaryInterfaceName()Ljava/lang/String;
-
-    move-result-object v4
-
-    invoke-static {v4}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z
-
-    move-result p2
-
-    if-nez p2, :cond_6
-
-    iget-object v3, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mWifiNative:Lcom/samsung/android/server/wifi/halclient/SemWifiNative;
-
-    iget-boolean v5, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mIsUwbCxEnabled:Z
-
-    invoke-virtual/range {v3 .. v9}, Lcom/samsung/android/server/wifi/halclient/SemWifiNative;->setWifiUwbCoexEnabled(Ljava/lang/String;ZIIII)Z
-
-    move-result p2
-
-    if-eqz p2, :cond_5
-
-    goto :goto_3
-
-    :cond_5
-    move v2, v0
-
-    :goto_3
-    new-instance p2, Ljava/lang/StringBuilder;
-
-    const-string v0, "setWifiUwbCoexEnabled - enable = "
-
-    invoke-direct {p2, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
-
-    iget-boolean v0, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mIsUwbCxEnabled:Z
-
-    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;
-
-    const-string v0, " ch = "
-
-    invoke-virtual {p2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
-
-    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
-
-    const-string p1, " result = "
-
-    invoke-virtual {p2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
-
-    const-string p1, "SemWifiCoexManager"
-
-    invoke-static {p2, v2, p1}, Lcom/samsung/android/server/wifi/SemCellularStateManager$1$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ILjava/lang/String;)V
-
-    move v0, v2
-
-    :cond_6
-    iget-boolean p1, p0, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->mIsUwb1TxCxfor5GhzDefined:Z
-
-    if-eqz p1, :cond_7
-
-    invoke-direct {p0}, Lcom/samsung/android/server/wifi/SemWifiCoexManager;->setTxMode()V
-
-    :cond_7
-    return v0
+    return v1
 .end method
diff --git a/smali/com/samsung/android/server/wifi/SemWifiManagerProxy.smali b/smali/com/samsung/android/server/wifi/SemWifiManagerProxy.smali
index af3182a..4175947 100644
--- a/smali/com/samsung/android/server/wifi/SemWifiManagerProxy.smali
+++ b/smali/com/samsung/android/server/wifi/SemWifiManagerProxy.smali
@@ -3933,7 +3933,7 @@
 .method public isWifiApSmartPrioritySupported()Z
     .locals 0
 
-    const/4 p0, 0x1
+    const/4 p0, 0x0
 
     return p0
 .end method
diff --git a/smali/com/samsung/android/server/wifi/ap/SemSettingsSoftResetHandler.smali b/smali/com/samsung/android/server/wifi/ap/SemSettingsSoftResetHandler.smali
index 2adba58..48be871 100644
--- a/smali/com/samsung/android/server/wifi/ap/SemSettingsSoftResetHandler.smali
+++ b/smali/com/samsung/android/server/wifi/ap/SemSettingsSoftResetHandler.smali
@@ -125,28 +125,14 @@
 .method public resetHotspotSettings()V
     .locals 5
 
-    const-string v0, "disabling traffic priority"
+    sget-object v0, Lcom/samsung/android/server/wifi/ap/SemSettingsSoftResetHandler;->CONFIGOPBRANDINGFORMOBILEAP:Ljava/lang/String;
 
     const-string v1, "SemSettingsSoftResetHandler"
 
-    invoke-static {v1, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
-
-    iget-object v0, p0, Lcom/samsung/android/server/wifi/ap/SemSettingsSoftResetHandler;->mContext:Landroid/content/Context;
-
-    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;
-
-    move-result-object v0
-
-    const-string v2, "wifi_ap_smart_priority_enable"
+    const-string v2, "TMO"
 
     const/4 v3, 0x0
 
-    invoke-static {v0, v2, v3}, Landroid/provider/Settings$Secure;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z
-
-    sget-object v0, Lcom/samsung/android/server/wifi/ap/SemSettingsSoftResetHandler;->CONFIGOPBRANDINGFORMOBILEAP:Ljava/lang/String;
-
-    const-string v2, "TMO"
-
     invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
 
     move-result v2
@@ -226,16 +212,6 @@
 
     invoke-static {v0, v1, v3}, Landroid/provider/Settings$Secure;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z
 
-    iget-object v0, p0, Lcom/samsung/android/server/wifi/ap/SemSettingsSoftResetHandler;->mContext:Landroid/content/Context;
-
-    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;
-
-    move-result-object v0
-
-    const-string v1, "wifi_ap_11ax_mode_checked"
-
-    invoke-static {v0, v1, v3}, Landroid/provider/Settings$Secure;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z
-
     invoke-static {}, Lcom/samsung/android/server/wifi/SemWifiInjector;->getInstance()Lcom/samsung/android/server/wifi/SemWifiInjector;
 
     move-result-object v0
diff --git a/smali/com/samsung/android/server/wifi/ap/SemSoftApConfiguration$13.smali b/smali/com/samsung/android/server/wifi/ap/SemSoftApConfiguration$13.smali
new file mode 100644
index 0000000..4cc6f0f
--- /dev/null
+++ b/smali/com/samsung/android/server/wifi/ap/SemSoftApConfiguration$13.smali
@@ -0,0 +1,36 @@
+.class Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration$13;
+.super Landroid/util/SparseIntArray;
+.source "SemSoftApConfiguration.java"
+
+
+# annotations
+.annotation system Ldalvik/annotation/EnclosingMethod;
+    value = Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->setSoftApConfiguration(Landroid/net/wifi/SoftApConfiguration;)Landroid/net/wifi/SoftApConfiguration;
+.end annotation
+
+.annotation system Ldalvik/annotation/InnerClass;
+    accessFlags = 0x0
+    name = null
+.end annotation
+
+
+# instance fields
+.field final synthetic this$0:Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;
+
+
+# direct methods
+.method constructor <init>(Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;)V
+    .locals 1
+
+    iput-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration$13;->this$0:Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;
+
+    invoke-direct {p0}, Landroid/util/SparseIntArray;-><init>()V
+
+    const/4 p1, 0x1
+
+    const/4 v0, 0x0
+
+    invoke-virtual {p0, p1, v0}, Landroid/util/SparseIntArray;->put(II)V
+
+    return-void
+.end method
diff --git a/smali/com/samsung/android/server/wifi/ap/SemSoftApConfiguration$4.smali b/smali/com/samsung/android/server/wifi/ap/SemSoftApConfiguration$4.smali
new file mode 100644
index 0000000..ecd7d46
--- /dev/null
+++ b/smali/com/samsung/android/server/wifi/ap/SemSoftApConfiguration$4.smali
@@ -0,0 +1,38 @@
+.class Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration$4;
+.super Landroid/util/SparseIntArray;
+.source "SemSoftApConfiguration.java"
+
+
+# annotations
+.annotation system Ldalvik/annotation/EnclosingMethod;
+    value = Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->setSoftApConfiguration(Landroid/net/wifi/SoftApConfiguration;)Landroid/net/wifi/SoftApConfiguration;
+.end annotation
+
+.annotation system Ldalvik/annotation/InnerClass;
+    accessFlags = 0x0
+    name = null
+.end annotation
+
+
+# instance fields
+.field final synthetic this$0:Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;
+
+
+# direct methods
+.method constructor <init>(Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;)V
+    .locals 1
+
+    iput-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration$4;->this$0:Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;
+
+    invoke-direct {p0}, Landroid/util/SparseIntArray;-><init>()V
+
+    const/4 v0, 0x1
+
+    invoke-static {p1}, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->-$$Nest$fgetchannel2G(Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;)I
+
+    move-result p1
+
+    invoke-virtual {p0, v0, p1}, Landroid/util/SparseIntArray;->put(II)V
+
+    return-void
+.end method
diff --git a/smali/com/samsung/android/server/wifi/ap/SemSoftApConfiguration$9.smali b/smali/com/samsung/android/server/wifi/ap/SemSoftApConfiguration$9.smali
new file mode 100644
index 0000000..87ab53d
--- /dev/null
+++ b/smali/com/samsung/android/server/wifi/ap/SemSoftApConfiguration$9.smali
@@ -0,0 +1,36 @@
+.class Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration$9;
+.super Landroid/util/SparseIntArray;
+.source "SemSoftApConfiguration.java"
+
+
+# annotations
+.annotation system Ldalvik/annotation/EnclosingMethod;
+    value = Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->setSoftApConfiguration(Landroid/net/wifi/SoftApConfiguration;)Landroid/net/wifi/SoftApConfiguration;
+.end annotation
+
+.annotation system Ldalvik/annotation/InnerClass;
+    accessFlags = 0x0
+    name = null
+.end annotation
+
+
+# instance fields
+.field final synthetic this$0:Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;
+
+
+# direct methods
+.method constructor <init>(Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;)V
+    .locals 1
+
+    iput-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration$9;->this$0:Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;
+
+    invoke-direct {p0}, Landroid/util/SparseIntArray;-><init>()V
+
+    const/4 p1, 0x1
+
+    const/4 v0, 0x0
+
+    invoke-virtual {p0, p1, v0}, Landroid/util/SparseIntArray;->put(II)V
+
+    return-void
+.end method
diff --git a/smali/com/samsung/android/server/wifi/ap/SemSoftApConfiguration.smali b/smali/com/samsung/android/server/wifi/ap/SemSoftApConfiguration.smali
index f50d026..7917ad7 100644
--- a/smali/com/samsung/android/server/wifi/ap/SemSoftApConfiguration.smali
+++ b/smali/com/samsung/android/server/wifi/ap/SemSoftApConfiguration.smali
@@ -2751,53 +2751,17 @@
 .end method
 
 .method public isWifiApEnabledWithDualBand()Z
-    .locals 2
-
-    iget-object p0, p0, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->mWifiApServiceImpl:Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;
-
-    invoke-virtual {p0}, Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;->getSoftApConfiguration()Landroid/net/wifi/SoftApConfiguration;
-
-    move-result-object p0
-
-    invoke-virtual {p0}, Landroid/net/wifi/SoftApConfiguration;->getChannels()Landroid/util/SparseIntArray;
-
-    move-result-object p0
-
-    invoke-virtual {p0}, Landroid/util/SparseIntArray;->size()I
-
-    move-result p0
-
-    const/4 v0, 0x1
-
-    if-le p0, v0, :cond_0
-
-    invoke-static {}, Lcom/samsung/android/server/wifi/SemWifiInjector;->getInstance()Lcom/samsung/android/server/wifi/SemWifiInjector;
-
-    move-result-object p0
-
-    invoke-virtual {p0}, Lcom/samsung/android/server/wifi/SemWifiInjector;->getSoftApManager()Lcom/samsung/android/server/wifi/ap/SemSoftApManager;
-
-    move-result-object p0
-
-    invoke-virtual {p0}, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->checkDualBandHostapd()Z
-
-    move-result p0
-
-    if-eqz p0, :cond_0
-
-    goto :goto_0
+    .locals 1
 
-    :cond_0
-    const/4 v0, 0x0
+    const-string p0, "SemSoftApConfiguration"
 
-    :goto_0
-    const-string p0, "isWifiApEnabledWithDualBand API:"
+    const-string v0, "isWifiApEnabledWithDualBand API:false"
 
-    const-string v1, "SemSoftApConfiguration"
+    invoke-static {p0, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
 
-    invoke-static {p0, v0, v1}, Lcom/samsung/android/server/wifi/SemCellularStateManager$1$$ExternalSyntheticOutline0;->m(Ljava/lang/String;ZLjava/lang/String;)V
+    const/4 p0, 0x0
 
-    return v0
+    return p0
 .end method
 
 .method public isWifiApGuestModeEnabled()Z
@@ -3189,76 +3153,78 @@
 
     move-result-object v12
 
-    const-string v14, "wifi_ap_disable_random_mac"
+    const-string v13, "wifi_ap_disable_random_mac"
 
-    invoke-static {v12, v14, v9}, Landroid/provider/Settings$Secure;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I
+    invoke-static {v12, v13, v9}, Landroid/provider/Settings$Secure;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I
 
     move-result v12
 
     if-ne v12, v10, :cond_8
 
+    move v12, v10
+
     goto :goto_6
 
     :cond_8
-    move v10, v9
+    move v12, v9
 
     :goto_6
-    iput-boolean v10, v1, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->mDisableRandomMac:Z
+    iput-boolean v12, v1, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->mDisableRandomMac:Z
 
-    iget-object v10, v1, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->mContext:Landroid/content/Context;
+    iget-object v12, v1, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->mContext:Landroid/content/Context;
 
-    invoke-virtual {v10}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;
+    invoke-virtual {v12}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;
 
-    move-result-object v10
+    move-result-object v12
 
-    const-string v12, "wifi_ap_last_2g_channel"
+    const-string v13, "wifi_ap_last_2g_channel"
 
-    invoke-static {v10, v12, v9}, Landroid/provider/Settings$Secure;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I
+    invoke-static {v12, v13, v9}, Landroid/provider/Settings$Secure;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I
 
-    move-result v10
+    move-result v12
 
-    iput v10, v1, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->channel2G:I
+    iput v12, v1, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->channel2G:I
 
-    if-gez v10, :cond_9
+    if-gez v12, :cond_9
 
     iput v9, v1, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->channel2G:I
 
     :cond_9
-    new-instance v10, Ljava/lang/StringBuilder;
+    new-instance v12, Ljava/lang/StringBuilder;
 
-    const-string v12, "setSoftApConfiguration() mDisableRandomMac: "
+    const-string v13, "setSoftApConfiguration() mDisableRandomMac: "
 
-    invoke-direct {v10, v12}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
+    invoke-direct {v12, v13}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
 
-    iget-boolean v12, v1, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->mDisableRandomMac:Z
+    iget-boolean v13, v1, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->mDisableRandomMac:Z
 
-    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;
+    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;
 
-    const-string v12, " mChannel "
+    const-string v13, " mChannel "
 
-    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    invoke-virtual {v10, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+    invoke-virtual {v12, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
 
-    const-string v12, " mMAXClients "
+    const-string v13, " mMAXClients "
 
-    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    invoke-virtual {v10, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+    invoke-virtual {v12, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
 
-    const-string v12, " mIs11Ax "
+    const-string v13, " mIs11Ax "
 
-    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    iget-boolean v12, v1, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->mIs11Ax:Z
+    iget-boolean v13, v1, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->mIs11Ax:Z
 
-    invoke-static {v10, v12, v3}, Lcom/samsung/android/server/wifi/SemCellularStateManager$1$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ZLjava/lang/String;)V
+    invoke-static {v12, v13, v3}, Lcom/samsung/android/server/wifi/SemCellularStateManager$1$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ZLjava/lang/String;)V
 
-    const-string v10, "vendor.wifiap.pmf"
+    const-string v12, "vendor.wifiap.pmf"
 
-    const-string v12, "0"
+    const-string v13, "0"
 
-    invoke-static {v10, v12}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
+    invoke-static {v12, v13}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
 
     iget-object v14, v1, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->mContext:Landroid/content/Context;
 
@@ -3274,41 +3240,18 @@
 
     const-string v14, "1"
 
-    const/4 v15, 0x1
+    if-ne v9, v10, :cond_a
 
-    if-ne v9, v15, :cond_a
-
-    invoke-static {v10, v14}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
+    invoke-static {v12, v14}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
 
     :cond_a
     const-string v9, "vendor.wifiap.axmode"
 
-    invoke-static {v9, v12}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
-
-    iget-object v15, v1, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->mContext:Landroid/content/Context;
+    invoke-static {v9, v13}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
 
-    invoke-virtual {v15}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;
+    if-nez v8, :cond_b
 
-    move-result-object v15
-
-    move-object/from16 p1, v7
-
-    const/4 v7, 0x0
-
-    invoke-static {v15, v13, v7}, Landroid/provider/Settings$Secure;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I
-
-    move-result v7
-
-    const/4 v13, 0x1
-
-    if-ne v7, v13, :cond_b
-
-    invoke-static {v9, v14}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
-
-    :cond_b
-    if-nez v8, :cond_c
-
-    if-nez v11, :cond_c
+    if-nez v11, :cond_b
 
     const-string v4, " only 2G supported countries"
 
@@ -3320,36 +3263,47 @@
 
     goto/16 :goto_7
 
-    :cond_c
+    :cond_b
     if-eqz v4, :cond_13
 
     invoke-virtual {v4}, Landroid/util/SparseIntArray;->size()I
 
-    const/4 v7, 0x0
+    move-result v15
 
-    invoke-virtual {v4, v7}, Landroid/util/SparseIntArray;->keyAt(I)I
+    if-le v15, v10, :cond_c
 
-    move-result v7
+    const-string v4, " SPF dualAp is not enabled"
 
-    and-int/lit8 v7, v7, 0x4
+    invoke-static {v3, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
 
-    if-nez v7, :cond_d
+    new-instance v4, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration$4;
 
-    invoke-virtual {v4}, Landroid/util/SparseIntArray;->size()I
+    invoke-direct {v4, v1}, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration$4;-><init>(Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;)V
 
-    move-result v7
+    :cond_c
+    const/4 v15, 0x0
 
-    const/4 v13, 0x1
+    invoke-virtual {v4, v15}, Landroid/util/SparseIntArray;->keyAt(I)I
 
-    if-le v7, v13, :cond_e
+    move-result v15
 
-    invoke-virtual {v4, v13}, Landroid/util/SparseIntArray;->keyAt(I)I
+    and-int/lit8 v15, v15, 0x4
 
-    move-result v7
+    if-nez v15, :cond_d
+
+    invoke-virtual {v4}, Landroid/util/SparseIntArray;->size()I
+
+    move-result v15
+
+    if-le v15, v10, :cond_e
 
-    and-int/lit8 v7, v7, 0x4
+    invoke-virtual {v4, v10}, Landroid/util/SparseIntArray;->keyAt(I)I
 
-    if-eqz v7, :cond_e
+    move-result v15
+
+    and-int/lit8 v15, v15, 0x4
+
+    if-eqz v15, :cond_e
 
     :cond_d
     if-nez v11, :cond_e
@@ -3363,31 +3317,29 @@
     invoke-direct {v4, v1}, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration$5;-><init>(Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;)V
 
     :cond_e
-    const/4 v7, 0x0
+    const/4 v11, 0x0
 
-    invoke-virtual {v4, v7}, Landroid/util/SparseIntArray;->keyAt(I)I
+    invoke-virtual {v4, v11}, Landroid/util/SparseIntArray;->keyAt(I)I
 
-    move-result v7
+    move-result v11
 
-    and-int/lit8 v7, v7, 0x2
+    and-int/lit8 v11, v11, 0x2
 
-    if-nez v7, :cond_f
+    if-nez v11, :cond_f
 
     invoke-virtual {v4}, Landroid/util/SparseIntArray;->size()I
 
-    move-result v7
-
-    const/4 v11, 0x1
+    move-result v11
 
-    if-le v7, v11, :cond_10
+    if-le v11, v10, :cond_10
 
-    invoke-virtual {v4, v11}, Landroid/util/SparseIntArray;->keyAt(I)I
+    invoke-virtual {v4, v10}, Landroid/util/SparseIntArray;->keyAt(I)I
 
-    move-result v7
+    move-result v11
 
-    and-int/lit8 v7, v7, 0x2
+    and-int/lit8 v11, v11, 0x2
 
-    if-eqz v7, :cond_10
+    if-eqz v11, :cond_10
 
     :cond_f
     if-nez v8, :cond_10
@@ -3403,21 +3355,19 @@
     :cond_10
     invoke-virtual {v4}, Landroid/util/SparseIntArray;->size()I
 
-    move-result v7
-
-    const/4 v8, 0x1
+    move-result v8
 
-    if-ne v7, v8, :cond_12
+    if-ne v8, v10, :cond_12
 
-    const/4 v7, 0x0
+    const/4 v8, 0x0
 
-    invoke-virtual {v4, v7}, Landroid/util/SparseIntArray;->keyAt(I)I
+    invoke-virtual {v4, v8}, Landroid/util/SparseIntArray;->keyAt(I)I
 
-    move-result v8
+    move-result v11
 
-    const/4 v11, 0x3
+    const/4 v15, 0x3
 
-    if-ne v8, v11, :cond_11
+    if-ne v11, v15, :cond_11
 
     const-string v4, "2.4 and 5 set in  single band"
 
@@ -3430,13 +3380,13 @@
     goto :goto_7
 
     :cond_11
-    invoke-virtual {v4, v7}, Landroid/util/SparseIntArray;->keyAt(I)I
+    invoke-virtual {v4, v8}, Landroid/util/SparseIntArray;->keyAt(I)I
 
-    move-result v7
+    move-result v8
 
-    const/4 v8, 0x5
+    const/4 v11, 0x5
 
-    if-ne v7, v8, :cond_14
+    if-ne v8, v11, :cond_14
 
     const-string v4, "2.4 and 6 set in single band "
 
@@ -3451,125 +3401,180 @@
     :cond_12
     invoke-virtual {v4}, Landroid/util/SparseIntArray;->size()I
 
-    move-result v7
+    move-result v8
 
-    const/4 v8, 0x2
+    const/4 v11, 0x2
 
-    if-ne v7, v8, :cond_14
+    if-ne v8, v11, :cond_14
 
     sget-object v4, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->mDualAp5GHzChannels:Landroid/util/SparseIntArray;
 
     goto :goto_7
 
     :cond_13
-    const-string v7, "mChannels is null"
+    const-string v8, "mChannels is null"
 
-    invoke-static {v3, v7}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+    invoke-static {v3, v8}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
 
     :cond_14
     :goto_7
-    const-string v7, "vendor.wifiap.owe_security"
+    const-string v8, "vendor.wifiap.owe_security"
 
-    invoke-static {v7, v12}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
+    invoke-static {v8, v13}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
 
-    if-eqz v6, :cond_15
+    if-eqz v6, :cond_17
 
     invoke-virtual {v6}, Landroid/net/wifi/SoftApConfiguration;->getSecurityType()I
 
-    move-result v8
+    move-result v11
 
-    const/4 v11, 0x5
+    const/4 v15, 0x5
 
-    if-ne v8, v11, :cond_15
+    if-ne v11, v15, :cond_17
 
-    invoke-static {v7, v14}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
+    const-string v11, "OWE is set but OWE SPF not enabled"
 
-    :cond_15
-    const-string v8, "vendor.wifiap.11acmode"
+    invoke-static {v3, v11}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
 
-    invoke-static {v8, v12}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
+    if-eqz v4, :cond_16
 
-    if-eqz v4, :cond_17
+    const/4 v11, 0x0
 
-    invoke-virtual {v4}, Landroid/util/SparseIntArray;->size()I
+    invoke-virtual {v4, v11}, Landroid/util/SparseIntArray;->keyAt(I)I
 
     move-result v11
 
-    const/4 v13, 0x1
+    and-int/lit8 v11, v11, 0x4
 
-    if-ne v11, v13, :cond_16
+    if-nez v11, :cond_15
 
-    const/4 v11, 0x0
+    invoke-virtual {v4}, Landroid/util/SparseIntArray;->size()I
 
-    invoke-virtual {v4, v11}, Landroid/util/SparseIntArray;->keyAt(I)I
+    move-result v11
+
+    if-le v11, v10, :cond_16
+
+    invoke-virtual {v4, v10}, Landroid/util/SparseIntArray;->keyAt(I)I
 
     move-result v11
 
-    and-int/lit8 v11, v11, 0x1
+    and-int/lit8 v11, v11, 0x4
+
+    if-eqz v11, :cond_16
+
+    :cond_15
+    const-string v4, "OWE is set but OWE is not supported, and 6GHz selected error"
+
+    invoke-static {v3, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v4, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration$9;
+
+    invoke-direct {v4, v1}, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration$9;-><init>(Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;)V
+
+    const/4 v11, 0x0
+
+    const/4 v15, 0x0
 
-    if-nez v11, :cond_17
+    invoke-virtual {v7, v11, v15}, Landroid/net/wifi/SoftApConfiguration$Builder;->setPassphrase(Ljava/lang/String;I)Landroid/net/wifi/SoftApConfiguration$Builder;
+
+    goto :goto_8
 
     :cond_16
-    invoke-static {v8, v14}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
+    const/4 v11, 0x0
+
+    const/4 v15, 0x0
+
+    invoke-virtual {v7, v11, v15}, Landroid/net/wifi/SoftApConfiguration$Builder;->setPassphrase(Ljava/lang/String;I)Landroid/net/wifi/SoftApConfiguration$Builder;
+
+    goto :goto_8
 
     :cond_17
-    const-string v11, "SemSoftApConfiguration country:"
+    const/4 v15, 0x0
+
+    :goto_8
+    const-string v11, "vendor.wifiap.11acmode"
+
+    invoke-static {v11, v13}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
+
+    move-object/from16 p1, v7
+
+    if-eqz v4, :cond_19
 
-    const-string v13, " powersave:"
+    invoke-virtual {v4}, Landroid/util/SparseIntArray;->size()I
+
+    move-result v7
 
-    invoke-static {v11, v2, v13}, Lcom/google/gson/ToNumberPolicy$3$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;
+    if-ne v7, v10, :cond_18
+
+    invoke-virtual {v4, v15}, Landroid/util/SparseIntArray;->keyAt(I)I
+
+    move-result v7
+
+    and-int/2addr v7, v10
+
+    if-nez v7, :cond_19
+
+    :cond_18
+    invoke-static {v11, v14}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
+
+    :cond_19
+    const-string v7, "SemSoftApConfiguration country:"
+
+    const-string v15, " powersave:"
+
+    invoke-static {v7, v2, v15}, Lcom/google/gson/ToNumberPolicy$3$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;
 
     move-result-object v2
 
-    iget-boolean v11, v1, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->mPowerSaveChecked:Z
+    iget-boolean v7, v1, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->mPowerSaveChecked:Z
 
-    invoke-virtual {v2, v11}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;
+    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;
 
-    const-string v11, " mDisableRandomMac:"
+    const-string v7, " mDisableRandomMac:"
 
-    invoke-virtual {v2, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    iget-boolean v11, v1, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->mDisableRandomMac:Z
+    iget-boolean v7, v1, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->mDisableRandomMac:Z
 
-    invoke-virtual {v2, v11}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;
+    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;
 
-    const-string v11, " config_channels:"
+    const-string v7, " config_channels:"
 
-    invoke-virtual {v2, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
     invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
 
-    const-string v11, " mIs11Ax:"
+    const-string v7, " mIs11Ax:"
 
-    invoke-virtual {v2, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    iget-boolean v11, v1, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->mIs11Ax:Z
+    iget-boolean v7, v1, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->mIs11Ax:Z
 
-    invoke-virtual {v2, v11}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;
+    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;
 
-    const-string v11, " last2Gch:"
+    const-string v7, " last2Gch:"
 
-    invoke-virtual {v2, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    iget v11, v1, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->channel2G:I
+    iget v7, v1, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->channel2G:I
 
-    invoke-virtual {v2, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
 
-    const-string v11, " requirePMF:"
+    const-string v7, " requirePMF:"
 
-    invoke-virtual {v2, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    invoke-static {v10, v12}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+    invoke-static {v12, v13}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 
-    move-result-object v11
+    move-result-object v7
 
-    invoke-virtual {v2, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    const-string v11, " owe_security:"
+    const-string v7, " owe_security:"
 
-    invoke-virtual {v2, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    invoke-static {v7, v12}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+    invoke-static {v8, v13}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 
     move-result-object v7
 
@@ -3579,7 +3584,7 @@
 
     invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    invoke-static {v8, v12}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+    invoke-static {v11, v13}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 
     move-result-object v7
 
@@ -3589,7 +3594,7 @@
 
     invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    invoke-static {v9, v12}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+    invoke-static {v9, v13}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 
     move-result-object v7
 
@@ -3607,7 +3612,7 @@
 
     move-result v0
 
-    if-eqz v0, :cond_19
+    if-eqz v0, :cond_1b
 
     iget-object v0, v1, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->mContext:Landroid/content/Context;
 
@@ -3623,9 +3628,7 @@
 
     move-result v2
 
-    const/4 v7, 0x1
-
-    if-eq v7, v2, :cond_18
+    if-eq v10, v2, :cond_1a
 
     invoke-virtual {v0}, Landroid/telephony/TelephonyManager;->getNetworkType()I
 
@@ -3633,7 +3636,7 @@
 
     const/4 v7, 0x2
 
-    if-eq v7, v2, :cond_18
+    if-eq v7, v2, :cond_1a
 
     const/16 v2, 0x10
 
@@ -3641,20 +3644,20 @@
 
     move-result v7
 
-    if-eq v2, v7, :cond_18
+    if-eq v2, v7, :cond_1a
 
     invoke-virtual {v0}, Landroid/telephony/TelephonyManager;->getNetworkType()I
 
     move-result v0
 
-    if-nez v0, :cond_1a
+    if-nez v0, :cond_1c
 
-    :cond_18
-    const/4 v5, 0x1
+    :cond_1a
+    move v5, v10
 
-    goto :goto_8
+    goto :goto_9
 
-    :cond_19
+    :cond_1b
     invoke-static {}, Lcom/samsung/android/feature/SemCscFeature;->getInstance()Lcom/samsung/android/feature/SemCscFeature;
 
     move-result-object v0
@@ -3669,15 +3672,15 @@
 
     move-result v5
 
-    :cond_1a
-    :goto_8
+    :cond_1c
+    :goto_9
     const-string v0, "maxClient = "
 
     invoke-static {v0, v5, v3}, Lcom/samsung/android/server/wifi/SemClientModeManager$$ExternalSyntheticOutline0;->m(Ljava/lang/String;ILjava/lang/String;)V
 
     sget-boolean v0, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->MHSDBG:Z
 
-    if-eqz v0, :cond_1e
+    if-eqz v0, :cond_20
 
     const-string v2, "vendor.wifiap.debug.channel"
 
@@ -3693,13 +3696,13 @@
 
     const-string v8, ""
 
-    if-eqz v2, :cond_1d
+    if-eqz v2, :cond_1f
 
     invoke-virtual {v2, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
 
     move-result v11
 
-    if-nez v11, :cond_1d
+    if-nez v11, :cond_1f
 
     invoke-static {v2}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
 
@@ -3707,31 +3710,31 @@
 
     const/16 v4, 0x3e7
 
-    if-ne v2, v4, :cond_1b
+    if-ne v2, v4, :cond_1d
 
     new-instance v2, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration$10;
 
     invoke-direct {v2, v1}, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration$10;-><init>(Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;)V
 
-    goto :goto_9
+    goto :goto_a
 
-    :cond_1b
+    :cond_1d
     const/16 v4, 0x95
 
-    if-ne v2, v4, :cond_1c
+    if-ne v2, v4, :cond_1e
 
     new-instance v2, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration$11;
 
     invoke-direct {v2, v1}, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration$11;-><init>(Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;)V
 
-    goto :goto_9
+    goto :goto_a
 
-    :cond_1c
+    :cond_1e
     new-instance v2, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration$12;
 
     invoke-direct {v2, v1}, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration$12;-><init>(Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;)V
 
-    :goto_9
+    :goto_a
     new-instance v4, Ljava/lang/StringBuilder;
 
     const-string v11, "channel is changed "
@@ -3752,14 +3755,14 @@
 
     move-object v4, v2
 
-    :cond_1d
-    if-eqz v7, :cond_1e
+    :cond_1f
+    if-eqz v7, :cond_20
 
     invoke-virtual {v7, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
 
     move-result v2
 
-    if-nez v2, :cond_1e
+    if-nez v2, :cond_20
 
     invoke-static {v7}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
 
@@ -3779,16 +3782,16 @@
 
     invoke-static {v3, v2}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I
 
-    :cond_1e
+    :cond_20
     iget-object v2, v1, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->mWifiApServiceImpl:Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;
 
-    if-eqz v2, :cond_21
+    if-eqz v2, :cond_23
 
     invoke-virtual {v2}, Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;->supportWifiAp6GBasedOnCountry()Z
 
     move-result v2
 
-    if-eqz v2, :cond_21
+    if-eqz v2, :cond_23
 
     const/4 v2, 0x0
 
@@ -3798,41 +3801,34 @@
 
     and-int/lit8 v2, v2, 0x4
 
-    if-nez v2, :cond_1f
+    if-nez v2, :cond_21
 
     invoke-virtual {v4}, Landroid/util/SparseIntArray;->size()I
 
     move-result v2
 
-    const/4 v7, 0x1
-
-    if-le v2, v7, :cond_21
+    if-le v2, v10, :cond_23
 
-    invoke-virtual {v4, v7}, Landroid/util/SparseIntArray;->keyAt(I)I
+    invoke-virtual {v4, v10}, Landroid/util/SparseIntArray;->keyAt(I)I
 
     move-result v2
 
     and-int/lit8 v2, v2, 0x4
 
-    if-eqz v2, :cond_21
+    if-eqz v2, :cond_23
 
-    goto :goto_a
-
-    :cond_1f
-    const/4 v7, 0x1
-
-    :goto_a
+    :cond_21
     invoke-static {v9, v14}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
 
-    invoke-static {v10, v14}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
+    invoke-static {v12, v14}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
 
-    if-eqz v6, :cond_20
+    if-eqz v6, :cond_22
 
     invoke-virtual {v6}, Landroid/net/wifi/SoftApConfiguration;->getSecurityType()I
 
     move-result v2
 
-    if-ne v2, v7, :cond_20
+    if-ne v2, v10, :cond_22
 
     const-string v2, "6GHz selected, but WPA2 is set, error"
 
@@ -3850,33 +3846,31 @@
 
     goto :goto_b
 
-    :cond_20
+    :cond_22
     move-object/from16 v7, p1
 
-    if-eqz v6, :cond_22
+    if-eqz v6, :cond_24
 
     invoke-virtual {v6}, Landroid/net/wifi/SoftApConfiguration;->getSecurityType()I
 
     move-result v2
 
-    if-nez v2, :cond_22
+    if-nez v2, :cond_24
 
     const-string v2, "6GHz selected, but OPEN type is set, error"
 
     invoke-static {v3, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
 
-    const/4 v2, 0x5
+    new-instance v4, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration$13;
 
-    const/4 v6, 0x0
-
-    invoke-virtual {v7, v6, v2}, Landroid/net/wifi/SoftApConfiguration$Builder;->setPassphrase(Ljava/lang/String;I)Landroid/net/wifi/SoftApConfiguration$Builder;
+    invoke-direct {v4, v1}, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration$13;-><init>(Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;)V
 
     goto :goto_b
 
-    :cond_21
+    :cond_23
     move-object/from16 v7, p1
 
-    :cond_22
+    :cond_24
     :goto_b
     const-string v2, "vendor.wifiap.maxclient"
 
@@ -3912,7 +3906,7 @@
 
     move-result v6
 
-    if-nez v6, :cond_23
+    if-nez v6, :cond_25
 
     const-string v6, "Add Vendor specific IE DD040000F0FE"
 
@@ -3932,7 +3926,7 @@
 
     move-result-object v2
 
-    :cond_23
+    :cond_25
     const-string v6, "DD080050F21102000000"
 
     invoke-static {v2, v6}, Lcom/samsung/android/server/wifi/SemClientModeImpl$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
@@ -3945,7 +3939,7 @@
 
     const-string v6, "vendor.wifiap.5gindoor"
 
-    invoke-static {v6, v12}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
+    invoke-static {v6, v13}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
 
     const/4 v8, 0x2
 
@@ -3955,7 +3949,7 @@
 
     const/4 v9, -0x1
 
-    if-le v8, v9, :cond_24
+    if-le v8, v9, :cond_26
 
     iget-object v8, v1, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->mFacade:Lcom/samsung/android/server/wifi/SemFrameworkFacade;
 
@@ -3963,20 +3957,20 @@
 
     move-result v8
 
-    if-eqz v8, :cond_24
+    if-eqz v8, :cond_26
 
     invoke-static {v6, v14}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
 
-    :cond_24
+    :cond_26
     invoke-virtual {v7, v4}, Landroid/net/wifi/SoftApConfiguration$Builder;->setChannels(Landroid/util/SparseIntArray;)Landroid/net/wifi/SoftApConfiguration$Builder;
 
     const-string v4, "2"
 
-    if-eqz v0, :cond_26
+    if-eqz v0, :cond_28
 
     const-string v0, "vendor.wifiap.debug.dualap"
 
-    invoke-static {v0, v12}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+    invoke-static {v0, v13}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 
     move-result-object v0
 
@@ -3984,7 +3978,7 @@
 
     move-result v6
 
-    if-eqz v6, :cond_25
+    if-eqz v6, :cond_27
 
     const-string v6, "Enabling in  2.4+ 5GHz  DualApMode"
 
@@ -3994,12 +3988,12 @@
 
     invoke-virtual {v7, v6}, Landroid/net/wifi/SoftApConfiguration$Builder;->setChannels(Landroid/util/SparseIntArray;)Landroid/net/wifi/SoftApConfiguration$Builder;
 
-    :cond_25
+    :cond_27
     invoke-virtual {v0, v4}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z
 
     move-result v0
 
-    if-eqz v0, :cond_26
+    if-eqz v0, :cond_28
 
     const-string v0, "Enabling in 2.4+ 6GHz DualApMode"
 
@@ -4009,18 +4003,16 @@
 
     invoke-virtual {v7, v0}, Landroid/net/wifi/SoftApConfiguration$Builder;->setChannels(Landroid/util/SparseIntArray;)Landroid/net/wifi/SoftApConfiguration$Builder;
 
-    :cond_26
+    :cond_28
     iget-boolean v0, v1, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->mDisableRandomMac:Z
 
-    if-nez v0, :cond_27
+    if-nez v0, :cond_29
 
     const-string v0, "setSoftApConfiguration() setBssid(null). randomMac will be set in WifiApConfigStore randomizeBssidIfUnset()"
 
     invoke-static {v3, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
 
-    const/4 v0, 0x1
-
-    invoke-virtual {v7, v0}, Landroid/net/wifi/SoftApConfiguration$Builder;->setMacRandomizationSetting(I)Landroid/net/wifi/SoftApConfiguration$Builder;
+    invoke-virtual {v7, v10}, Landroid/net/wifi/SoftApConfiguration$Builder;->setMacRandomizationSetting(I)Landroid/net/wifi/SoftApConfiguration$Builder;
 
     const/4 v0, 0x0
 
@@ -4028,9 +4020,9 @@
 
     const/4 v0, 0x0
 
-    goto/16 :goto_10
+    goto/16 :goto_f
 
-    :cond_27
+    :cond_29
     invoke-static {}, Lcom/samsung/android/server/wifi/SemWifiInjector;->getInstance()Lcom/samsung/android/server/wifi/SemWifiInjector;
 
     move-result-object v0
@@ -4045,7 +4037,7 @@
 
     array-length v6, v0
 
-    if-lez v6, :cond_28
+    if-lez v6, :cond_2a
 
     const/4 v6, 0x0
 
@@ -4057,15 +4049,15 @@
 
     move-result v9
 
-    if-nez v9, :cond_29
+    if-nez v9, :cond_2b
 
     invoke-virtual {v0}, Ljava/lang/String;->length()I
 
     move-result v9
 
-    const/16 v10, 0xc
+    const/16 v11, 0xc
 
-    if-ne v9, v10, :cond_29
+    if-ne v9, v11, :cond_2b
 
     const/4 v9, 0x2
 
@@ -4103,9 +4095,7 @@
 
     const/16 v6, 0xa
 
-    const/16 v9, 0xc
-
-    invoke-virtual {v0, v6, v9}, Ljava/lang/String;->subSequence(II)Ljava/lang/CharSequence;
+    invoke-virtual {v0, v6, v11}, Ljava/lang/String;->subSequence(II)Ljava/lang/CharSequence;
 
     move-result-object v20
 
@@ -4123,14 +4113,14 @@
 
     goto :goto_c
 
-    :cond_28
+    :cond_2a
     const/4 v0, 0x0
 
-    :cond_29
+    :cond_2b
     :goto_c
     iget-boolean v6, v1, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->isJDMDevice:Z
 
-    if-eqz v6, :cond_2a
+    if-eqz v6, :cond_2c
 
     invoke-static {}, Lcom/samsung/android/wifi/SemWifiApMacInfo;->getInstance()Lcom/samsung/android/wifi/SemWifiApMacInfo;
 
@@ -4152,16 +4142,16 @@
 
     invoke-static {v6, v8, v3}, Lcom/samsung/android/mcf/continuity/common/DLog$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V
 
-    :cond_2a
-    if-eqz v0, :cond_2b
+    :cond_2c
+    if-eqz v0, :cond_2d
 
     invoke-virtual {v0}, Ljava/lang/String;->length()I
 
     move-result v6
 
-    if-gtz v6, :cond_2c
+    if-gtz v6, :cond_2e
 
-    :cond_2b
+    :cond_2d
     invoke-static {}, Lcom/samsung/android/server/wifi/SemWifiInjector;->getInstance()Lcom/samsung/android/server/wifi/SemWifiInjector;
 
     move-result-object v0
@@ -4178,8 +4168,8 @@
 
     invoke-static {v6, v0, v3}, Lcom/samsung/android/server/wifi/SemClientModeManager$$ExternalSyntheticOutline0;->m$1(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
 
-    :cond_2c
-    if-eqz v0, :cond_32
+    :cond_2e
+    if-eqz v0, :cond_33
 
     invoke-virtual {v0}, Ljava/lang/String;->length()I
 
@@ -4187,16 +4177,16 @@
 
     const/16 v8, 0x11
 
-    if-eq v6, v8, :cond_2d
+    if-eq v6, v8, :cond_2f
 
-    goto/16 :goto_e
+    goto/16 :goto_d
 
-    :cond_2d
+    :cond_2f
     iget-boolean v6, v1, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->isJDMDevice:Z
 
     const-string v8, ", apMac: "
 
-    if-eqz v6, :cond_2e
+    if-eqz v6, :cond_30
 
     new-instance v6, Ljava/lang/StringBuilder;
 
@@ -4234,10 +4224,10 @@
 
     invoke-virtual {v7, v0}, Landroid/net/wifi/SoftApConfiguration$Builder;->setMacRandomizationSetting(I)Landroid/net/wifi/SoftApConfiguration$Builder;
 
-    goto/16 :goto_10
+    goto/16 :goto_f
 
-    :cond_2e
-    if-eqz v6, :cond_2f
+    :cond_30
+    if-eqz v6, :cond_31
 
     new-instance v6, Ljava/lang/StringBuilder;
 
@@ -4279,31 +4269,11 @@
 
     invoke-virtual {v7, v0}, Landroid/net/wifi/SoftApConfiguration$Builder;->setMacRandomizationSetting(I)Landroid/net/wifi/SoftApConfiguration$Builder;
 
-    goto :goto_10
-
-    :cond_2f
-    invoke-virtual {v7}, Landroid/net/wifi/SoftApConfiguration$Builder;->build()Landroid/net/wifi/SoftApConfiguration;
-
-    move-result-object v6
-
-    invoke-virtual {v6}, Landroid/net/wifi/SoftApConfiguration;->getBands()[I
-
-    move-result-object v6
-
-    array-length v6, v6
-
-    const/4 v9, 0x1
-
-    if-le v6, v9, :cond_30
-
-    const/4 v6, 0x1
-
-    goto :goto_d
+    goto :goto_f
 
-    :cond_30
+    :cond_31
     const/4 v6, 0x0
 
-    :goto_d
     invoke-direct {v1, v0, v6}, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->convertApMac(Ljava/lang/String;Z)Ljava/lang/String;
 
     move-result-object v6
@@ -4312,13 +4282,13 @@
 
     move-result v9
 
-    if-nez v9, :cond_31
+    if-nez v9, :cond_32
 
     new-instance v9, Ljava/lang/StringBuilder;
 
-    const-string v10, "setSoftApConfiguration() staMac: "
+    const-string v11, "setSoftApConfiguration() staMac: "
 
-    invoke-direct {v9, v10}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
+    invoke-direct {v9, v11}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
 
     invoke-direct {v1, v0}, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->getTruncatedMAC(Ljava/lang/String;)Ljava/lang/String;
 
@@ -4354,46 +4324,42 @@
 
     invoke-virtual {v7, v0}, Landroid/net/wifi/SoftApConfiguration$Builder;->setMacRandomizationSetting(I)Landroid/net/wifi/SoftApConfiguration$Builder;
 
-    goto :goto_10
+    goto :goto_f
 
-    :cond_31
+    :cond_32
     const/4 v0, 0x0
 
     const/4 v6, 0x0
 
     invoke-virtual {v7, v0}, Landroid/net/wifi/SoftApConfiguration$Builder;->setBssid(Landroid/net/MacAddress;)Landroid/net/wifi/SoftApConfiguration$Builder;
 
-    const/4 v0, 0x1
+    invoke-virtual {v7, v10}, Landroid/net/wifi/SoftApConfiguration$Builder;->setMacRandomizationSetting(I)Landroid/net/wifi/SoftApConfiguration$Builder;
 
-    invoke-virtual {v7, v0}, Landroid/net/wifi/SoftApConfiguration$Builder;->setMacRandomizationSetting(I)Landroid/net/wifi/SoftApConfiguration$Builder;
+    goto :goto_e
 
-    goto :goto_f
-
-    :cond_32
-    :goto_e
+    :cond_33
+    :goto_d
     const/4 v0, 0x0
 
     const/4 v6, 0x0
 
-    const/4 v8, 0x1
+    const-string v8, "setSoftApConfiguration() SemWifiChipInfo.getMacAddress is invalid, randomMac will be set in WifiApConfigStore randomizeBssidIfUnset()"
 
-    const-string v9, "setSoftApConfiguration() SemWifiChipInfo.getMacAddress is invalid, randomMac will be set in WifiApConfigStore randomizeBssidIfUnset()"
-
-    invoke-static {v3, v9}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+    invoke-static {v3, v8}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
 
     invoke-virtual {v7, v0}, Landroid/net/wifi/SoftApConfiguration$Builder;->setBssid(Landroid/net/MacAddress;)Landroid/net/wifi/SoftApConfiguration$Builder;
 
-    invoke-virtual {v7, v8}, Landroid/net/wifi/SoftApConfiguration$Builder;->setMacRandomizationSetting(I)Landroid/net/wifi/SoftApConfiguration$Builder;
+    invoke-virtual {v7, v10}, Landroid/net/wifi/SoftApConfiguration$Builder;->setMacRandomizationSetting(I)Landroid/net/wifi/SoftApConfiguration$Builder;
 
-    :goto_f
+    :goto_e
     move v0, v6
 
-    :goto_10
+    :goto_f
     invoke-virtual {v7, v0}, Landroid/net/wifi/SoftApConfiguration$Builder;->setMaxNumberOfClients(I)Landroid/net/wifi/SoftApConfiguration$Builder;
 
     const-string v0, "vendor.wifiap.MacAclMode"
 
-    invoke-static {v0, v12}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
+    invoke-static {v0, v13}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
 
     iget-object v6, v1, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->mFacade:Lcom/samsung/android/server/wifi/SemFrameworkFacade;
 
@@ -4401,7 +4367,7 @@
 
     move-result v6
 
-    if-eqz v6, :cond_34
+    if-eqz v6, :cond_35
 
     invoke-static {}, Lcom/samsung/android/server/wifi/ap/SemWifiApMacAclList;->getInstance()Lcom/samsung/android/server/wifi/ap/SemWifiApMacAclList;
 
@@ -4411,7 +4377,7 @@
 
     move-result v6
 
-    if-eqz v6, :cond_34
+    if-eqz v6, :cond_35
 
     invoke-static {}, Lcom/samsung/android/server/wifi/ap/SemWifiApMacAclList;->getInstance()Lcom/samsung/android/server/wifi/ap/SemWifiApMacAclList;
 
@@ -4421,17 +4387,15 @@
 
     move-result v6
 
-    const/4 v8, 0x1
-
-    if-ne v6, v8, :cond_33
+    if-ne v6, v10, :cond_34
 
     invoke-static {v0, v14}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
 
-    const/4 v0, 0x1
+    move v8, v10
 
-    goto :goto_11
+    goto :goto_10
 
-    :cond_33
+    :cond_34
     invoke-static {}, Lcom/samsung/android/server/wifi/ap/SemWifiApMacAclList;->getInstance()Lcom/samsung/android/server/wifi/ap/SemWifiApMacAclList;
 
     move-result-object v6
@@ -4442,81 +4406,55 @@
 
     const/4 v8, 0x2
 
-    if-ne v6, v8, :cond_34
+    if-ne v6, v8, :cond_35
 
     invoke-static {v0, v4}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
 
-    move v0, v8
-
-    goto :goto_11
-
-    :cond_34
-    const/4 v0, 0x0
-
-    :goto_11
-    invoke-virtual {v7}, Landroid/net/wifi/SoftApConfiguration$Builder;->build()Landroid/net/wifi/SoftApConfiguration;
-
-    move-result-object v4
-
-    invoke-virtual {v4}, Landroid/net/wifi/SoftApConfiguration;->getBands()[I
-
-    move-result-object v4
-
-    array-length v4, v4
-
-    const/4 v6, 0x1
-
-    if-le v4, v6, :cond_35
-
-    const/4 v4, 0x1
-
-    goto :goto_12
+    goto :goto_10
 
     :cond_35
-    const/4 v4, 0x0
+    const/4 v8, 0x0
 
-    :goto_12
-    new-instance v6, Ljava/lang/StringBuilder;
+    :goto_10
+    new-instance v0, Ljava/lang/StringBuilder;
 
-    const-string v8, "SemSoftApConfiguration softap "
+    const-string v4, "SemSoftApConfiguration softap "
 
-    invoke-direct {v6, v8}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
+    invoke-direct {v0, v4}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
 
     invoke-virtual {v7}, Landroid/net/wifi/SoftApConfiguration$Builder;->build()Landroid/net/wifi/SoftApConfiguration;
 
-    move-result-object v8
+    move-result-object v4
 
-    invoke-virtual {v8}, Landroid/net/wifi/SoftApConfiguration;->toString()Ljava/lang/String;
+    invoke-virtual {v4}, Landroid/net/wifi/SoftApConfiguration;->toString()Ljava/lang/String;
 
-    move-result-object v8
-
-    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    move-result-object v4
 
-    const-string v8, "\nmMAXClients:"
+    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    invoke-virtual {v6, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    const-string v4, "\nmMAXClients:"
 
-    invoke-virtual {v6, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    const-string v5, ",mMacAclMode:"
+    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
 
-    invoke-virtual {v6, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    const-string v4, ",mMacAclMode:"
 
-    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    const-string v0, "\nvendorIE "
+    invoke-virtual {v0, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
 
-    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    const-string v4, "\nvendorIE "
 
-    invoke-virtual {v6, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    const-string v0, " isDualAp"
+    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    const-string v2, " isDualApfalse"
 
-    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;
+    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
 
     move-result-object v0
 
@@ -4524,11 +4462,11 @@
 
     const-string v0, "vendor.wifiap.guest_mode_enabled"
 
-    invoke-static {v0, v12}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
+    invoke-static {v0, v13}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
 
     const-string v0, "vendor.wifiap.guest_mode_isolation"
 
-    invoke-static {v0, v12}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
+    invoke-static {v0, v13}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
 
     invoke-static {}, Lcom/samsung/android/server/wifi/SemWifiInjector;->getInstance()Lcom/samsung/android/server/wifi/SemWifiInjector;
 
@@ -4552,9 +4490,7 @@
 
     move-result v0
 
-    const/4 v2, 0x1
-
-    if-ne v0, v2, :cond_37
+    if-ne v0, v10, :cond_37
 
     invoke-virtual/range {p0 .. p0}, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->isWifiApGuestModeEnabled()Z
 
@@ -4570,14 +4506,14 @@
 
     invoke-virtual {v1, v0}, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->setWifiApGuestPassword(Ljava/lang/String;)V
 
-    goto :goto_13
+    goto :goto_11
 
     :cond_36
     const-string v0, "Dont reset OTP when resetConfiguration is called"
 
     invoke-static {v3, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
 
-    :goto_13
+    :goto_11
     const/4 v0, 0x0
 
     iput-boolean v0, v1, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->isResetSoftApCalled:Z
diff --git a/smali/com/samsung/android/server/wifi/ap/SemSoftApManager$1.smali b/smali/com/samsung/android/server/wifi/ap/SemSoftApManager$1.smali
index f6c9397..865bb15 100644
--- a/smali/com/samsung/android/server/wifi/ap/SemSoftApManager$1.smali
+++ b/smali/com/samsung/android/server/wifi/ap/SemSoftApManager$1.smali
@@ -550,7 +550,7 @@
 .end method
 
 .method public onConnectedClientsChanged(Landroid/net/wifi/SoftApInfo;Ljava/util/List;)V
-    .locals 3
+    .locals 1
     .annotation system Ldalvik/annotation/Signature;
         value = {
             "(",
@@ -561,129 +561,41 @@
         }
     .end annotation
 
-    const-string v0, "SemSoftApManager"
-
-    new-instance v1, Ljava/lang/StringBuilder;
+    new-instance p0, Ljava/lang/StringBuilder;
 
-    const-string v2, "onConnectedClientsChanged:"
+    const-string v0, "onConnectedClientsChanged:"
 
-    invoke-direct {v1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
+    invoke-direct {p0, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
 
     invoke-virtual {p1}, Landroid/net/wifi/SoftApInfo;->getApInstanceIdentifier()Ljava/lang/String;
 
-    move-result-object v2
+    move-result-object p1
 
-    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    const-string v2, ",:clients size,"
+    const-string p1, ",:clients size,"
 
-    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
     invoke-interface {p2}, Ljava/util/List;->size()I
 
-    move-result v2
-
-    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
-
-    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
-
-    move-result-object v1
-
-    invoke-static {v0, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
-
-    iget-object v0, p0, Lcom/samsung/android/server/wifi/ap/SemSoftApManager$1;->this$0:Lcom/samsung/android/server/wifi/ap/SemSoftApManager;
-
-    iget-object v0, v0, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->mWifiManager:Landroid/net/wifi/WifiManager;
-
-    invoke-virtual {v0}, Landroid/net/wifi/WifiManager;->getSoftApConfiguration()Landroid/net/wifi/SoftApConfiguration;
-
-    move-result-object v0
-
-    invoke-virtual {v0}, Landroid/net/wifi/SoftApConfiguration;->getBands()[I
-
-    move-result-object v0
-
-    array-length v0, v0
-
-    const/4 v1, 0x1
-
-    if-le v0, v1, :cond_1
-
-    iget-object v0, p0, Lcom/samsung/android/server/wifi/ap/SemSoftApManager$1;->this$0:Lcom/samsung/android/server/wifi/ap/SemSoftApManager;
-
-    invoke-static {v0}, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->-$$Nest$fgetmAospClientsHashMap(Lcom/samsung/android/server/wifi/ap/SemSoftApManager;)Ljava/util/concurrent/ConcurrentHashMap;
-
-    move-result-object v0
-
-    monitor-enter v0
-
-    :try_start_0
-    new-instance v1, Ljava/util/ArrayList;
-
-    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V
-
-    invoke-interface {p2}, Ljava/util/List;->iterator()Ljava/util/Iterator;
-
-    move-result-object p2
-
-    :goto_0
-    invoke-interface {p2}, Ljava/util/Iterator;->hasNext()Z
-
-    move-result v2
-
-    if-eqz v2, :cond_0
-
-    invoke-interface {p2}, Ljava/util/Iterator;->next()Ljava/lang/Object;
-
-    move-result-object v2
-
-    check-cast v2, Landroid/net/wifi/WifiClient;
-
-    invoke-virtual {v2}, Landroid/net/wifi/WifiClient;->getMacAddress()Landroid/net/MacAddress;
-
-    move-result-object v2
-
-    invoke-virtual {v2}, Landroid/net/MacAddress;->toString()Ljava/lang/String;
-
-    move-result-object v2
-
-    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
-
-    goto :goto_0
+    move-result p1
 
-    :cond_0
-    iget-object p0, p0, Lcom/samsung/android/server/wifi/ap/SemSoftApManager$1;->this$0:Lcom/samsung/android/server/wifi/ap/SemSoftApManager;
+    invoke-virtual {p0, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
 
-    invoke-static {p0}, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->-$$Nest$fgetmAospClientsHashMap(Lcom/samsung/android/server/wifi/ap/SemSoftApManager;)Ljava/util/concurrent/ConcurrentHashMap;
+    invoke-virtual {p0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
 
     move-result-object p0
 
-    invoke-virtual {p1}, Landroid/net/wifi/SoftApInfo;->getApInstanceIdentifier()Ljava/lang/String;
+    const-string p1, "SemSoftApManager"
 
-    move-result-object p1
+    invoke-static {p1, p0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
 
-    invoke-virtual {p0, p1, v1}, Ljava/util/concurrent/ConcurrentHashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-
-    monitor-exit v0
-
-    goto :goto_1
-
-    :catchall_0
-    move-exception p0
-
-    monitor-exit v0
-    :try_end_0
-    .catchall {:try_start_0 .. :try_end_0} :catchall_0
-
-    throw p0
-
-    :cond_1
-    :goto_1
     return-void
 .end method
 
 .method public onInfoChanged(Ljava/util/List;)V
-    .locals 4
+    .locals 2
     .annotation system Ldalvik/annotation/Signature;
         value = {
             "(",
@@ -695,77 +607,36 @@
 
     invoke-static {}, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->-$$Nest$sfgetMHSDBG()Z
 
-    move-result v0
+    move-result p0
 
-    if-eqz v0, :cond_1
+    if-eqz p0, :cond_0
 
     invoke-interface {p1}, Ljava/util/List;->iterator()Ljava/util/Iterator;
 
-    move-result-object p1
+    move-result-object p0
 
     :goto_0
-    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z
-
-    move-result v0
-
-    if-eqz v0, :cond_0
-
-    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;
-
-    move-result-object v0
+    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z
 
-    check-cast v0, Landroid/net/wifi/SoftApInfo;
-
-    const-string v1, "SemSoftApManager"
-
-    new-instance v2, Ljava/lang/StringBuilder;
-
-    const-string v3, "onInfoChanged:"
-
-    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
-
-    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
-
-    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
-
-    move-result-object v0
-
-    invoke-static {v1, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
-
-    goto :goto_0
-
-    :cond_0
-    new-instance p1, Ljava/lang/StringBuilder;
-
-    const-string v0, "onInfoChanged:swlan0:"
-
-    invoke-direct {p1, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
-
-    iget-object v0, p0, Lcom/samsung/android/server/wifi/ap/SemSoftApManager$1;->this$0:Lcom/samsung/android/server/wifi/ap/SemSoftApManager;
-
-    const-string v1, "swlan0"
-
-    invoke-virtual {v0, v1}, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->isInterfaceUp(Ljava/lang/String;)Z
-
-    move-result v0
+    move-result p1
 
-    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;
+    if-eqz p1, :cond_0
 
-    const-string v0, ",wlan2:"
+    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;
 
-    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    move-result-object p1
 
-    iget-object v0, p0, Lcom/samsung/android/server/wifi/ap/SemSoftApManager$1;->this$0:Lcom/samsung/android/server/wifi/ap/SemSoftApManager;
+    check-cast p1, Landroid/net/wifi/SoftApInfo;
 
-    const-string v1, "wlan2"
+    new-instance v0, Ljava/lang/StringBuilder;
 
-    invoke-virtual {v0, v1}, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->isInterfaceUp(Ljava/lang/String;)Z
+    const-string v1, "onInfoChanged:"
 
-    move-result v0
+    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
 
-    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;
+    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
 
-    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
 
     move-result-object p1
 
@@ -773,95 +644,9 @@
 
     invoke-static {v0, p1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
 
-    iget-object v0, p0, Lcom/samsung/android/server/wifi/ap/SemSoftApManager$1;->this$0:Lcom/samsung/android/server/wifi/ap/SemSoftApManager;
-
-    invoke-virtual {v0, p1}, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->addSemSoftApDumpLog(Ljava/lang/String;)V
-
-    :cond_1
-    iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemSoftApManager$1;->this$0:Lcom/samsung/android/server/wifi/ap/SemSoftApManager;
-
-    iget-object p1, p1, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->mWifiManager:Landroid/net/wifi/WifiManager;
-
-    invoke-virtual {p1}, Landroid/net/wifi/WifiManager;->getSoftApConfiguration()Landroid/net/wifi/SoftApConfiguration;
-
-    move-result-object p1
-
-    invoke-virtual {p1}, Landroid/net/wifi/SoftApConfiguration;->getBands()[I
-
-    move-result-object p1
-
-    array-length p1, p1
-
-    const/4 v0, 0x1
-
-    if-le p1, v0, :cond_4
-
-    iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemSoftApManager$1;->this$0:Lcom/samsung/android/server/wifi/ap/SemSoftApManager;
-
-    invoke-static {p1}, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->-$$Nest$fgetmAospClientsHashMap(Lcom/samsung/android/server/wifi/ap/SemSoftApManager;)Ljava/util/concurrent/ConcurrentHashMap;
-
-    move-result-object p1
-
-    monitor-enter p1
-
-    :try_start_0
-    iget-object v0, p0, Lcom/samsung/android/server/wifi/ap/SemSoftApManager$1;->this$0:Lcom/samsung/android/server/wifi/ap/SemSoftApManager;
-
-    const-string v1, "swlan0"
-
-    invoke-virtual {v0, v1}, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->isInterfaceUp(Ljava/lang/String;)Z
-
-    move-result v0
-
-    if-nez v0, :cond_2
-
-    iget-object v0, p0, Lcom/samsung/android/server/wifi/ap/SemSoftApManager$1;->this$0:Lcom/samsung/android/server/wifi/ap/SemSoftApManager;
-
-    invoke-static {v0}, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->-$$Nest$fgetmAospClientsHashMap(Lcom/samsung/android/server/wifi/ap/SemSoftApManager;)Ljava/util/concurrent/ConcurrentHashMap;
-
-    move-result-object v0
-
-    const-string v1, "swlan0"
-
-    invoke-virtual {v0, v1}, Ljava/util/concurrent/ConcurrentHashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;
-
-    :cond_2
-    iget-object v0, p0, Lcom/samsung/android/server/wifi/ap/SemSoftApManager$1;->this$0:Lcom/samsung/android/server/wifi/ap/SemSoftApManager;
-
-    const-string v1, "wlan2"
-
-    invoke-virtual {v0, v1}, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->isInterfaceUp(Ljava/lang/String;)Z
-
-    move-result v0
-
-    if-nez v0, :cond_3
-
-    iget-object p0, p0, Lcom/samsung/android/server/wifi/ap/SemSoftApManager$1;->this$0:Lcom/samsung/android/server/wifi/ap/SemSoftApManager;
-
-    invoke-static {p0}, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->-$$Nest$fgetmAospClientsHashMap(Lcom/samsung/android/server/wifi/ap/SemSoftApManager;)Ljava/util/concurrent/ConcurrentHashMap;
-
-    move-result-object p0
-
-    const-string v0, "wlan2"
-
-    invoke-virtual {p0, v0}, Ljava/util/concurrent/ConcurrentHashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;
-
-    :cond_3
-    monitor-exit p1
-
-    goto :goto_1
-
-    :catchall_0
-    move-exception p0
-
-    monitor-exit p1
-    :try_end_0
-    .catchall {:try_start_0 .. :try_end_0} :catchall_0
-
-    throw p0
+    goto :goto_0
 
-    :cond_4
-    :goto_1
+    :cond_0
     return-void
 .end method
 
diff --git a/smali/com/samsung/android/server/wifi/ap/SemSoftApManager.smali b/smali/com/samsung/android/server/wifi/ap/SemSoftApManager.smali
index ca64ead..e51ecbe 100644
--- a/smali/com/samsung/android/server/wifi/ap/SemSoftApManager.smali
+++ b/smali/com/samsung/android/server/wifi/ap/SemSoftApManager.smali
@@ -28,7 +28,7 @@
 
 .field public static final MHS_SAR_BACKOFF_ENABLED:I = 0x9
 
-.field private static final SUPPORTMHS11AX_SPF:Z = true
+.field private static final SUPPORTMHS11AX_SPF:Z = false
 
 .field private static final SUPPORTMHSPOWERSAVEFEATURE_SPF:Z = true
 
@@ -953,8 +953,6 @@
 
     invoke-virtual {v0}, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;->unRegisterSoftApCallback()V
 
-    invoke-direct {p0}, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->dualSoftApScanModeReset()V
-
     const/4 v0, 0x0
 
     iput-boolean v0, p0, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->mSkipWifiSharingWhenNetworkCountryChange:Z
@@ -2660,167 +2658,22 @@
 .end method
 
 .method public checkDualBandHostapd()Z
-    .locals 2
-
-    const-string v0, "CHECK_DUALBAND_ENABLED"
-
-    invoke-virtual {p0, v0}, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->sendHostapdCommand(Ljava/lang/String;)Ljava/lang/String;
-
-    move-result-object p0
-
-    invoke-static {p0}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z
-
-    move-result v0
-
-    if-nez v0, :cond_0
-
-    const-string v0, "1"
-
-    invoke-virtual {p0, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
-
-    move-result p0
+    .locals 1
 
-    if-eqz p0, :cond_0
+    const-string p0, "SemSoftApManager"
 
-    const/4 p0, 0x1
+    const-string v0, "checkDualBandHostapd:false"
 
-    goto :goto_0
+    invoke-static {p0, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
 
-    :cond_0
     const/4 p0, 0x0
 
-    :goto_0
-    const-string v0, "checkDualBandHostapd:"
-
-    const-string v1, "SemSoftApManager"
-
-    invoke-static {v0, p0, v1}, Lcom/samsung/android/server/wifi/SemCellularStateManager$1$$ExternalSyntheticOutline0;->m(Ljava/lang/String;ZLjava/lang/String;)V
-
     return p0
 .end method
 
 .method public disassociateSTA(Ljava/lang/String;)V
-    .locals 5
-
-    const-string v0, "DISASSOCIATE_WLAN2 "
-
-    const-string v1, "DISASSOCIATE_SWLAN "
-
-    iget-object v2, p0, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->mWifiManager:Landroid/net/wifi/WifiManager;
-
-    invoke-virtual {v2}, Landroid/net/wifi/WifiManager;->getSoftApConfiguration()Landroid/net/wifi/SoftApConfiguration;
-
-    move-result-object v2
-
-    invoke-virtual {v2}, Landroid/net/wifi/SoftApConfiguration;->getBands()[I
-
-    move-result-object v2
-
-    array-length v2, v2
-
-    const/4 v3, 0x1
-
-    if-le v2, v3, :cond_2
-
-    iget-object v2, p0, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->mAospClientsHashMap:Ljava/util/concurrent/ConcurrentHashMap;
-
-    monitor-enter v2
-
-    :try_start_0
-    iget-object v3, p0, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->mAospClientsHashMap:Ljava/util/concurrent/ConcurrentHashMap;
-
-    const-string v4, "swlan0"
-
-    invoke-virtual {v3, v4}, Ljava/util/concurrent/ConcurrentHashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
-
-    move-result-object v3
-
-    check-cast v3, Ljava/util/List;
-
-    if-eqz v3, :cond_0
-
-    invoke-interface {v3, p1}, Ljava/util/List;->contains(Ljava/lang/Object;)Z
-
-    move-result v3
-
-    if-eqz v3, :cond_0
-
-    new-instance v0, Ljava/lang/StringBuilder;
-
-    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
-
-    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
-
-    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
-
-    move-result-object p1
-
-    invoke-virtual {p0, p1}, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->sendHostapdCommand(Ljava/lang/String;)Ljava/lang/String;
-
-    monitor-exit v2
-
-    return-void
-
-    :cond_0
-    iget-object v1, p0, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->mAospClientsHashMap:Ljava/util/concurrent/ConcurrentHashMap;
-
-    const-string v3, "wlan2"
-
-    invoke-virtual {v1, v3}, Ljava/util/concurrent/ConcurrentHashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
-
-    move-result-object v1
-
-    check-cast v1, Ljava/util/List;
-
-    if-eqz v1, :cond_1
-
-    invoke-interface {v1, p1}, Ljava/util/List;->contains(Ljava/lang/Object;)Z
-
-    move-result v1
-
-    if-eqz v1, :cond_1
-
-    new-instance v1, Ljava/lang/StringBuilder;
-
-    invoke-direct {v1, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
-
-    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
-
-    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
-
-    move-result-object p1
-
-    invoke-virtual {p0, p1}, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->sendHostapdCommand(Ljava/lang/String;)Ljava/lang/String;
-
-    monitor-exit v2
-
-    return-void
-
-    :cond_1
-    monitor-exit v2
-    :try_end_0
-    .catchall {:try_start_0 .. :try_end_0} :catchall_0
-
-    const-string v0, "SemSoftApManager"
-
-    const-string v1, "disassociateSTA mac address is not found is dualap clients!!!!"
-
-    invoke-static {v0, v1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
-
-    goto :goto_0
-
-    :catchall_0
-    move-exception p0
-
-    :try_start_1
-    monitor-exit v2
-    :try_end_1
-    .catchall {:try_start_1 .. :try_end_1} :catchall_0
-
-    throw p0
+    .locals 2
 
-    :cond_2
-    :goto_0
     new-instance v0, Ljava/lang/StringBuilder;
 
     const-string v1, "DISASSOCIATE "
@@ -3074,93 +2927,11 @@
 .end method
 
 .method public getStationInfo(Ljava/lang/String;)Ljava/lang/String;
-    .locals 6
-
-    const-string v0, "GET_STATION_INFO_WLAN2 "
-
-    const-string v1, "GET_STATION_INFO_SWLAN0 "
+    .locals 2
 
-    const-string v2, "GET_STA_INFO "
+    const-string v0, "GET_STA_INFO "
 
     :try_start_0
-    iget-object v3, p0, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->mWifiManager:Landroid/net/wifi/WifiManager;
-
-    invoke-virtual {v3}, Landroid/net/wifi/WifiManager;->getSoftApConfiguration()Landroid/net/wifi/SoftApConfiguration;
-
-    move-result-object v3
-
-    invoke-virtual {v3}, Landroid/net/wifi/SoftApConfiguration;->getBands()[I
-
-    move-result-object v3
-
-    array-length v3, v3
-
-    const/4 v4, 0x1
-
-    if-le v3, v4, :cond_2
-
-    iget-object v3, p0, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->mAospClientsHashMap:Ljava/util/concurrent/ConcurrentHashMap;
-
-    monitor-enter v3
-    :try_end_0
-    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0
-
-    :try_start_1
-    iget-object v4, p0, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->mAospClientsHashMap:Ljava/util/concurrent/ConcurrentHashMap;
-
-    const-string v5, "swlan0"
-
-    invoke-virtual {v4, v5}, Ljava/util/concurrent/ConcurrentHashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
-
-    move-result-object v4
-
-    check-cast v4, Ljava/util/List;
-
-    if-eqz v4, :cond_0
-
-    invoke-interface {v4, p1}, Ljava/util/List;->contains(Ljava/lang/Object;)Z
-
-    move-result v4
-
-    if-eqz v4, :cond_0
-
-    new-instance v0, Ljava/lang/StringBuilder;
-
-    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
-
-    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
-
-    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
-
-    move-result-object p1
-
-    invoke-virtual {p0, p1}, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->sendHostapdCommand(Ljava/lang/String;)Ljava/lang/String;
-
-    move-result-object p0
-
-    monitor-exit v3
-
-    return-object p0
-
-    :cond_0
-    iget-object v1, p0, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->mAospClientsHashMap:Ljava/util/concurrent/ConcurrentHashMap;
-
-    const-string v4, "wlan2"
-
-    invoke-virtual {v1, v4}, Ljava/util/concurrent/ConcurrentHashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
-
-    move-result-object v1
-
-    check-cast v1, Ljava/util/List;
-
-    if-eqz v1, :cond_1
-
-    invoke-interface {v1, p1}, Ljava/util/List;->contains(Ljava/lang/Object;)Z
-
-    move-result v1
-
-    if-eqz v1, :cond_1
-
     new-instance v1, Ljava/lang/StringBuilder;
 
     invoke-direct {v1, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
@@ -3174,43 +2945,8 @@
     invoke-virtual {p0, p1}, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->sendHostapdCommand(Ljava/lang/String;)Ljava/lang/String;
 
     move-result-object p0
-
-    monitor-exit v3
-
-    return-object p0
-
-    :cond_1
-    monitor-exit v3
-
-    goto :goto_0
-
-    :catchall_0
-    move-exception p0
-
-    monitor-exit v3
-    :try_end_1
-    .catchall {:try_start_1 .. :try_end_1} :catchall_0
-
-    :try_start_2
-    throw p0
-
-    :cond_2
-    :goto_0
-    new-instance v0, Ljava/lang/StringBuilder;
-
-    invoke-direct {v0, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
-
-    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
-
-    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
-
-    move-result-object p1
-
-    invoke-virtual {p0, p1}, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->sendHostapdCommand(Ljava/lang/String;)Ljava/lang/String;
-
-    move-result-object p0
-    :try_end_2
-    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0
+    :try_end_0
+    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0
 
     return-object p0
 
diff --git a/smali/com/samsung/android/server/wifi/ap/SemWifiApBroadcastReceiver.smali b/smali/com/samsung/android/server/wifi/ap/SemWifiApBroadcastReceiver.smali
index bf79396..1e35af2 100644
--- a/smali/com/samsung/android/server/wifi/ap/SemWifiApBroadcastReceiver.smali
+++ b/smali/com/samsung/android/server/wifi/ap/SemWifiApBroadcastReceiver.smali
@@ -1300,28 +1300,6 @@
     const-string v8, "power_save_mode_off"
 
     :goto_5
-    iget-object v11, v0, Lcom/samsung/android/server/wifi/ap/SemWifiApBroadcastReceiver;->mContext:Landroid/content/Context;
-
-    invoke-virtual {v11}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;
-
-    move-result-object v11
-
-    const-string v12, "wifi_ap_11ax_mode_checked"
-
-    invoke-static {v11, v12, v9}, Landroid/provider/Settings$Secure;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I
-
-    move-result v9
-
-    if-ne v9, v7, :cond_b
-
-    const-string v9, "11ax_on"
-
-    goto :goto_6
-
-    :cond_b
-    const-string v9, "11ax_off"
-
-    :goto_6
     iget-object v11, v0, Lcom/samsung/android/server/wifi/ap/SemWifiApBroadcastReceiver;->mWifiApServiceImpl:Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;
 
     invoke-virtual {v11}, Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;->getSoftApConfiguration()Landroid/net/wifi/SoftApConfiguration;
@@ -1724,73 +1702,7 @@
 
     move-result-object v5
 
-    invoke-static {}, Lcom/samsung/android/server/wifi/SemWifiInjector;->getInstance()Lcom/samsung/android/server/wifi/SemWifiInjector;
-
-    move-result-object v12
-
-    invoke-virtual {v12}, Lcom/samsung/android/server/wifi/SemWifiInjector;->getSemWifiApTrafficPriority()Lcom/samsung/android/server/wifi/ap/smartprio/SemWifiApTrafficPriority;
-
-    move-result-object v12
-
-    invoke-virtual {v12}, Lcom/samsung/android/server/wifi/ap/smartprio/SemWifiApTrafficPriority;->getmIsPriorityFeatureEnableDuringSession()Z
-
-    move-result v12
-
-    if-eqz v12, :cond_1c
-
-    invoke-static {}, Lcom/samsung/android/server/wifi/SemWifiInjector;->getInstance()Lcom/samsung/android/server/wifi/SemWifiInjector;
-
-    move-result-object v12
-
-    invoke-virtual {v12}, Lcom/samsung/android/server/wifi/SemWifiInjector;->getSemWifiApTrafficPriority()Lcom/samsung/android/server/wifi/ap/smartprio/SemWifiApTrafficPriority;
-
-    move-result-object v12
-
-    invoke-virtual {v12}, Lcom/samsung/android/server/wifi/ap/smartprio/SemWifiApTrafficPriority;->getNRTTrafficEnable()Z
-
-    move-result v12
-
-    if-eqz v12, :cond_1b
-
-    invoke-static {}, Lcom/samsung/android/server/wifi/SemWifiInjector;->getInstance()Lcom/samsung/android/server/wifi/SemWifiInjector;
-
-    move-result-object v12
-
-    invoke-virtual {v12}, Lcom/samsung/android/server/wifi/SemWifiInjector;->getSemWifiApTrafficPriority()Lcom/samsung/android/server/wifi/ap/smartprio/SemWifiApTrafficPriority;
-
-    move-result-object v12
-
-    invoke-virtual {v12}, Lcom/samsung/android/server/wifi/ap/smartprio/SemWifiApTrafficPriority;->getRTTrafficEnable()Z
-
-    move-result v12
-
-    if-eqz v12, :cond_1a
-
-    const-string v12, "tp_rt"
-
-    goto :goto_11
-
-    :cond_1a
-    const-string v12, "tp_nrt"
-
-    goto :goto_11
-
-    :cond_1b
-    const-string v12, "tp_on_below_cutoff"
-
-    goto :goto_11
-
-    :cond_1c
-    const-string v12, "tp_off"
-
-    :goto_11
-    const-string v14, "handleWifiApState: "
-
-    invoke-virtual {v14, v12}, Ljava/lang/String;->concat(Ljava/lang/String;)Ljava/lang/String;
-
-    move-result-object v14
-
-    invoke-static {v3, v14}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+    const-string v12, "not_support"
 
     new-instance v3, Ljava/lang/StringBuilder;
 
@@ -1895,12 +1807,10 @@
 
     invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    invoke-virtual {v3, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    const-string v9, " not_support "
 
     invoke-virtual {v3, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    invoke-virtual {v3, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
-
     invoke-virtual {v3, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
     invoke-virtual {v3, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
diff --git a/smali/com/samsung/android/server/wifi/ap/SemWifiApConfigStore.smali b/smali/com/samsung/android/server/wifi/ap/SemWifiApConfigStore.smali
index 0bf1780..b52d6e0 100644
--- a/smali/com/samsung/android/server/wifi/ap/SemWifiApConfigStore.smali
+++ b/smali/com/samsung/android/server/wifi/ap/SemWifiApConfigStore.smali
@@ -7253,8 +7253,6 @@
 
     move-result v7
 
-    const/4 v8, 0x0
-
     if-nez v7, :cond_6
 
     if-nez p1, :cond_6
@@ -7286,7 +7284,9 @@
 
     iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApConfigStore;->configBuilder:Landroid/net/wifi/SoftApConfiguration$Builder;
 
-    invoke-virtual {p1, v8}, Landroid/net/wifi/SoftApConfiguration$Builder;->setBssid(Landroid/net/MacAddress;)Landroid/net/wifi/SoftApConfiguration$Builder;
+    const/4 v0, 0x0
+
+    invoke-virtual {p1, v0}, Landroid/net/wifi/SoftApConfiguration$Builder;->setBssid(Landroid/net/MacAddress;)Landroid/net/wifi/SoftApConfiguration$Builder;
     :try_end_1
     .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0
     .catchall {:try_start_1 .. :try_end_1} :catchall_0
@@ -7522,22 +7522,45 @@
 
     invoke-direct {p0, p1, v5}, Lcom/samsung/android/server/wifi/ap/SemWifiApConfigStore;->dumpToLogFile(Ljava/lang/String;Z)V
 
-    iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApConfigStore;->configBuilder:Landroid/net/wifi/SoftApConfiguration$Builder;
+    const-string p1, "SemWifiApConfigStore"
 
-    const/4 v0, 0x5
+    const-string v0, "6GHz selected, but OPEN type is set, OWE not supported error"
 
-    invoke-virtual {p1, v8, v0}, Landroid/net/wifi/SoftApConfiguration$Builder;->setPassphrase(Ljava/lang/String;I)Landroid/net/wifi/SoftApConfiguration$Builder;
+    invoke-static {p1, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
 
-    iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApConfigStore;->configBuilder:Landroid/net/wifi/SoftApConfiguration$Builder;
+    const-string p1, " setApConfiguration() 6GHz selected, but OPEN type is set, OWE not supported error "
 
-    invoke-virtual {p1}, Landroid/net/wifi/SoftApConfiguration$Builder;->build()Landroid/net/wifi/SoftApConfiguration;
+    invoke-virtual {p0, p1}, Lcom/samsung/android/server/wifi/ap/SemWifiApConfigStore;->addMHSDumpLog(Ljava/lang/String;)V
+
+    new-instance p1, Ljava/lang/StringBuilder;
+
+    invoke-direct {p1}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-direct {p0}, Lcom/samsung/android/server/wifi/ap/SemWifiApConfigStore;->getTimeStamp()Ljava/lang/String;
+
+    move-result-object v0
+
+    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    const-string v0, ", setApConfiguration() 6GHz selected, but OPEN type is set, OWE not supported error \n "
+
+    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
 
     move-result-object p1
 
-    iput-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApConfigStore;->mWifiApConfig:Landroid/net/wifi/SoftApConfiguration;
+    invoke-direct {p0, p1, v5}, Lcom/samsung/android/server/wifi/ap/SemWifiApConfigStore;->dumpToLogFile(Ljava/lang/String;Z)V
+    :try_end_4
+    .catchall {:try_start_4 .. :try_end_4} :catchall_0
+
+    monitor-exit p0
+
+    return-void
 
     :cond_a
     :goto_5
+    :try_start_5
     new-instance p1, Ljava/lang/StringBuilder;
 
     invoke-direct {p1, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
@@ -7571,8 +7594,8 @@
     iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApConfigStore;->mWifiApConfig:Landroid/net/wifi/SoftApConfiguration;
 
     invoke-direct {p0, p1}, Lcom/samsung/android/server/wifi/ap/SemWifiApConfigStore;->setAndSaveWifiApConfiguration(Landroid/net/wifi/SoftApConfiguration;)V
-    :try_end_4
-    .catchall {:try_start_4 .. :try_end_4} :catchall_0
+    :try_end_5
+    .catchall {:try_start_5 .. :try_end_5} :catchall_0
 
     monitor-exit p0
 
diff --git a/smali/com/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl$SoftApCallback.smali b/smali/com/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl$SoftApCallback.smali
index 03f75e8..43f3a6f 100644
--- a/smali/com/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl$SoftApCallback.smali
+++ b/smali/com/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl$SoftApCallback.smali
@@ -125,7 +125,7 @@
 .end method
 
 .method public onInfoChanged(Ljava/util/List;)V
-    .locals 4
+    .locals 2
     .annotation system Ldalvik/annotation/Signature;
         value = {
             "(",
@@ -137,191 +137,47 @@
 
     invoke-interface {p1}, Ljava/util/List;->iterator()Ljava/util/Iterator;
 
-    move-result-object p1
+    move-result-object p0
 
     :cond_0
     :goto_0
-    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z
-
-    move-result v0
-
-    const-string v1, "SemWifiApPowerSaveImpl"
-
-    if-eqz v0, :cond_1
-
-    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;
-
-    move-result-object v0
-
-    check-cast v0, Landroid/net/wifi/SoftApInfo;
-
-    invoke-static {}, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;->-$$Nest$sfgetMHSDBG()Z
-
-    move-result v2
-
-    if-eqz v2, :cond_0
-
-    new-instance v2, Ljava/lang/StringBuilder;
-
-    const-string v3, "onInfoChanged:"
-
-    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
-
-    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
-
-    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
-
-    move-result-object v0
-
-    invoke-static {v1, v0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
-
-    goto :goto_0
-
-    :cond_1
-    invoke-static {}, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;->-$$Nest$sfgetMHSDBG()Z
+    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z
 
     move-result p1
 
-    const-string v0, "wlan2"
-
-    const-string v2, "swlan0"
-
-    if-eqz p1, :cond_2
-
-    new-instance p1, Ljava/lang/StringBuilder;
-
-    const-string v3, "onInfoChanged:swlan0:"
-
-    invoke-direct {p1, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
-
-    iget-object v3, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl$SoftApCallback;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;
-
-    invoke-static {v3}, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;->-$$Nest$fgetmSoftApManager(Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;)Lcom/samsung/android/server/wifi/ap/SemSoftApManager;
-
-    move-result-object v3
-
-    invoke-virtual {v3, v2}, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->isInterfaceUp(Ljava/lang/String;)Z
-
-    move-result v3
-
-    invoke-virtual {p1, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;
-
-    const-string v3, ",wlan2:"
-
-    invoke-virtual {p1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    if-eqz p1, :cond_1
 
-    iget-object v3, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl$SoftApCallback;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;
-
-    invoke-static {v3}, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;->-$$Nest$fgetmSoftApManager(Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;)Lcom/samsung/android/server/wifi/ap/SemSoftApManager;
-
-    move-result-object v3
-
-    invoke-virtual {v3, v0}, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->isInterfaceUp(Ljava/lang/String;)Z
-
-    move-result v3
-
-    invoke-virtual {p1, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;
-
-    invoke-virtual {p1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
-
-    move-result-object p1
-
-    invoke-static {v1, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
-
-    :cond_2
-    iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl$SoftApCallback;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;
-
-    invoke-static {p1}, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;->-$$Nest$fgetmSoftApManager(Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;)Lcom/samsung/android/server/wifi/ap/SemSoftApManager;
+    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;
 
     move-result-object p1
 
-    invoke-virtual {p1, v2}, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->isInterfaceUp(Ljava/lang/String;)Z
+    check-cast p1, Landroid/net/wifi/SoftApInfo;
 
-    move-result p1
-
-    if-eqz p1, :cond_3
-
-    iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl$SoftApCallback;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;
-
-    invoke-static {p1}, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;->-$$Nest$fgetmSoftApManager(Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;)Lcom/samsung/android/server/wifi/ap/SemSoftApManager;
-
-    move-result-object p1
-
-    invoke-virtual {p1, v0}, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->isInterfaceUp(Ljava/lang/String;)Z
-
-    move-result p1
-
-    if-nez p1, :cond_3
-
-    iget-object p0, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl$SoftApCallback;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;
-
-    invoke-static {p0}, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;->-$$Nest$fgetmStateMachineMap(Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;)Ljava/util/concurrent/ConcurrentHashMap;
-
-    move-result-object p0
-
-    invoke-virtual {p0, v0}, Ljava/util/concurrent/ConcurrentHashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
-
-    move-result-object p0
-
-    check-cast p0, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl$SoftApPowerSaveStateMachine;
-
-    if-eqz p0, :cond_4
-
-    const-string p1, "wlan2 interface is down , quit state machine"
-
-    invoke-static {v1, p1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
-
-    invoke-virtual {p0}, Lcom/android/internal/util/StateMachine;->quitNow()V
-
-    goto :goto_1
-
-    :cond_3
-    iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl$SoftApCallback;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;
+    invoke-static {}, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;->-$$Nest$sfgetMHSDBG()Z
 
-    invoke-static {p1}, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;->-$$Nest$fgetmSoftApManager(Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;)Lcom/samsung/android/server/wifi/ap/SemSoftApManager;
+    move-result v0
 
-    move-result-object p1
+    if-eqz v0, :cond_0
 
-    invoke-virtual {p1, v2}, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->isInterfaceUp(Ljava/lang/String;)Z
+    new-instance v0, Ljava/lang/StringBuilder;
 
-    move-result p1
+    const-string v1, "onInfoChanged:"
 
-    if-nez p1, :cond_4
+    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
 
-    iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl$SoftApCallback;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;
+    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
 
-    invoke-static {p1}, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;->-$$Nest$fgetmSoftApManager(Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;)Lcom/samsung/android/server/wifi/ap/SemSoftApManager;
+    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
 
     move-result-object p1
 
-    invoke-virtual {p1, v0}, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->isInterfaceUp(Ljava/lang/String;)Z
-
-    move-result p1
-
-    if-eqz p1, :cond_4
-
-    iget-object p0, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl$SoftApCallback;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;
-
-    invoke-static {p0}, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;->-$$Nest$fgetmStateMachineMap(Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;)Ljava/util/concurrent/ConcurrentHashMap;
-
-    move-result-object p0
-
-    invoke-virtual {p0, v2}, Ljava/util/concurrent/ConcurrentHashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
-
-    move-result-object p0
-
-    check-cast p0, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl$SoftApPowerSaveStateMachine;
-
-    if-eqz p0, :cond_4
-
-    const-string p1, "swlan0 interface is down , quit state machine"
+    const-string v0, "SemWifiApPowerSaveImpl"
 
-    invoke-static {v1, p1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+    invoke-static {v0, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
 
-    invoke-virtual {p0}, Lcom/android/internal/util/StateMachine;->quitNow()V
+    goto :goto_0
 
-    :cond_4
-    :goto_1
+    :cond_1
     return-void
 .end method
 
diff --git a/smali/com/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl.smali b/smali/com/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl.smali
index c356ff4..f3be79e 100644
--- a/smali/com/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl.smali
+++ b/smali/com/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl.smali
@@ -670,7 +670,7 @@
 
 # virtual methods
 .method public registerSoftApCallback(Ljava/lang/String;I)V
-    .locals 5
+    .locals 4
 
     new-instance v0, Ljava/lang/StringBuilder;
 
@@ -708,25 +708,23 @@
 
     const/4 v0, 0x0
 
-    const/4 v2, 0x1
-
     if-eqz p2, :cond_1
 
     invoke-virtual {p2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;
 
     move-result-object p2
 
-    const-string v3, "wifi_ap_powersave_mode_checked"
+    const-string v2, "wifi_ap_powersave_mode_checked"
 
-    const/16 v4, 0xa
+    const/16 v3, 0xa
 
-    invoke-static {p2, v3, v4}, Landroid/provider/Settings$Secure;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I
+    invoke-static {p2, v2, v3}, Landroid/provider/Settings$Secure;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I
 
     move-result p2
 
     iput p2, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;->mPowerSaveChecked:I
 
-    if-ne p2, v4, :cond_0
+    if-ne p2, v3, :cond_0
 
     iget-object p2, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;->mContext:Landroid/content/Context;
 
@@ -734,16 +732,18 @@
 
     move-result-object p2
 
-    invoke-static {p2, v3, v2}, Landroid/provider/Settings$Secure;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z
+    const/4 v3, 0x1
+
+    invoke-static {p2, v2, v3}, Landroid/provider/Settings$Secure;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z
 
-    iput v2, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;->mPowerSaveChecked:I
+    iput v3, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;->mPowerSaveChecked:I
 
     :cond_0
     iget-object p2, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;->mContext:Landroid/content/Context;
 
-    const-string v3, "wifi"
+    const-string v2, "wifi"
 
-    invoke-virtual {p2, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;
+    invoke-virtual {p2, v2}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;
 
     move-result-object p2
 
@@ -759,31 +759,31 @@
 
     iget-object p2, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;->mWifiManager:Landroid/net/wifi/WifiManager;
 
-    new-instance v3, Landroid/os/HandlerExecutor;
+    new-instance v2, Landroid/os/HandlerExecutor;
 
-    new-instance v4, Landroid/os/Handler;
+    new-instance v3, Landroid/os/Handler;
 
-    invoke-direct {v4}, Landroid/os/Handler;-><init>()V
+    invoke-direct {v3}, Landroid/os/Handler;-><init>()V
 
-    invoke-direct {v3, v4}, Landroid/os/HandlerExecutor;-><init>(Landroid/os/Handler;)V
+    invoke-direct {v2, v3}, Landroid/os/HandlerExecutor;-><init>(Landroid/os/Handler;)V
 
-    iget-object v4, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;->mSoftApCallback:Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl$SoftApCallback;
+    iget-object v3, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;->mSoftApCallback:Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl$SoftApCallback;
 
-    invoke-virtual {p2, v3, v4}, Landroid/net/wifi/WifiManager;->registerSoftApCallback(Ljava/util/concurrent/Executor;Landroid/net/wifi/WifiManager$SoftApCallback;)V
+    invoke-virtual {p2, v2, v3}, Landroid/net/wifi/WifiManager;->registerSoftApCallback(Ljava/util/concurrent/Executor;Landroid/net/wifi/WifiManager$SoftApCallback;)V
 
     :cond_1
     iget p2, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;->mPowerSaveChecked:I
 
-    if-eqz p2, :cond_6
+    if-eqz p2, :cond_5
 
     if-nez p1, :cond_2
 
-    goto :goto_2
+    goto :goto_1
 
     :cond_2
     iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;->mContext:Landroid/content/Context;
 
-    if-eqz p1, :cond_5
+    if-eqz p1, :cond_4
 
     invoke-direct {p0, p1}, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;->isPlugged(Landroid/content/Context;)Z
 
@@ -813,65 +813,29 @@
     :goto_0
     iput-boolean v0, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;->mIsLcdOn:Z
 
-    iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;->mWifiManager:Landroid/net/wifi/WifiManager;
-
-    invoke-virtual {p1}, Landroid/net/wifi/WifiManager;->getSoftApConfiguration()Landroid/net/wifi/SoftApConfiguration;
-
-    move-result-object p1
-
-    invoke-virtual {p1}, Landroid/net/wifi/SoftApConfiguration;->getBands()[I
-
-    move-result-object p1
-
-    array-length p1, p1
-
-    const-string p2, "swlan0"
-
-    if-le p1, v2, :cond_4
-
-    iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;->mStateMachineMap:Ljava/util/concurrent/ConcurrentHashMap;
-
-    new-instance v0, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl$SoftApPowerSaveStateMachine;
-
-    invoke-direct {v0, p0, p2}, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl$SoftApPowerSaveStateMachine;-><init>(Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;Ljava/lang/String;)V
-
-    invoke-virtual {p1, p2, v0}, Ljava/util/concurrent/ConcurrentHashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-
     iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;->mStateMachineMap:Ljava/util/concurrent/ConcurrentHashMap;
 
     new-instance p2, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl$SoftApPowerSaveStateMachine;
 
-    const-string v0, "wlan2"
+    const-string v0, "swlan0"
 
     invoke-direct {p2, p0, v0}, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl$SoftApPowerSaveStateMachine;-><init>(Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;Ljava/lang/String;)V
 
     invoke-virtual {p1, v0, p2}, Ljava/util/concurrent/ConcurrentHashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
 
-    goto :goto_1
-
-    :cond_4
-    iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;->mStateMachineMap:Ljava/util/concurrent/ConcurrentHashMap;
-
-    new-instance v0, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl$SoftApPowerSaveStateMachine;
-
-    invoke-direct {v0, p0, p2}, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl$SoftApPowerSaveStateMachine;-><init>(Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;Ljava/lang/String;)V
-
-    invoke-virtual {p1, p2, v0}, Ljava/util/concurrent/ConcurrentHashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-
-    :goto_1
     const/16 p1, 0x64
 
     invoke-direct {p0, p1}, Lcom/samsung/android/server/wifi/ap/SemWifiApPowerSaveImpl;->sendMessage(I)V
 
-    :cond_5
+    :cond_4
     const-string p0, "registerSoftApCallback end"
 
     invoke-static {v1, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
 
     return-void
 
-    :cond_6
-    :goto_2
+    :cond_5
+    :goto_1
     const-string p0, "PowerSaveMode is not enabled"
 
     invoke-static {v1, p0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
diff --git a/smali/com/samsung/android/server/wifi/ap/SemWifiApServiceImpl.smali b/smali/com/samsung/android/server/wifi/ap/SemWifiApServiceImpl.smali
index 7caff8f..fa14877 100644
--- a/smali/com/samsung/android/server/wifi/ap/SemWifiApServiceImpl.smali
+++ b/smali/com/samsung/android/server/wifi/ap/SemWifiApServiceImpl.smali
@@ -9692,7 +9692,7 @@
 
     const-string v7, "wifiap_persistent_state"
 
-    if-eqz p2, :cond_17
+    if-eqz p2, :cond_16
 
     :try_start_0
     iget-object p2, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;->mWifiManagerProxy:Lcom/samsung/android/server/wifi/SemWifiManagerProxy;
@@ -9746,7 +9746,7 @@
     :cond_4
     const/16 v8, 0xd
 
-    if-eq p2, v8, :cond_16
+    if-eq p2, v8, :cond_15
 
     const/16 v8, 0xc
 
@@ -9929,36 +9929,11 @@
     move-result-object p1
 
     :goto_1
-    if-eqz p1, :cond_c
-
-    invoke-virtual {p1}, Landroid/net/wifi/SoftApConfiguration;->getChannels()Landroid/util/SparseIntArray;
-
-    move-result-object p2
-
-    invoke-virtual {p2}, Landroid/util/SparseIntArray;->size()I
-
-    move-result p2
-
-    if-le p2, v4, :cond_c
-
-    const-string p2, " SPF dualAp is so disable scan mode"
-
-    invoke-static {v5, p2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
-
-    iget-object p2, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;->mSemWifiInjector:Lcom/samsung/android/server/wifi/SemWifiInjector;
-
-    invoke-virtual {p2}, Lcom/samsung/android/server/wifi/SemWifiInjector;->getSoftApManager()Lcom/samsung/android/server/wifi/ap/SemSoftApManager;
-
-    move-result-object p2
-
-    invoke-virtual {p2}, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->dualSoftApScanModeDisable()V
-
-    :cond_c
     invoke-virtual {p0}, Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;->isWifiSharingLiteSupported()Z
 
     move-result p2
 
-    if-eqz p2, :cond_e
+    if-eqz p2, :cond_d
 
     iget-object p2, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;->mFacade:Lcom/samsung/android/server/wifi/SemFrameworkFacade;
 
@@ -9968,13 +9943,13 @@
 
     move-result p2
 
-    if-eqz p2, :cond_e
+    if-eqz p2, :cond_d
 
     invoke-direct {p0}, Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;->getIndoorSupportStatus()Z
 
     move-result p2
 
-    if-eqz p2, :cond_d
+    if-eqz p2, :cond_c
 
     const-string p2, "Wifi is connected to indoor channel, so discconnect wifi"
 
@@ -10010,11 +9985,11 @@
 
     invoke-virtual {p2}, Ljava/lang/InterruptedException;->printStackTrace()V
 
-    :cond_d
+    :cond_c
     :goto_2
     invoke-virtual {p0, v4}, Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;->setIndoorChannelsToDriver(Z)V
 
-    :cond_e
+    :cond_d
     iget-object p2, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;->mContext:Landroid/content/Context;
 
     const-string v1, "hotspot_enabled_history"
@@ -10029,15 +10004,15 @@
 
     move-result p2
 
-    if-eqz p2, :cond_f
+    if-eqz p2, :cond_e
 
-    if-eqz p1, :cond_f
+    if-eqz p1, :cond_e
 
     invoke-virtual {p1}, Landroid/net/wifi/SoftApConfiguration;->getBand()I
 
     move-result p2
 
-    if-ne p2, v4, :cond_f
+    if-ne p2, v4, :cond_e
 
     iget-object p2, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;->mFacade:Lcom/samsung/android/server/wifi/SemFrameworkFacade;
 
@@ -10047,14 +10022,14 @@
 
     invoke-virtual {p2, v1, v8}, Lcom/samsung/android/server/wifi/SemFrameworkFacade;->setSystemProperties(Ljava/lang/String;Ljava/lang/String;)V
 
-    :cond_f
+    :cond_e
     invoke-virtual {p0}, Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;->supportWifiAp6GBasedOnCountry()Z
 
     move-result p2
 
-    if-eqz p2, :cond_13
+    if-eqz p2, :cond_12
 
-    if-eqz p1, :cond_10
+    if-eqz p1, :cond_f
 
     invoke-virtual {p1}, Landroid/net/wifi/SoftApConfiguration;->getBand()I
 
@@ -10062,11 +10037,11 @@
 
     and-int/lit8 p2, p2, 0x4
 
-    if-eqz p2, :cond_11
+    if-eqz p2, :cond_10
 
     goto :goto_3
 
-    :cond_10
+    :cond_f
     invoke-virtual {p0}, Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;->getSoftApConfiguration()Landroid/net/wifi/SoftApConfiguration;
 
     move-result-object p2
@@ -10077,18 +10052,18 @@
 
     and-int/lit8 p2, p2, 0x4
 
-    if-eqz p2, :cond_11
+    if-eqz p2, :cond_10
 
     :goto_3
     move p2, v4
 
     goto :goto_4
 
-    :cond_11
+    :cond_10
     move p2, v6
 
     :goto_4
-    if-eqz p2, :cond_13
+    if-eqz p2, :cond_12
 
     iget-object p2, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;->mWifiManagerProxy:Lcom/samsung/android/server/wifi/SemWifiManagerProxy;
 
@@ -10096,7 +10071,7 @@
 
     move-result-object p2
 
-    if-eqz p2, :cond_13
+    if-eqz p2, :cond_12
 
     invoke-virtual {p2}, Landroid/net/wifi/WifiInfo;->getNetworkId()I
 
@@ -10104,7 +10079,7 @@
 
     const/4 v8, -0x1
 
-    if-eq v1, v8, :cond_13
+    if-eq v1, v8, :cond_12
 
     invoke-virtual {p2}, Landroid/net/wifi/WifiInfo;->getFrequency()I
 
@@ -10130,7 +10105,7 @@
 
     move-result-object v8
 
-    if-eqz v8, :cond_12
+    if-eqz v8, :cond_11
 
     const-string v9, "JP"
 
@@ -10138,7 +10113,7 @@
 
     move-result v9
 
-    if-eqz v9, :cond_12
+    if-eqz v9, :cond_11
 
     iget-object v1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;->mContext:Landroid/content/Context;
 
@@ -10152,7 +10127,7 @@
 
     move-result-object v1
 
-    :cond_12
+    :cond_11
     new-instance v9, Ljava/lang/StringBuilder;
 
     invoke-direct {v9, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
@@ -10173,11 +10148,11 @@
 
     const/16 v0, 0x141e
 
-    if-lt p2, v0, :cond_13
+    if-lt p2, v0, :cond_12
 
     const/16 v0, 0x16da
 
-    if-gt p2, v0, :cond_13
+    if-gt p2, v0, :cond_12
 
     new-instance p2, Landroid/os/Handler;
 
@@ -10193,14 +10168,14 @@
 
     invoke-virtual {p2, v0}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z
 
-    :cond_13
+    :cond_12
     iget-object p2, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;->mWifiManagerProxy:Lcom/samsung/android/server/wifi/SemWifiManagerProxy;
 
     invoke-virtual {p2, p1}, Lcom/samsung/android/server/wifi/SemWifiManagerProxy;->startTetheredHotspot(Landroid/net/wifi/SoftApConfiguration;)Z
 
     move-result p1
 
-    if-nez p1, :cond_14
+    if-nez p1, :cond_13
 
     const-string p2, "Mainline Softap is not enabled"
 
@@ -10210,7 +10185,7 @@
 
     move-result p2
 
-    if-eqz p2, :cond_15
+    if-eqz p2, :cond_14
 
     iget-object p2, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;->mFacade:Lcom/samsung/android/server/wifi/SemFrameworkFacade;
 
@@ -10220,20 +10195,20 @@
 
     move-result p2
 
-    if-eqz p2, :cond_15
+    if-eqz p2, :cond_14
 
     invoke-virtual {p0, v6}, Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;->setIndoorChannelsToDriver(Z)V
 
     goto :goto_5
 
-    :cond_14
+    :cond_13
     iget-object p2, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;->mFacade:Lcom/samsung/android/server/wifi/SemFrameworkFacade;
 
     invoke-virtual {p2}, Lcom/samsung/android/server/wifi/SemFrameworkFacade;->isHotspotDongleProduct()Z
 
     move-result p2
 
-    if-eqz p2, :cond_15
+    if-eqz p2, :cond_14
 
     iget-object p2, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;->mFacade:Lcom/samsung/android/server/wifi/SemFrameworkFacade;
 
@@ -10243,13 +10218,13 @@
     :try_end_8
     .catchall {:try_start_8 .. :try_end_8} :catchall_0
 
-    :cond_15
+    :cond_14
     :goto_5
     invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V
 
     return p1
 
-    :cond_16
+    :cond_15
     :goto_6
     :try_start_9
     new-instance p0, Ljava/lang/StringBuilder;
@@ -10270,7 +10245,7 @@
 
     return v4
 
-    :cond_17
+    :cond_16
     :try_start_a
     iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;->mFacade:Lcom/samsung/android/server/wifi/SemFrameworkFacade;
 
@@ -10280,18 +10255,18 @@
 
     move-result p1
 
-    if-eqz p1, :cond_18
+    if-eqz p1, :cond_17
 
     invoke-direct {p0}, Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;->resetWifiApProvisioningDB()V
 
-    :cond_18
+    :cond_17
     iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;->mFacade:Lcom/samsung/android/server/wifi/SemFrameworkFacade;
 
     invoke-virtual {p1}, Lcom/samsung/android/server/wifi/SemFrameworkFacade;->isHotspotDongleProduct()Z
 
     move-result p1
 
-    if-eqz p1, :cond_19
+    if-eqz p1, :cond_18
 
     iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;->mFacade:Lcom/samsung/android/server/wifi/SemFrameworkFacade;
 
@@ -10299,12 +10274,12 @@
 
     invoke-virtual {p1, p2, v7, v6}, Lcom/samsung/android/server/wifi/SemFrameworkFacade;->setSecureIntegerSetting(Landroid/content/Context;Ljava/lang/String;I)Z
 
-    :cond_19
+    :cond_18
     invoke-virtual {p0}, Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;->isWifiSharingLiteSupported()Z
 
     move-result p1
 
-    if-eqz p1, :cond_1a
+    if-eqz p1, :cond_19
 
     iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;->mFacade:Lcom/samsung/android/server/wifi/SemFrameworkFacade;
 
@@ -10314,18 +10289,18 @@
 
     move-result p1
 
-    if-eqz p1, :cond_1a
+    if-eqz p1, :cond_19
 
     invoke-virtual {p0, v6}, Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;->setIndoorChannelsToDriver(Z)V
 
-    :cond_1a
+    :cond_19
     iget-boolean p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;->isHotspotLogRunning:Z
 
-    if-eqz p1, :cond_1b
+    if-eqz p1, :cond_1a
 
     invoke-direct {p0}, Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;->stopHotspotDebugLog()V
 
-    :cond_1b
+    :cond_1a
     iget-object p0, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;->mWifiManagerProxy:Lcom/samsung/android/server/wifi/SemWifiManagerProxy;
 
     invoke-virtual {p0}, Lcom/samsung/android/server/wifi/SemWifiManagerProxy;->stopSoftAp()Z
diff --git a/smali/com/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler.smali b/smali/com/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler.smali
index 47cb245..62ff4a8 100644
--- a/smali/com/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler.smali
+++ b/smali/com/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler.smali
@@ -32,17 +32,15 @@
 
 # virtual methods
 .method public handleMessage(Landroid/os/Message;)V
-    .locals 6
+    .locals 4
 
     iget p1, p1, Landroid/os/Message;->what:I
 
     const/16 v0, 0xb
 
-    const/4 v1, 0x1
+    const-string v1, "SemWifiApTrafficPoller"
 
-    const-string v2, "SemWifiApTrafficPoller"
-
-    if-eq p1, v0, :cond_4
+    if-eq p1, v0, :cond_3
 
     packed-switch p1, :pswitch_data_0
 
@@ -64,8 +62,6 @@
 
     const-string v0, "Failed to stop tracking interface hotspot : "
 
-    const/4 v1, 0x0
-
     if-eqz p1, :cond_0
 
     iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
@@ -74,11 +70,11 @@
 
     move-result-object p1
 
-    if-eqz p1, :cond_5
+    if-eqz p1, :cond_4
 
     const-string p1, "mPacketTrackerForDualHotspot stop "
 
-    invoke-static {v2, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+    invoke-static {v1, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
 
     :try_start_0
     iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
@@ -87,9 +83,9 @@
 
     move-result-object p1
 
-    const-string v3, "stop logging ap_br_swlan0"
+    const-string v2, "stop logging ap_br_swlan0"
 
-    invoke-virtual {p1, v3}, Landroid/util/LocalLog;->log(Ljava/lang/String;)V
+    invoke-virtual {p1, v2}, Landroid/util/LocalLog;->log(Ljava/lang/String;)V
 
     iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
 
@@ -106,12 +102,12 @@
     :catch_0
     move-exception p1
 
-    invoke-static {v0, p1, v2}, Lcom/samsung/android/server/wifi/SemFrameworkFacade$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/Exception;Ljava/lang/String;)V
+    invoke-static {v0, p1, v1}, Lcom/samsung/android/server/wifi/SemFrameworkFacade$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/Exception;Ljava/lang/String;)V
 
     :goto_0
     iget-object p0, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
 
-    invoke-static {p0, v1}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$fputmPacketTrackerForDualHotspot(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;Lcom/samsung/android/server/wifi/ap/SemConnectivityPacketTracker;)V
+    invoke-static {p0}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$fputmPacketTrackerForDualHotspot(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;)V
 
     goto/16 :goto_5
 
@@ -122,11 +118,13 @@
 
     move-result-object p1
 
+    const/4 v2, 0x0
+
     if-eqz p1, :cond_1
 
     const-string p1, "mPacketTrackerForHotspot stop "
 
-    invoke-static {v2, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+    invoke-static {v1, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
 
     :try_start_1
     iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
@@ -154,12 +152,12 @@
     :catch_1
     move-exception p1
 
-    invoke-static {v0, p1, v2}, Lcom/samsung/android/server/wifi/SemFrameworkFacade$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/Exception;Ljava/lang/String;)V
+    invoke-static {v0, p1, v1}, Lcom/samsung/android/server/wifi/SemFrameworkFacade$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/Exception;Ljava/lang/String;)V
 
     :goto_1
     iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
 
-    invoke-static {p1, v1}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$fputmPacketTrackerForHotspot(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;Lcom/samsung/android/server/wifi/ap/SemConnectivityPacketTracker;)V
+    invoke-static {p1, v2}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$fputmPacketTrackerForHotspot(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;Lcom/samsung/android/server/wifi/ap/SemConnectivityPacketTracker;)V
 
     :cond_1
     iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
@@ -168,7 +166,7 @@
 
     move-result p1
 
-    if-eqz p1, :cond_5
+    if-eqz p1, :cond_4
 
     iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
 
@@ -176,11 +174,11 @@
 
     move-result-object p1
 
-    if-eqz p1, :cond_5
+    if-eqz p1, :cond_4
 
     const-string p1, "mPacketTrackerForWlan0 stop "
 
-    invoke-static {v2, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+    invoke-static {v1, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
 
     :try_start_2
     iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
@@ -210,12 +208,12 @@
 
     const-string v0, "Failed to stop tracking interface station : "
 
-    invoke-static {v0, p1, v2}, Lcom/samsung/android/server/wifi/SemFrameworkFacade$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/Exception;Ljava/lang/String;)V
+    invoke-static {v0, p1, v1}, Lcom/samsung/android/server/wifi/SemFrameworkFacade$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/Exception;Ljava/lang/String;)V
 
     :goto_2
     iget-object p0, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
 
-    invoke-static {p0, v1}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$fputmPacketTrackerForWlan0(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;Lcom/samsung/android/server/wifi/ap/SemConnectivityPacketTracker;)V
+    invoke-static {p0, v2}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$fputmPacketTrackerForWlan0(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;Lcom/samsung/android/server/wifi/ap/SemConnectivityPacketTracker;)V
 
     goto/16 :goto_5
 
@@ -228,160 +226,61 @@
 
     invoke-virtual {p1}, Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;->getSoftApConfiguration()Landroid/net/wifi/SoftApConfiguration;
 
-    move-result-object p1
-
-    invoke-virtual {p1}, Landroid/net/wifi/SoftApConfiguration;->getChannels()Landroid/util/SparseIntArray;
-
-    move-result-object p1
-
-    invoke-virtual {p1}, Landroid/util/SparseIntArray;->size()I
-
-    move-result p1
-
-    const-string v0, "Failed to start tracking interface hotspot : "
-
-    if-le p1, v1, :cond_2
-
     iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
 
     invoke-static {}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$sfgetsPktLogsMhs()Ljava/util/concurrent/ConcurrentHashMap;
 
-    move-result-object v3
-
-    const-string v4, "ap_br_swlan0"
-
-    invoke-virtual {v3, v4}, Ljava/util/concurrent/ConcurrentHashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
-
-    move-result-object v3
-
-    check-cast v3, Landroid/util/LocalLog;
-
-    invoke-static {p1, v3}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$fputmConnectivityPacketLogForDualHotspot(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;Landroid/util/LocalLog;)V
-
-    const-string p1, "createPacketTracker ap_br_swlan0 mApInterfaceName : ap_br_swlan0"
-
-    invoke-static {v2, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
-
-    iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
-
-    invoke-static {v4}, Lcom/android/net/module/util/InterfaceParams;->getByName(Ljava/lang/String;)Lcom/android/net/module/util/InterfaceParams;
-
-    move-result-object v3
-
-    iget-object v5, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
-
-    invoke-static {v5}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$fgetmConnectivityPacketLogForDualHotspot(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;)Landroid/util/LocalLog;
-
-    move-result-object v5
-
-    invoke-static {p1, v3, v5}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$mcreatePacketTracker(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;Lcom/android/net/module/util/InterfaceParams;Landroid/util/LocalLog;)Lcom/samsung/android/server/wifi/ap/SemConnectivityPacketTracker;
-
-    move-result-object v3
-
-    invoke-static {p1, v3}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$fputmPacketTrackerForDualHotspot(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;Lcom/samsung/android/server/wifi/ap/SemConnectivityPacketTracker;)V
-
-    iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
-
-    invoke-static {p1}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$fgetmPacketTrackerForDualHotspot(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;)Lcom/samsung/android/server/wifi/ap/SemConnectivityPacketTracker;
-
-    move-result-object p1
-
-    if-eqz p1, :cond_3
-
-    const-string p1, "mPacketTrackerForDualHotspot start INTERFACE_NAME_OF_DUAL : ap_br_swlan0"
-
-    invoke-static {v2, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
-
-    :try_start_3
-    iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
-
-    invoke-static {p1}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$fgetmConnectivityPacketLogForDualHotspot(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;)Landroid/util/LocalLog;
-
-    move-result-object p1
-
-    const-string v3, "Start logging ap_br_swlan0"
-
-    invoke-virtual {p1, v3}, Landroid/util/LocalLog;->log(Ljava/lang/String;)V
-
-    iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
-
-    invoke-static {p1}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$fgetmPacketTrackerForDualHotspot(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;)Lcom/samsung/android/server/wifi/ap/SemConnectivityPacketTracker;
-
-    move-result-object p1
-
-    invoke-virtual {p1, v4}, Lcom/samsung/android/server/wifi/ap/SemConnectivityPacketTracker;->start(Ljava/lang/String;)V
-
-    iget-object p0, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
-
-    invoke-static {p0, v1}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$fputmUsedDual(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;Z)V
-    :try_end_3
-    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_3
-
-    goto/16 :goto_4
-
-    :catch_3
-    move-exception p0
-
-    invoke-static {v0, p0, v2}, Lcom/samsung/android/server/wifi/SemFrameworkFacade$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/Exception;Ljava/lang/String;)V
-
-    goto/16 :goto_4
-
-    :cond_2
-    iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
-
-    invoke-static {}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$sfgetsPktLogsMhs()Ljava/util/concurrent/ConcurrentHashMap;
-
-    move-result-object v1
+    move-result-object v0
 
-    iget-object v3, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
+    iget-object v2, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
 
-    invoke-static {v3}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$fgetmApInterfaceName(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;)Ljava/lang/String;
+    invoke-static {v2}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$fgetmApInterfaceName(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;)Ljava/lang/String;
 
-    move-result-object v3
+    move-result-object v2
 
-    invoke-virtual {v1, v3}, Ljava/util/concurrent/ConcurrentHashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+    invoke-virtual {v0, v2}, Ljava/util/concurrent/ConcurrentHashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
 
-    move-result-object v1
+    move-result-object v0
 
-    check-cast v1, Landroid/util/LocalLog;
+    check-cast v0, Landroid/util/LocalLog;
 
-    invoke-static {p1, v1}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$fputmConnectivityPacketLogForHotspot(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;Landroid/util/LocalLog;)V
+    invoke-static {p1, v0}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$fputmConnectivityPacketLogForHotspot(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;Landroid/util/LocalLog;)V
 
     new-instance p1, Ljava/lang/StringBuilder;
 
-    const-string v1, "createPacketTracker swlan0 mApInterfaceName : "
+    const-string v0, "createPacketTracker swlan0 mApInterfaceName : "
 
-    invoke-direct {p1, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
+    invoke-direct {p1, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
 
-    iget-object v1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
+    iget-object v0, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
 
-    invoke-static {v1}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$fgetmApInterfaceName(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;)Ljava/lang/String;
+    invoke-static {v0}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$fgetmApInterfaceName(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;)Ljava/lang/String;
 
-    move-result-object v1
+    move-result-object v0
 
-    invoke-static {p1, v1, v2}, Lcom/samsung/android/mcf/continuity/common/DLog$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V
+    invoke-static {p1, v0, v1}, Lcom/samsung/android/mcf/continuity/common/DLog$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V
 
     iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
 
     invoke-static {p1}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$fgetmApInterfaceName(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;)Ljava/lang/String;
 
-    move-result-object v1
+    move-result-object v0
 
-    invoke-static {v1}, Lcom/android/net/module/util/InterfaceParams;->getByName(Ljava/lang/String;)Lcom/android/net/module/util/InterfaceParams;
+    invoke-static {v0}, Lcom/android/net/module/util/InterfaceParams;->getByName(Ljava/lang/String;)Lcom/android/net/module/util/InterfaceParams;
 
-    move-result-object v1
+    move-result-object v0
 
-    iget-object v3, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
+    iget-object v2, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
 
-    invoke-static {v3}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$fgetmConnectivityPacketLogForHotspot(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;)Landroid/util/LocalLog;
+    invoke-static {v2}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$fgetmConnectivityPacketLogForHotspot(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;)Landroid/util/LocalLog;
 
-    move-result-object v3
+    move-result-object v2
 
-    invoke-static {p1, v1, v3}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$mcreatePacketTracker(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;Lcom/android/net/module/util/InterfaceParams;Landroid/util/LocalLog;)Lcom/samsung/android/server/wifi/ap/SemConnectivityPacketTracker;
+    invoke-static {p1, v0, v2}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$mcreatePacketTracker(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;Lcom/android/net/module/util/InterfaceParams;Landroid/util/LocalLog;)Lcom/samsung/android/server/wifi/ap/SemConnectivityPacketTracker;
 
-    move-result-object v1
+    move-result-object v0
 
-    invoke-static {p1, v1}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$fputmPacketTrackerForHotspot(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;Lcom/samsung/android/server/wifi/ap/SemConnectivityPacketTracker;)V
+    invoke-static {p1, v0}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$fputmPacketTrackerForHotspot(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;Lcom/samsung/android/server/wifi/ap/SemConnectivityPacketTracker;)V
 
     iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
 
@@ -389,32 +288,32 @@
 
     move-result-object p1
 
-    if-eqz p1, :cond_3
+    if-eqz p1, :cond_2
 
     new-instance p1, Ljava/lang/StringBuilder;
 
-    const-string v1, "mPacketTrackerForHotspot start mApInterfaceName : "
+    const-string v0, "mPacketTrackerForHotspot start mApInterfaceName : "
 
-    invoke-direct {p1, v1}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
+    invoke-direct {p1, v0}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
 
-    iget-object v1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
+    iget-object v0, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
 
-    invoke-static {v1}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$fgetmApInterfaceName(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;)Ljava/lang/String;
+    invoke-static {v0}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$fgetmApInterfaceName(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;)Ljava/lang/String;
 
-    move-result-object v1
+    move-result-object v0
 
-    invoke-static {p1, v1, v2}, Lcom/samsung/android/mcf/continuity/common/DLog$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V
+    invoke-static {p1, v0, v1}, Lcom/samsung/android/mcf/continuity/common/DLog$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V
 
-    :try_start_4
+    :try_start_3
     iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
 
     invoke-static {p1}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$fgetmConnectivityPacketLogForHotspot(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;)Landroid/util/LocalLog;
 
     move-result-object p1
 
-    const-string v1, "Start logging swlan0"
+    const-string v0, "Start logging swlan0"
 
-    invoke-virtual {p1, v1}, Landroid/util/LocalLog;->log(Ljava/lang/String;)V
+    invoke-virtual {p1, v0}, Landroid/util/LocalLog;->log(Ljava/lang/String;)V
 
     iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
 
@@ -422,28 +321,28 @@
 
     move-result-object p1
 
-    iget-object v1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
+    iget-object v0, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
 
-    invoke-static {v1}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$fgetmApInterfaceName(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;)Ljava/lang/String;
+    invoke-static {v0}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$fgetmApInterfaceName(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;)Ljava/lang/String;
 
-    move-result-object v1
+    move-result-object v0
 
-    invoke-virtual {p1, v1}, Lcom/samsung/android/server/wifi/ap/SemConnectivityPacketTracker;->start(Ljava/lang/String;)V
+    invoke-virtual {p1, v0}, Lcom/samsung/android/server/wifi/ap/SemConnectivityPacketTracker;->start(Ljava/lang/String;)V
 
     iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
 
-    const/4 v1, 0x0
-
-    invoke-static {p1, v1}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$fputmUsedDual(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;Z)V
-    :try_end_4
-    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_4
+    invoke-static {p1}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$fputmUsedDual(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;)V
+    :try_end_3
+    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_3
 
     goto :goto_3
 
-    :catch_4
+    :catch_3
     move-exception p1
 
-    invoke-static {v0, p1, v2}, Lcom/samsung/android/server/wifi/SemFrameworkFacade$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/Exception;Ljava/lang/String;)V
+    const-string v0, "Failed to start tracking interface hotspot : "
+
+    invoke-static {v0, p1, v1}, Lcom/samsung/android/server/wifi/SemFrameworkFacade$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/Exception;Ljava/lang/String;)V
 
     :goto_3
     iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
@@ -452,7 +351,7 @@
 
     move-result p1
 
-    if-eqz p1, :cond_3
+    if-eqz p1, :cond_2
 
     iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
 
@@ -460,9 +359,9 @@
 
     move-result-object v0
 
-    const-string v1, "wlan0"
+    const-string v2, "wlan0"
 
-    invoke-virtual {v0, v1}, Ljava/util/concurrent/ConcurrentHashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+    invoke-virtual {v0, v2}, Ljava/util/concurrent/ConcurrentHashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
 
     move-result-object v0
 
@@ -472,11 +371,11 @@
 
     const-string p1, "createPacketTracker INTERFACE_NAME_OF_WLAN : wlan0"
 
-    invoke-static {v2, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+    invoke-static {v1, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
 
     iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
 
-    invoke-static {v1}, Lcom/android/net/module/util/InterfaceParams;->getByName(Ljava/lang/String;)Lcom/android/net/module/util/InterfaceParams;
+    invoke-static {v2}, Lcom/android/net/module/util/InterfaceParams;->getByName(Ljava/lang/String;)Lcom/android/net/module/util/InterfaceParams;
 
     move-result-object v0
 
@@ -498,13 +397,13 @@
 
     move-result-object p1
 
-    if-eqz p1, :cond_3
+    if-eqz p1, :cond_2
 
     const-string p1, "mPacketTrackerForWlan0 start INTERFACE_NAME_OF_WLAN : wlan0"
 
-    invoke-static {v2, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+    invoke-static {v1, p1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
 
-    :try_start_5
+    :try_start_4
     iget-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
 
     invoke-static {p1}, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->-$$Nest$fgetmConnectivityPacketLogForWlan0(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;)Landroid/util/LocalLog;
@@ -521,38 +420,38 @@
 
     move-result-object p0
 
-    invoke-virtual {p0, v1}, Lcom/samsung/android/server/wifi/ap/SemConnectivityPacketTracker;->start(Ljava/lang/String;)V
-    :try_end_5
-    .catch Ljava/lang/Exception; {:try_start_5 .. :try_end_5} :catch_5
+    invoke-virtual {p0, v2}, Lcom/samsung/android/server/wifi/ap/SemConnectivityPacketTracker;->start(Ljava/lang/String;)V
+    :try_end_4
+    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_4
 
     goto :goto_4
 
-    :catch_5
+    :catch_4
     move-exception p0
 
     const-string p1, "Failed to start tracking interface station : "
 
-    invoke-static {p1, p0, v2}, Lcom/samsung/android/server/wifi/SemFrameworkFacade$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/Exception;Ljava/lang/String;)V
+    invoke-static {p1, p0, v1}, Lcom/samsung/android/server/wifi/SemFrameworkFacade$$ExternalSyntheticOutline0;->m(Ljava/lang/String;Ljava/lang/Exception;Ljava/lang/String;)V
 
-    :cond_3
+    :cond_2
     :goto_4
     const-string p0, "received START_PACKET_LOG"
 
-    invoke-static {v2, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+    invoke-static {v1, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
 
     goto :goto_5
 
     :pswitch_3
     const-string p0, "received SET_CHANGE_PCIE_CORE"
 
-    invoke-static {v2, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+    invoke-static {v1, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
 
     goto :goto_5
 
     :pswitch_4
     const-string p0, "received STOP_TRAFFIC_CHECK"
 
-    invoke-static {v2, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+    invoke-static {v1, p0}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
 
     goto :goto_5
 
@@ -563,10 +462,10 @@
 
     goto :goto_5
 
-    :cond_4
+    :cond_3
     const-string p1, " setAntMode(1)"
 
-    invoke-static {v2, p1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+    invoke-static {v1, p1}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
 
     iget-object p0, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller$SemWifiApTrafficPollerWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;
 
@@ -574,14 +473,14 @@
 
     move-result-object p0
 
-    invoke-virtual {p0, v1}, Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;->setAntMode(I)V
+    const/4 p1, 0x1
 
-    :cond_5
+    invoke-virtual {p0, p1}, Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;->setAntMode(I)V
+
+    :cond_4
     :goto_5
     return-void
 
-    nop
-
     :pswitch_data_0
     .packed-switch 0x1
         :pswitch_5
diff --git a/smali/com/samsung/android/server/wifi/ap/SemWifiApTrafficPoller.smali b/smali/com/samsung/android/server/wifi/ap/SemWifiApTrafficPoller.smali
index 4f7aa48..a0a90f1 100644
--- a/smali/com/samsung/android/server/wifi/ap/SemWifiApTrafficPoller.smali
+++ b/smali/com/samsung/android/server/wifi/ap/SemWifiApTrafficPoller.smali
@@ -40,7 +40,7 @@
 
 .field private static final STOP_TRAFFIC_CHECK:I = 0x2
 
-.field private static final SUPPORTDUALSOFTAP_SPF:Z = true
+.field private static final SUPPORTDUALSOFTAP_SPF:Z = false
 
 .field private static final TAG:Ljava/lang/String; = "SemWifiApTrafficPoller"
 
@@ -207,14 +207,6 @@
     return-object p0
 .end method
 
-.method static bridge synthetic -$$Nest$fputmConnectivityPacketLogForDualHotspot(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;Landroid/util/LocalLog;)V
-    .locals 0
-
-    iput-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->mConnectivityPacketLogForDualHotspot:Landroid/util/LocalLog;
-
-    return-void
-.end method
-
 .method static bridge synthetic -$$Nest$fputmConnectivityPacketLogForHotspot(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;Landroid/util/LocalLog;)V
     .locals 0
 
@@ -231,10 +223,12 @@
     return-void
 .end method
 
-.method static bridge synthetic -$$Nest$fputmPacketTrackerForDualHotspot(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;Lcom/samsung/android/server/wifi/ap/SemConnectivityPacketTracker;)V
-    .locals 0
+.method static bridge synthetic -$$Nest$fputmPacketTrackerForDualHotspot(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;)V
+    .locals 1
 
-    iput-object p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->mPacketTrackerForDualHotspot:Lcom/samsung/android/server/wifi/ap/SemConnectivityPacketTracker;
+    const/4 v0, 0x0
+
+    iput-object v0, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->mPacketTrackerForDualHotspot:Lcom/samsung/android/server/wifi/ap/SemConnectivityPacketTracker;
 
     return-void
 .end method
@@ -255,10 +249,12 @@
     return-void
 .end method
 
-.method static bridge synthetic -$$Nest$fputmUsedDual(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;Z)V
-    .locals 0
+.method static bridge synthetic -$$Nest$fputmUsedDual(Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;)V
+    .locals 1
+
+    const/4 v0, 0x0
 
-    iput-boolean p1, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->mUsedDual:Z
+    iput-boolean v0, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->mUsedDual:Z
 
     return-void
 .end method
@@ -1008,22 +1004,9 @@
     move-result-wide v0
 
     :try_start_0
-    iget-object v2, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->mConnectivityPacketLogForDualHotspot:Landroid/util/LocalLog;
-
-    if-eqz v2, :cond_0
-
-    const-string v2, "SemWifiApTrafficPoller connectivity packet log: ap_br_swlan0"
-
-    invoke-virtual {p2, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
-
-    iget-object v2, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->mConnectivityPacketLogForDualHotspot:Landroid/util/LocalLog;
-
-    invoke-virtual {v2, p1, p2, p3}, Landroid/util/LocalLog;->dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
-
-    :cond_0
     iget-object v2, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->mConnectivityPacketLogForHotspot:Landroid/util/LocalLog;
 
-    if-eqz v2, :cond_1
+    if-eqz v2, :cond_0
 
     const-string v2, "SemWifiApTrafficPoller connectivity packet log: swlan0"
 
@@ -1039,24 +1022,24 @@
 
     iget-boolean v2, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->mIsSupportWifiSharing:Z
 
-    if-eqz v2, :cond_2
+    if-eqz v2, :cond_1
 
     iget-object p0, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->mConnectivityPacketLogForWlan0:Landroid/util/LocalLog;
 
-    if-eqz p0, :cond_2
+    if-eqz p0, :cond_1
 
     invoke-virtual {p0, p1, p2, p3}, Landroid/util/LocalLog;->dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
 
     goto :goto_0
 
-    :cond_1
+    :cond_0
     const-string p0, "SemWifiApTrafficPollermConnectivityPacketLogForHotspot is null"
 
     invoke-virtual {p2, p0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
     :try_end_0
     .catchall {:try_start_0 .. :try_end_0} :catchall_0
 
-    :cond_2
+    :cond_1
     :goto_0
     invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
 
@@ -1149,7 +1132,7 @@
 
     iget-object v0, p0, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->mApInterfaceName:Ljava/lang/String;
 
-    if-eqz v0, :cond_3
+    if-eqz v0, :cond_2
 
     sget-object v2, Lcom/samsung/android/server/wifi/ap/SemWifiApTrafficPoller;->sPktLogsMhs:Ljava/util/concurrent/ConcurrentHashMap;
 
@@ -1174,17 +1157,6 @@
     invoke-virtual {v2, v3, v0}, Ljava/util/concurrent/ConcurrentHashMap;->putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
 
     :cond_2
-    new-instance v0, Landroid/util/LocalLog;
-
-    const/16 v3, 0x3e8
-
-    invoke-direct {v0, v3}, Landroid/util/LocalLog;-><init>(I)V
-
-    const-string v3, "ap_br_swlan0"
-
-    invoke-virtual {v2, v3, v0}, Ljava/util/concurrent/ConcurrentHashMap;->putIfAbsent(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
-
-    :cond_3
     new-instance v0, Ljava/lang/StringBuilder;
 
     const-string v2, "mApInterfaceName : "
diff --git a/smali/com/samsung/android/server/wifi/ap/datausage/SemWifiApEbpf.smali b/smali/com/samsung/android/server/wifi/ap/datausage/SemWifiApEbpf.smali
index d8058f4..f404ffa 100644
--- a/smali/com/samsung/android/server/wifi/ap/datausage/SemWifiApEbpf.smali
+++ b/smali/com/samsung/android/server/wifi/ap/datausage/SemWifiApEbpf.smali
@@ -2154,28 +2154,23 @@
 
     move-result-object p1
 
-    invoke-virtual {p1}, Lcom/samsung/android/server/wifi/SemWifiInjector;->getSemSoftApConfiguration()Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;
+    invoke-virtual {p1}, Lcom/samsung/android/server/wifi/SemWifiInjector;->getWifiApServiceImpl()Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;
 
     move-result-object p1
 
-    invoke-virtual {p1}, Lcom/samsung/android/server/wifi/ap/SemSoftApConfiguration;->isWifiApEnabledWithDualBand()Z
+    invoke-virtual {p1}, Lcom/samsung/android/server/wifi/ap/SemWifiApServiceImpl;->getWifiApInterfaceName()Ljava/lang/String;
 
-    move-result p1
-
-    if-eqz p1, :cond_0
-
-    const-string p1, "ap_br_swlan0"
+    move-result-object p1
 
     sput-object p1, Lcom/samsung/android/server/wifi/ap/datausage/SemWifiApEbpf;->mSoftApInterface:Ljava/lang/String;
 
-    goto :goto_0
+    if-nez p1, :cond_0
 
-    :cond_0
     const-string p1, "swlan0"
 
     sput-object p1, Lcom/samsung/android/server/wifi/ap/datausage/SemWifiApEbpf;->mSoftApInterface:Ljava/lang/String;
 
-    :goto_0
+    :cond_0
     invoke-direct {p0}, Lcom/samsung/android/server/wifi/ap/datausage/SemWifiApEbpf;->getOemNetd()Lcom/android/internal/net/IOemNetd;
 
     move-result-object p1
@@ -2273,7 +2268,7 @@
     .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0
     .catch Ljava/lang/AbstractMethodError; {:try_start_0 .. :try_end_0} :catch_0
 
-    goto :goto_1
+    goto :goto_0
 
     :catch_0
     move-exception p1
@@ -2281,12 +2276,12 @@
     invoke-virtual {p1}, Ljava/lang/Throwable;->printStackTrace()V
 
     :cond_1
-    :goto_1
+    :goto_0
     iget-object p0, p0, Lcom/samsung/android/server/wifi/ap/datausage/SemWifiApEbpf;->mGlobalDataUsageStats:Lcom/samsung/android/server/wifi/ap/datausage/SemWifiApEbpf$GlobalDataUsageStats;
 
     invoke-virtual {p0}, Lcom/samsung/android/server/wifi/ap/datausage/SemWifiApEbpf$GlobalDataUsageStats;->reset()V
 
-    goto :goto_3
+    goto :goto_2
 
     :cond_2
     :try_start_1
@@ -2315,17 +2310,17 @@
     .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_1
     .catch Ljava/lang/AbstractMethodError; {:try_start_1 .. :try_end_1} :catch_1
 
-    goto :goto_2
+    goto :goto_1
 
     :catch_1
     move-exception p1
 
     invoke-virtual {p1}, Ljava/lang/Throwable;->printStackTrace()V
 
-    :goto_2
+    :goto_1
     invoke-direct {p0}, Lcom/samsung/android/server/wifi/ap/datausage/SemWifiApEbpf;->handleWifiApDisabled()V
 
-    :goto_3
+    :goto_2
     return-void
 .end method
 
diff --git a/smali/com/samsung/android/server/wifi/ap/mcf/SemWifiApContinuityUtil.smali b/smali/com/samsung/android/server/wifi/ap/mcf/SemWifiApContinuityUtil.smali
index 1228680..1b1b2ca 100644
--- a/smali/com/samsung/android/server/wifi/ap/mcf/SemWifiApContinuityUtil.smali
+++ b/smali/com/samsung/android/server/wifi/ap/mcf/SemWifiApContinuityUtil.smali
@@ -324,7 +324,7 @@
 
     move-result-object p0
 
-    const-string v0, "GET_FREQ_DUAL"
+    const-string v0, "GET_FREQ"
 
     invoke-virtual {p0, v0}, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->sendHostapdCommand(Ljava/lang/String;)Ljava/lang/String;
 
@@ -907,54 +907,21 @@
 .end method
 
 .method getWifi6Network()I
-    .locals 4
+    .locals 2
 
     invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
 
     move-result-wide v0
 
-    :try_start_0
-    iget-object p0, p0, Lcom/samsung/android/server/wifi/ap/mcf/SemWifiApContinuityUtil;->mContext:Landroid/content/Context;
-
-    invoke-virtual {p0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;
-
-    move-result-object p0
-
-    const-string v2, "wifi_ap_11ax_mode_checked"
-
-    const/4 v3, 0x0
-
-    invoke-static {p0, v2, v3}, Landroid/provider/Settings$Secure;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I
-
-    move-result p0
-    :try_end_0
-    .catchall {:try_start_0 .. :try_end_0} :catchall_0
-
-    const/4 v2, 0x1
-
-    if-ne p0, v2, :cond_0
-
-    move v3, v2
-
-    :cond_0
     invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
 
-    invoke-static {v3}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;
-
-    move-result-object p0
+    sget-object p0, Ljava/lang/Boolean;->FALSE:Ljava/lang/Boolean;
 
     invoke-static {p0}, Lcom/samsung/android/server/wifi/ap/mcf/SemWifiApContinuityUtil;->boolToInt(Ljava/lang/Boolean;)I
 
     move-result p0
 
     return p0
-
-    :catchall_0
-    move-exception p0
-
-    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
-
-    throw p0
 .end method
 
 .method public hasSamsungAccount()Z
diff --git a/smali/com/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient$2.smali b/smali/com/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient$2.smali
index 48c1e02..efdaae1 100644
--- a/smali/com/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient$2.smali
+++ b/smali/com/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient$2.smali
@@ -790,7 +790,7 @@
 
     invoke-virtual {v2, v0}, Landroid/bluetooth/BluetoothGatt;->writeCharacteristic(Landroid/bluetooth/BluetoothGattCharacteristic;)Z
 
-    goto/16 :goto_13
+    goto/16 :goto_12
 
     :cond_1
     const-string v0, "SemWifiApSmartGattClient"
@@ -891,7 +891,7 @@
 
     invoke-static {v0, v1}, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient;->-$$Nest$fputmBluetoothDevice(Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient;Landroid/bluetooth/BluetoothDevice;)V
 
-    goto/16 :goto_13
+    goto/16 :goto_12
 
     :cond_2
     iget-object v0, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient$2;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient;
@@ -912,7 +912,7 @@
 
     invoke-virtual {v0, v10}, Landroid/bluetooth/BluetoothDevice;->createBond(I)Z
 
-    goto/16 :goto_13
+    goto/16 :goto_12
 
     :cond_3
     iget-object v0, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient$2;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient;
@@ -933,7 +933,7 @@
 
     invoke-virtual {v2, v0}, Landroid/bluetooth/BluetoothGatt;->readCharacteristic(Landroid/bluetooth/BluetoothGattCharacteristic;)Z
 
-    goto/16 :goto_13
+    goto/16 :goto_12
 
     :cond_4
     iget-object v9, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient$2;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient;
@@ -1028,7 +1028,7 @@
 
     invoke-virtual {v2, v0}, Landroid/bluetooth/BluetoothGatt;->writeCharacteristic(Landroid/bluetooth/BluetoothGattCharacteristic;)Z
 
-    goto/16 :goto_13
+    goto/16 :goto_12
 
     :cond_5
     const/16 v3, 0x12
@@ -1071,7 +1071,7 @@
 
     invoke-virtual {v2, v0}, Landroid/bluetooth/BluetoothGatt;->readCharacteristic(Landroid/bluetooth/BluetoothGattCharacteristic;)Z
 
-    goto/16 :goto_13
+    goto/16 :goto_12
 
     :cond_6
     invoke-virtual/range {p1 .. p1}, Landroid/bluetooth/BluetoothGatt;->getDevice()Landroid/bluetooth/BluetoothDevice;
@@ -1125,7 +1125,7 @@
 
     invoke-virtual {v0, v13}, Landroid/os/Handler;->sendEmptyMessage(I)Z
 
-    goto/16 :goto_13
+    goto/16 :goto_12
 
     :cond_8
     iget-object v9, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient$2;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient;
@@ -1628,7 +1628,7 @@
 
     invoke-virtual {v2, v0}, Landroid/bluetooth/BluetoothGatt;->readCharacteristic(Landroid/bluetooth/BluetoothGattCharacteristic;)Z
 
-    goto/16 :goto_13
+    goto/16 :goto_12
 
     :cond_11
     if-nez v6, :cond_35
@@ -1679,7 +1679,7 @@
 
     invoke-virtual {v2, v0}, Landroid/bluetooth/BluetoothGatt;->readCharacteristic(Landroid/bluetooth/BluetoothGattCharacteristic;)Z
 
-    goto/16 :goto_13
+    goto/16 :goto_12
 
     :cond_12
     iget-object v0, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient$2;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient;
@@ -1952,7 +1952,7 @@
 
     invoke-virtual {v1, v0}, Landroid/content/Context;->sendBroadcast(Landroid/content/Intent;)V
 
-    goto/16 :goto_13
+    goto/16 :goto_12
 
     :cond_19
     iget-object v0, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient$2;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient;
@@ -2492,7 +2492,7 @@
 
     invoke-virtual {v0, v1}, Landroid/os/Handler;->sendEmptyMessage(I)Z
 
-    goto/16 :goto_13
+    goto/16 :goto_12
 
     :cond_23
     :goto_8
@@ -2858,36 +2858,19 @@
 
     invoke-virtual {v13, v14}, Landroid/net/wifi/nl80211/WifiNl80211Manager;->getChannelsMhzForBand(I)[I
 
-    move-result-object v13
-
-    array-length v13, v13
-    :try_end_7
-    .catch Ljava/lang/Exception; {:try_start_7 .. :try_end_7} :catch_7
-
-    if-nez v13, :cond_2c
-
-    :try_start_8
     const-string v13, "SemWifiApSmartGattClient"
 
-    const-string v14, "allowed frequency 6ghz not supported"
+    const-string v14, "SEC_PRODUCT_FEATURE_WLAN_SUPPORT_80211AX_6GHZ not enabled"
 
     invoke-static {v13, v14}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
-    :try_end_8
-    .catch Ljava/lang/Exception; {:try_start_8 .. :try_end_8} :catch_4
 
     goto :goto_d
 
-    :catch_4
-    move-exception v0
-
-    goto :goto_e
-
     :cond_2b
     const/16 v13, 0x1388
 
     if-le v6, v13, :cond_2c
 
-    :try_start_9
     iget-object v13, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient$2;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient;
 
     invoke-static {v13}, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient;->-$$Nest$fgetmNl80211Manager(Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient;)Landroid/net/wifi/nl80211/WifiNl80211Manager;
@@ -2901,35 +2884,37 @@
     move-result-object v13
 
     array-length v13, v13
-    :try_end_9
-    .catch Ljava/lang/Exception; {:try_start_9 .. :try_end_9} :catch_7
+    :try_end_7
+    .catch Ljava/lang/Exception; {:try_start_7 .. :try_end_7} :catch_7
 
     if-nez v13, :cond_2c
 
-    :try_start_a
+    :try_start_8
     const-string v13, "SemWifiApSmartGattClient"
 
     const-string v14, "allowed frequency 5ghz not supported"
 
     invoke-static {v13, v14}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
-    :try_end_a
-    .catch Ljava/lang/Exception; {:try_start_a .. :try_end_a} :catch_4
+    :try_end_8
+    .catch Ljava/lang/Exception; {:try_start_8 .. :try_end_8} :catch_4
 
     :goto_d
     const/4 v13, 0x0
 
-    goto :goto_f
+    goto :goto_e
+
+    :catch_4
+    move-exception v0
 
-    :goto_e
     const/4 v3, 0x0
 
-    goto/16 :goto_11
+    goto/16 :goto_10
 
     :cond_2c
     const/4 v13, 0x1
 
-    :goto_f
-    :try_start_b
+    :goto_e
+    :try_start_9
     const-string v14, "SemWifiApSmartGattClient"
 
     new-instance v15, Ljava/lang/StringBuilder;
@@ -3009,26 +2994,26 @@
     move-result-object v6
 
     invoke-virtual {v6, v4}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z
-    :try_end_b
-    .catch Ljava/lang/Exception; {:try_start_b .. :try_end_b} :catch_6
+    :try_end_9
+    .catch Ljava/lang/Exception; {:try_start_9 .. :try_end_9} :catch_6
 
     :cond_2d
     if-eqz v5, :cond_31
 
-    :try_start_c
+    :try_start_a
     const-string v4, "presharedkey"
 
     invoke-virtual {v9, v4}, Lorg/json/JSONObject;->getString(Ljava/lang/String;)Ljava/lang/String;
 
     move-result-object v4
-    :try_end_c
-    .catch Lorg/json/JSONException; {:try_start_c .. :try_end_c} :catch_5
-    .catch Ljava/lang/Exception; {:try_start_c .. :try_end_c} :catch_6
+    :try_end_a
+    .catch Lorg/json/JSONException; {:try_start_a .. :try_end_a} :catch_5
+    .catch Ljava/lang/Exception; {:try_start_a .. :try_end_a} :catch_6
 
-    goto :goto_10
+    goto :goto_f
 
     :catch_5
-    :try_start_d
+    :try_start_b
     const-string v4, "SemWifiApSmartGattClient"
 
     const-string v6, "No Preshared key"
@@ -3037,7 +3022,7 @@
 
     const/4 v4, 0x0
 
-    :goto_10
+    :goto_f
     invoke-static {}, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient;->-$$Nest$sfgetMHSDBG()Z
 
     move-result v6
@@ -3141,8 +3126,8 @@
     const/4 v4, 0x0
 
     invoke-static {v4, v0, v3}, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient;->-$$Nest$msetConnectionState(ILcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient;Ljava/lang/String;)V
-    :try_end_d
-    .catch Ljava/lang/Exception; {:try_start_d .. :try_end_d} :catch_6
+    :try_end_b
+    .catch Ljava/lang/Exception; {:try_start_b .. :try_end_b} :catch_6
 
     return-void
 
@@ -3151,35 +3136,35 @@
 
     move v3, v13
 
-    goto :goto_11
+    goto :goto_10
 
     :catchall_1
     move-exception v0
 
-    :try_start_e
+    :try_start_c
     invoke-static {v13, v14}, Landroid/os/Binder;->restoreCallingIdentity(J)V
 
     throw v0
-    :try_end_e
-    .catch Ljava/lang/Exception; {:try_start_e .. :try_end_e} :catch_7
+    :try_end_c
+    .catch Ljava/lang/Exception; {:try_start_c .. :try_end_c} :catch_7
 
     :catch_7
     move-exception v0
 
     const/4 v3, 0x1
 
-    :goto_11
+    :goto_10
     invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V
 
     move v13, v3
 
-    goto :goto_12
+    goto :goto_11
 
     :cond_30
     const/4 v13, 0x1
 
     :cond_31
-    :goto_12
+    :goto_11
     if-eqz v5, :cond_33
 
     const-string v0, "SemWifiApSmartGattClient"
@@ -3242,9 +3227,11 @@
     invoke-static {v0, v2}, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient;->-$$Nest$msendAuthInformation(Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient;Landroid/bluetooth/BluetoothGatt;)V
 
     :cond_35
-    :goto_13
+    :goto_12
     return-void
 
+    nop
+
     :array_0
     .array-data 1
         0x1t
diff --git a/smali/com/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient.smali b/smali/com/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient.smali
index a9b1c6e..0571b3e 100644
--- a/smali/com/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient.smali
+++ b/smali/com/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient.smali
@@ -4926,7 +4926,7 @@
 
     iput-object v3, v0, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient;->mBluetoothAdapter:Landroid/bluetooth/BluetoothAdapter;
 
-    if-eqz v3, :cond_17
+    if-eqz v3, :cond_16
 
     if-nez v1, :cond_9
 
@@ -5216,32 +5216,13 @@
 
     iget-object v1, v0, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient;->mNl80211Manager:Landroid/net/wifi/nl80211/WifiNl80211Manager;
 
-    const/16 v2, 0x8
-
-    invoke-virtual {v1, v2}, Landroid/net/wifi/nl80211/WifiNl80211Manager;->getChannelsMhzForBand(I)[I
-
-    move-result-object v1
-
-    array-length v1, v1
-
-    if-eqz v1, :cond_11
-
-    iget v1, v0, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient;->supportBand:I
-
-    or-int/lit8 v1, v1, 0x4
-
-    iput v1, v0, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient;->supportBand:I
-
-    :cond_11
-    iget-object v1, v0, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient;->mNl80211Manager:Landroid/net/wifi/nl80211/WifiNl80211Manager;
-
     invoke-virtual {v1, v12}, Landroid/net/wifi/nl80211/WifiNl80211Manager;->getChannelsMhzForBand(I)[I
 
     move-result-object v1
 
     array-length v1, v1
 
-    if-eqz v1, :cond_12
+    if-eqz v1, :cond_11
 
     iget v1, v0, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient;->supportBand:I
 
@@ -5249,7 +5230,7 @@
 
     iput v1, v0, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient;->supportBand:I
 
-    :cond_12
+    :cond_11
     const/4 v1, 0x0
 
     iput-boolean v1, v0, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient;->mNeedRetry:Z
@@ -5268,30 +5249,30 @@
 
     invoke-static {v2, v3, v1}, Lcom/samsung/android/server/wifi/SemCellularStateManager$1$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ILjava/lang/String;)V
 
-    if-eqz v10, :cond_13
+    if-eqz v10, :cond_12
 
     iget-object v1, v0, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient;->mAESKey:Ljava/lang/String;
 
-    if-nez v1, :cond_15
+    if-nez v1, :cond_14
 
-    :cond_13
+    :cond_12
     invoke-virtual {v13}, Landroid/bluetooth/BluetoothDevice;->getBondState()I
 
     move-result v1
 
     const/16 v2, 0xa
 
-    if-ne v1, v2, :cond_15
+    if-ne v1, v2, :cond_14
 
     iget-object v1, v0, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient;->mBluetoothAdapter:Landroid/bluetooth/BluetoothAdapter;
 
-    if-eqz v1, :cond_14
+    if-eqz v1, :cond_13
 
     invoke-virtual {v1}, Landroid/bluetooth/BluetoothAdapter;->getState()I
 
     move-result v1
 
-    if-ne v1, v2, :cond_14
+    if-ne v1, v2, :cond_13
 
     const-string v1, "SemWifiApSmartGattClient"
 
@@ -5333,7 +5314,7 @@
 
     goto :goto_3
 
-    :cond_14
+    :cond_13
     const-string v1, "SemWifiApSmartGattClient"
 
     new-instance v2, Ljava/lang/StringBuilder;
@@ -5384,14 +5365,14 @@
 
     goto :goto_3
 
-    :cond_15
+    :cond_14
     const/4 v1, 0x0
 
     invoke-direct {v0, v13, v1}, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattClient;->tryToConnectToRemoteBLE(Landroid/bluetooth/BluetoothDevice;Z)Z
 
     move-result v1
 
-    if-nez v1, :cond_16
+    if-nez v1, :cond_15
 
     const/4 v1, -0x7
 
@@ -5405,7 +5386,7 @@
 
     invoke-virtual {v0, v1}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;
 
-    :cond_16
+    :cond_15
     :goto_3
     return v11
 
@@ -5429,7 +5410,7 @@
 
     throw v0
 
-    :cond_17
+    :cond_16
     :goto_4
     const-string v0, "SemWifiApSmartGattClient"
 
diff --git a/smali/com/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$2.smali b/smali/com/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$2.smali
index ed4f336..ec27a28 100644
--- a/smali/com/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$2.smali
+++ b/smali/com/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$2.smali
@@ -1529,7 +1529,7 @@
 
     move-result-object v2
 
-    const-string v3, "GET_FREQ_DUAL"
+    const-string v3, "GET_FREQ"
 
     invoke-virtual {v2, v3}, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->sendHostapdCommand(Ljava/lang/String;)Ljava/lang/String;
 
diff --git a/smali/com/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$BleWorkHandler.smali b/smali/com/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$BleWorkHandler.smali
index f2cdf07..9b7340c 100644
--- a/smali/com/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$BleWorkHandler.smali
+++ b/smali/com/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$BleWorkHandler.smali
@@ -124,7 +124,7 @@
 
     invoke-static {v3, v2, v4}, Lcom/samsung/android/server/wifi/SemIWCMonitor$$ExternalSyntheticOutline0;->m(Ljava/lang/StringBuilder;ILjava/lang/String;)V
 
-    if-ne v0, v13, :cond_45
+    if-ne v0, v13, :cond_42
 
     iget-object v0, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$BleWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;
 
@@ -132,9 +132,9 @@
 
     move-result v0
 
-    if-eqz v0, :cond_45
+    if-eqz v0, :cond_42
 
-    if-nez v2, :cond_45
+    if-nez v2, :cond_42
 
     const-string v0, "Disabling Smart MHS after client disconnected 30secs"
 
@@ -188,7 +188,7 @@
 
     move-result v0
 
-    if-lez v0, :cond_45
+    if-lez v0, :cond_42
 
     const-string v0, "TRY_TO_GET_AES AES key is not matched startSmartTetheringApk"
 
@@ -425,7 +425,7 @@
 
     move-result-object v0
 
-    if-eqz v0, :cond_45
+    if-eqz v0, :cond_42
 
     iget-object v0, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$BleWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;
 
@@ -472,7 +472,7 @@
 
     invoke-static {v4, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
 
-    if-ne v0, v13, :cond_45
+    if-ne v0, v13, :cond_42
 
     iget-object v0, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$BleWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;
 
@@ -480,7 +480,7 @@
 
     move-result v0
 
-    if-eqz v0, :cond_45
+    if-eqz v0, :cond_42
 
     const-string v0, "Disabling Smart MHS"
 
@@ -530,7 +530,7 @@
 
     move-result v2
 
-    if-eqz v2, :cond_45
+    if-eqz v2, :cond_42
 
     iget-object v1, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$BleWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;
 
@@ -545,7 +545,7 @@
 
     check-cast v0, Ljava/lang/String;
 
-    if-eqz v0, :cond_45
+    if-eqz v0, :cond_42
 
     new-instance v2, Ljava/lang/StringBuilder;
 
@@ -1641,7 +1641,7 @@
 
     move-result-object v0
 
-    if-eqz v0, :cond_45
+    if-eqz v0, :cond_42
 
     iget-object v0, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$BleWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;
 
@@ -1737,7 +1737,7 @@
 
     move-result-object v0
 
-    const-string v2, "GET_FREQ_DUAL"
+    const-string v2, "GET_FREQ"
 
     invoke-virtual {v0, v2}, Lcom/samsung/android/server/wifi/ap/SemSoftApManager;->sendHostapdCommand(Ljava/lang/String;)Ljava/lang/String;
 
@@ -1950,7 +1950,7 @@
 
     and-int/lit8 v0, v17, 0x2
 
-    if-eqz v0, :cond_37
+    if-eqz v0, :cond_35
 
     :cond_2a
     const-string v0, "not able to fetch band info from hostapd, so set 2GHz"
@@ -1970,7 +1970,7 @@
 
     and-int/2addr v0, v3
 
-    if-eqz v0, :cond_30
+    if-eqz v0, :cond_2f
 
     and-int/lit8 v0, v2, 0x4
 
@@ -2026,42 +2026,9 @@
 
     invoke-virtual {v6, v0, v2}, Landroid/net/wifi/SoftApConfiguration$Builder;->setChannel(II)Landroid/net/wifi/SoftApConfiguration$Builder;
 
-    goto/16 :goto_12
+    goto :goto_12
 
     :cond_2e
-    iget-object v0, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$BleWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;
-
-    invoke-static {v0}, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;->-$$Nest$fgetmWifiManagerProxy(Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;)Lcom/samsung/android/server/wifi/SemWifiManagerProxy;
-
-    move-result-object v0
-
-    invoke-virtual {v0}, Lcom/samsung/android/server/wifi/SemWifiManagerProxy;->isWifiEnabled()Z
-
-    move-result v0
-
-    if-nez v0, :cond_2f
-
-    and-int/lit8 v0, v17, 0x2
-
-    if-eqz v0, :cond_2f
-
-    and-int/lit8 v0, v17, 0x1
-
-    if-eqz v0, :cond_2f
-
-    const-string v0, "client supports 6GHz, MHS is enabled in 2.4 GHz and supports dualband,so set dual  Band"
-
-    invoke-static {v4, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
-
-    invoke-static {}, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;->-$$Nest$sfgetmDualAp5GHzChannels()Landroid/util/SparseIntArray;
-
-    move-result-object v0
-
-    invoke-virtual {v6, v0}, Landroid/net/wifi/SoftApConfiguration$Builder;->setChannels(Landroid/util/SparseIntArray;)Landroid/net/wifi/SoftApConfiguration$Builder;
-
-    goto/16 :goto_13
-
-    :cond_2f
     const-string v0, "client supports 6GHz, MHS is enabled in 2.4 GHz ,so set same Band"
 
     invoke-static {v4, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
@@ -2070,9 +2037,9 @@
 
     invoke-virtual {v6, v0}, Landroid/net/wifi/SoftApConfiguration$Builder;->setBand(I)Landroid/net/wifi/SoftApConfiguration$Builder;
 
-    goto/16 :goto_12
+    goto :goto_12
 
-    :cond_30
+    :cond_2f
     iget-object v0, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$BleWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;
 
     invoke-static {v0}, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;->-$$Nest$fgetmGetBandFromClient(Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;)I
@@ -2081,15 +2048,15 @@
 
     and-int/lit8 v0, v0, 0x2
 
-    if-eqz v0, :cond_36
+    if-eqz v0, :cond_34
 
     and-int/lit8 v0, v2, 0x2
 
-    if-eqz v0, :cond_31
+    if-eqz v0, :cond_30
 
     and-int/lit8 v3, v2, 0x1
 
-    if-eqz v3, :cond_31
+    if-eqz v3, :cond_30
 
     new-instance v0, Ljava/lang/StringBuilder;
 
@@ -2111,8 +2078,8 @@
 
     goto :goto_12
 
-    :cond_31
-    if-eqz v0, :cond_32
+    :cond_30
+    if-eqz v0, :cond_31
 
     const-string v0, "client supports 5Ghz, MHS is enabled in 5 GHz ,so set same Band"
 
@@ -2126,83 +2093,48 @@
 
     goto :goto_12
 
-    :cond_32
-    const/4 v0, 0x1
-
-    and-int/2addr v2, v0
-
-    if-eqz v2, :cond_34
-
-    iget-object v0, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$BleWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;
-
-    invoke-static {v0}, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;->-$$Nest$fgetmWifiManagerProxy(Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;)Lcom/samsung/android/server/wifi/SemWifiManagerProxy;
-
-    move-result-object v0
-
-    invoke-virtual {v0}, Lcom/samsung/android/server/wifi/SemWifiManagerProxy;->isWifiEnabled()Z
-
-    move-result v0
-
-    if-nez v0, :cond_33
-
-    and-int/lit8 v0, v17, 0x2
-
-    if-eqz v0, :cond_33
-
-    and-int/lit8 v0, v17, 0x1
-
-    if-eqz v0, :cond_33
-
-    const-string v0, "client supports 5GHz, MHS is enabled in 2.4 GHz and supports dualband,so set dual  Band"
-
-    invoke-static {v4, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+    :cond_31
+    const/16 v0, 0x95
 
-    invoke-static {}, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;->-$$Nest$sfgetmDualAp5GHzChannels()Landroid/util/SparseIntArray;
+    const/4 v3, 0x2
 
-    move-result-object v0
+    const/4 v5, 0x1
 
-    invoke-virtual {v6, v0}, Landroid/net/wifi/SoftApConfiguration$Builder;->setChannels(Landroid/util/SparseIntArray;)Landroid/net/wifi/SoftApConfiguration$Builder;
+    and-int/2addr v2, v5
 
-    goto :goto_13
+    if-eqz v2, :cond_32
 
-    :cond_33
     const-string v0, "client supports 5GHz, MHS is enabled in 2.4 GHz ,so set same Band"
 
     invoke-static {v4, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
 
-    const/4 v0, 0x1
-
-    invoke-virtual {v6, v0}, Landroid/net/wifi/SoftApConfiguration$Builder;->setBand(I)Landroid/net/wifi/SoftApConfiguration$Builder;
+    invoke-virtual {v6, v5}, Landroid/net/wifi/SoftApConfiguration$Builder;->setBand(I)Landroid/net/wifi/SoftApConfiguration$Builder;
 
     goto :goto_12
 
-    :cond_34
-    if-eqz v15, :cond_35
-
-    const/16 v2, 0x95
-
-    const/4 v3, 0x2
+    :cond_32
+    if-eqz v15, :cond_33
 
-    invoke-virtual {v6, v2, v3}, Landroid/net/wifi/SoftApConfiguration$Builder;->setChannel(II)Landroid/net/wifi/SoftApConfiguration$Builder;
+    invoke-virtual {v6, v0, v3}, Landroid/net/wifi/SoftApConfiguration$Builder;->setChannel(II)Landroid/net/wifi/SoftApConfiguration$Builder;
 
     goto :goto_11
 
-    :cond_35
-    invoke-virtual {v6, v0}, Landroid/net/wifi/SoftApConfiguration$Builder;->setBand(I)Landroid/net/wifi/SoftApConfiguration$Builder;
+    :cond_33
+    invoke-virtual {v6, v5}, Landroid/net/wifi/SoftApConfiguration$Builder;->setBand(I)Landroid/net/wifi/SoftApConfiguration$Builder;
 
     :goto_11
-    const-string v2, "MHS is enabled in 6GHz but client supports only 2.4 and 5 Ghz"
+    const-string v0, "MHS is enabled in 6GHz but client supports only 2.4 and 5 Ghz"
 
-    invoke-static {v4, v2}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+    invoke-static {v4, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
 
     goto :goto_14
 
-    :cond_36
+    :cond_34
     const/4 v0, 0x1
 
     and-int/2addr v2, v0
 
-    if-eqz v2, :cond_38
+    if-eqz v2, :cond_36
 
     const-string v2, "client only supports 2.4GHz,MHS is enabled in 2.4 GHz ,so set same Band"
 
@@ -2210,83 +2142,48 @@
 
     invoke-virtual {v6, v0}, Landroid/net/wifi/SoftApConfiguration$Builder;->setBand(I)Landroid/net/wifi/SoftApConfiguration$Builder;
 
-    :cond_37
+    :cond_35
     :goto_12
-    const/4 v0, 0x0
+    const/4 v5, 0x0
 
     goto :goto_14
 
-    :cond_38
-    iget-object v0, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$BleWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;
-
-    invoke-static {v0}, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;->-$$Nest$fgetmWifiManagerProxy(Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;)Lcom/samsung/android/server/wifi/SemWifiManagerProxy;
-
-    move-result-object v0
-
-    invoke-virtual {v0}, Lcom/samsung/android/server/wifi/SemWifiManagerProxy;->isWifiEnabled()Z
-
-    move-result v0
-
-    if-nez v0, :cond_39
-
-    and-int/lit8 v0, v17, 0x2
-
-    if-eqz v0, :cond_39
-
-    and-int/lit8 v0, v17, 0x1
-
-    if-eqz v0, :cond_39
-
-    const-string v0, "client supports 2.4GHz, MHS is enabled in 5/6 GHz and supports dualband,so set dual  Band"
-
-    invoke-static {v4, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
-
-    invoke-static {}, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;->-$$Nest$sfgetmDualAp5GHzChannels()Landroid/util/SparseIntArray;
-
-    move-result-object v0
-
-    invoke-virtual {v6, v0}, Landroid/net/wifi/SoftApConfiguration$Builder;->setChannels(Landroid/util/SparseIntArray;)Landroid/net/wifi/SoftApConfiguration$Builder;
-
-    goto :goto_13
-
-    :cond_39
-    const-string v0, "MHS is enabled in 5 or 6 GHz but client supports only 2.4"
-
-    invoke-static {v4, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+    :cond_36
+    const-string v2, "MHS is enabled in 5 or 6 GHz but client supports only 2.4"
 
-    const/4 v0, 0x1
+    invoke-static {v4, v2}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
 
     invoke-virtual {v6, v0}, Landroid/net/wifi/SoftApConfiguration$Builder;->setBand(I)Landroid/net/wifi/SoftApConfiguration$Builder;
 
     :goto_13
-    const/4 v0, 0x1
+    const/4 v5, 0x1
 
     :goto_14
-    iget-object v2, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$BleWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;
+    iget-object v0, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$BleWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;
 
-    invoke-static {v2}, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;->-$$Nest$fgetmGetOWESecurityFromClient(Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;)I
+    invoke-static {v0}, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;->-$$Nest$fgetmGetOWESecurityFromClient(Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;)I
 
-    move-result v2
+    move-result v0
 
-    if-nez v2, :cond_3c
+    if-nez v0, :cond_39
 
-    const/4 v2, 0x4
+    const/4 v0, 0x4
 
-    if-ne v13, v2, :cond_3c
+    if-ne v13, v0, :cond_39
 
     invoke-virtual {v6}, Landroid/net/wifi/SoftApConfiguration$Builder;->build()Landroid/net/wifi/SoftApConfiguration;
 
-    move-result-object v0
+    move-result-object v2
 
-    invoke-virtual {v0}, Landroid/net/wifi/SoftApConfiguration;->getBand()I
+    invoke-virtual {v2}, Landroid/net/wifi/SoftApConfiguration;->getBand()I
 
-    move-result v0
+    move-result v2
 
     and-int/2addr v0, v2
 
-    if-eqz v0, :cond_3b
+    if-eqz v0, :cond_38
 
-    if-eqz v15, :cond_3a
+    if-eqz v15, :cond_37
 
     iget-object v0, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$BleWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;
 
@@ -2298,7 +2195,7 @@
 
     and-int/2addr v0, v2
 
-    if-eqz v0, :cond_3a
+    if-eqz v0, :cond_37
 
     const-string v0, "MHS is enabled in 6GHz and OWE but client wont support OWE,so enable in 5GHz"
 
@@ -2310,7 +2207,7 @@
 
     goto :goto_15
 
-    :cond_3a
+    :cond_37
     const-string v0, "MHS is enabled in 6GHz and OWE but client wont support OWE,so enable in 2GHz"
 
     invoke-static {v4, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
@@ -2319,7 +2216,7 @@
 
     invoke-virtual {v6, v0}, Landroid/net/wifi/SoftApConfiguration$Builder;->setBand(I)Landroid/net/wifi/SoftApConfiguration$Builder;
 
-    :cond_3b
+    :cond_38
     :goto_15
     const-string v0, "MHS is enabled in OWE but client does not support so enable in Open"
 
@@ -2333,20 +2230,20 @@
 
     goto :goto_16
 
-    :cond_3c
-    iget-object v2, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$BleWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;
+    :cond_39
+    iget-object v0, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$BleWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;
 
-    invoke-static {v2}, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;->-$$Nest$fgetmGetSecurityFromClient(Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;)I
+    invoke-static {v0}, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;->-$$Nest$fgetmGetSecurityFromClient(Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;)I
 
-    move-result v2
+    move-result v0
 
-    const/4 v3, 0x1
+    const/4 v2, 0x1
 
-    if-ne v2, v3, :cond_3d
+    if-ne v0, v2, :cond_3a
 
-    const/4 v2, 0x3
+    const/4 v0, 0x3
 
-    if-ne v13, v2, :cond_3d
+    if-ne v13, v0, :cond_3a
 
     const-string v0, "MHS is enabled in WPA3 but client supports only WPA2, so apply WPA3/2"
 
@@ -2365,128 +2262,128 @@
     invoke-virtual {v6, v0, v2}, Landroid/net/wifi/SoftApConfiguration$Builder;->setPassphrase(Ljava/lang/String;I)Landroid/net/wifi/SoftApConfiguration$Builder;
 
     :goto_16
-    const/4 v0, 0x1
+    const/4 v5, 0x1
 
     goto :goto_17
 
-    :cond_3d
-    iget-object v2, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$BleWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;
+    :cond_3a
+    iget-object v0, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$BleWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;
 
-    invoke-static {v2}, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;->-$$Nest$fgetmGetSecurityFromClient(Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;)I
+    invoke-static {v0}, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;->-$$Nest$fgetmGetSecurityFromClient(Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;)I
 
-    move-result v2
+    move-result v0
 
-    if-nez v2, :cond_3f
+    if-nez v0, :cond_3c
 
-    const/4 v2, 0x1
+    const/4 v0, 0x1
 
-    if-eq v13, v2, :cond_3f
+    if-eq v13, v0, :cond_3c
 
-    if-eqz v13, :cond_3f
+    if-eqz v13, :cond_3c
 
-    const/4 v3, 0x4
+    const/4 v2, 0x4
 
-    if-eq v13, v3, :cond_3f
+    if-eq v13, v2, :cond_3c
 
-    iget-object v3, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$BleWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;
+    iget-object v2, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$BleWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;
 
-    invoke-static {v3, v2}, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;->-$$Nest$fputisNeededSecurityWpa2(Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;Z)V
+    invoke-static {v2, v0}, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;->-$$Nest$fputisNeededSecurityWpa2(Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;Z)V
 
-    const-string v2, "MHS is enabled in WPA3 but dont know about client support, so apply WPA2/3"
+    const-string v0, "MHS is enabled in WPA3 but dont know about client support, so apply WPA2/3"
 
-    invoke-static {v4, v2}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+    invoke-static {v4, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
 
-    const/4 v2, 0x2
+    const/4 v0, 0x2
 
-    if-eq v13, v2, :cond_3e
+    if-eq v13, v0, :cond_3b
 
-    const/4 v0, 0x1
+    const/4 v5, 0x1
 
-    :cond_3e
-    iget-object v3, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$BleWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;
+    :cond_3b
+    iget-object v2, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$BleWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;
 
-    iget-object v3, v3, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;->mSoftApConfiguration:Landroid/net/wifi/SoftApConfiguration;
+    iget-object v2, v2, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;->mSoftApConfiguration:Landroid/net/wifi/SoftApConfiguration;
 
-    invoke-virtual {v3}, Landroid/net/wifi/SoftApConfiguration;->getPassphrase()Ljava/lang/String;
+    invoke-virtual {v2}, Landroid/net/wifi/SoftApConfiguration;->getPassphrase()Ljava/lang/String;
 
-    move-result-object v3
+    move-result-object v2
 
-    invoke-virtual {v6, v3, v2}, Landroid/net/wifi/SoftApConfiguration$Builder;->setPassphrase(Ljava/lang/String;I)Landroid/net/wifi/SoftApConfiguration$Builder;
+    invoke-virtual {v6, v2, v0}, Landroid/net/wifi/SoftApConfiguration$Builder;->setPassphrase(Ljava/lang/String;I)Landroid/net/wifi/SoftApConfiguration$Builder;
 
     goto :goto_17
 
-    :cond_3f
-    new-instance v2, Ljava/lang/StringBuilder;
+    :cond_3c
+    new-instance v0, Ljava/lang/StringBuilder;
 
-    const-string v3, "MHS is enabled in hostapd_security :"
+    const-string v2, "MHS is enabled in hostapd_security :"
 
-    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
+    invoke-direct {v0, v2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
 
-    invoke-virtual {v2, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
 
-    const-string v3, ",applying same"
+    const-string v2, ",applying same"
 
-    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
 
-    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
 
-    move-result-object v2
+    move-result-object v0
 
-    invoke-static {v4, v2}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+    invoke-static {v4, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
 
-    const/4 v2, 0x1
+    const/4 v0, 0x1
 
-    if-lt v13, v2, :cond_40
+    if-lt v13, v0, :cond_3d
 
-    const/4 v2, 0x3
+    const/4 v0, 0x3
 
-    if-gt v13, v2, :cond_40
+    if-gt v13, v0, :cond_3d
 
-    iget-object v2, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$BleWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;
+    iget-object v0, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$BleWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;
 
-    iget-object v2, v2, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;->mSoftApConfiguration:Landroid/net/wifi/SoftApConfiguration;
+    iget-object v0, v0, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;->mSoftApConfiguration:Landroid/net/wifi/SoftApConfiguration;
 
-    invoke-virtual {v2}, Landroid/net/wifi/SoftApConfiguration;->getPassphrase()Ljava/lang/String;
+    invoke-virtual {v0}, Landroid/net/wifi/SoftApConfiguration;->getPassphrase()Ljava/lang/String;
 
-    move-result-object v2
+    move-result-object v0
 
-    invoke-virtual {v6, v2, v13}, Landroid/net/wifi/SoftApConfiguration$Builder;->setPassphrase(Ljava/lang/String;I)Landroid/net/wifi/SoftApConfiguration$Builder;
+    invoke-virtual {v6, v0, v13}, Landroid/net/wifi/SoftApConfiguration$Builder;->setPassphrase(Ljava/lang/String;I)Landroid/net/wifi/SoftApConfiguration$Builder;
 
     goto :goto_17
 
-    :cond_40
-    if-nez v13, :cond_41
+    :cond_3d
+    if-nez v13, :cond_3e
 
-    const/4 v2, 0x0
+    const/4 v0, 0x0
 
-    const/4 v3, 0x0
+    const/4 v2, 0x0
 
-    invoke-virtual {v6, v2, v3}, Landroid/net/wifi/SoftApConfiguration$Builder;->setPassphrase(Ljava/lang/String;I)Landroid/net/wifi/SoftApConfiguration$Builder;
+    invoke-virtual {v6, v0, v2}, Landroid/net/wifi/SoftApConfiguration$Builder;->setPassphrase(Ljava/lang/String;I)Landroid/net/wifi/SoftApConfiguration$Builder;
 
     goto :goto_17
 
-    :cond_41
-    const/4 v2, 0x0
+    :cond_3e
+    const/4 v0, 0x0
 
-    const/4 v3, 0x4
+    const/4 v2, 0x4
 
-    if-ne v13, v3, :cond_42
+    if-ne v13, v2, :cond_3f
 
-    const/4 v3, 0x5
+    const/4 v2, 0x5
 
-    invoke-virtual {v6, v2, v3}, Landroid/net/wifi/SoftApConfiguration$Builder;->setPassphrase(Ljava/lang/String;I)Landroid/net/wifi/SoftApConfiguration$Builder;
+    invoke-virtual {v6, v0, v2}, Landroid/net/wifi/SoftApConfiguration$Builder;->setPassphrase(Ljava/lang/String;I)Landroid/net/wifi/SoftApConfiguration$Builder;
 
-    :cond_42
+    :cond_3f
     :goto_17
-    iget-object v2, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$BleWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;
+    iget-object v0, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$BleWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;
 
     invoke-virtual {v6}, Landroid/net/wifi/SoftApConfiguration$Builder;->build()Landroid/net/wifi/SoftApConfiguration;
 
-    move-result-object v3
+    move-result-object v2
 
-    iput-object v3, v2, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;->mSoftApConfiguration:Landroid/net/wifi/SoftApConfiguration;
+    iput-object v2, v0, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;->mSoftApConfiguration:Landroid/net/wifi/SoftApConfiguration;
 
-    if-nez v0, :cond_43
+    if-nez v5, :cond_40
 
     iget-object v0, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$BleWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;
 
@@ -2508,7 +2405,7 @@
 
     goto :goto_18
 
-    :cond_43
+    :cond_40
     const/4 v0, 0x0
 
     iget-object v2, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$BleWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;
@@ -2527,7 +2424,7 @@
 
     move-result-object v0
 
-    if-eqz v0, :cond_44
+    if-eqz v0, :cond_41
 
     iget-object v0, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$BleWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;
 
@@ -2541,7 +2438,7 @@
 
     invoke-virtual {v0, v2, v5, v6}, Landroid/os/Handler;->sendEmptyMessageDelayed(IJ)Z
 
-    :cond_44
+    :cond_41
     const-string v0, "restart MHS"
 
     invoke-static {v4, v0}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
@@ -2599,7 +2496,7 @@
 
     move-result v0
 
-    if-eqz v0, :cond_45
+    if-eqz v0, :cond_42
 
     iget-object v0, v1, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer$BleWorkHandler;->this$0:Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;
 
@@ -2613,10 +2510,12 @@
 
     invoke-static {v0, v1, v2}, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;->-$$Nest$mnotifyConnectedDevices(Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;Ljava/util/UUID;I)V
 
-    :cond_45
+    :cond_42
     :goto_18
     return-void
 
+    nop
+
     :pswitch_data_0
     .packed-switch 0x1
         :pswitch_d
diff --git a/smali/com/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer.smali b/smali/com/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer.smali
index 9d187bb..557c927 100644
--- a/smali/com/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer.smali
+++ b/smali/com/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer.smali
@@ -717,14 +717,6 @@
     return v0
 .end method
 
-.method static bridge synthetic -$$Nest$sfgetmDualAp5GHzChannels()Landroid/util/SparseIntArray;
-    .locals 1
-
-    sget-object v0, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartGattServer;->mDualAp5GHzChannels:Landroid/util/SparseIntArray;
-
-    return-object v0
-.end method
-
 .method static constructor <clinit>()V
     .locals 2
 
diff --git a/smali/com/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartUtil.smali b/smali/com/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartUtil.smali
index 1a8216c..01527f0 100644
--- a/smali/com/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartUtil.smali
+++ b/smali/com/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartUtil.smali
@@ -5172,46 +5172,17 @@
 .end method
 
 .method getWifi6Network()Z
-    .locals 4
+    .locals 2
 
     invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
 
     move-result-wide v0
 
-    :try_start_0
-    iget-object p0, p0, Lcom/samsung/android/server/wifi/ap/smarttethering/SemWifiApSmartUtil;->mContext:Landroid/content/Context;
-
-    invoke-virtual {p0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;
-
-    move-result-object p0
-
-    const-string v2, "wifi_ap_11ax_mode_checked"
-
-    const/4 v3, 0x0
-
-    invoke-static {p0, v2, v3}, Landroid/provider/Settings$Secure;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I
-
-    move-result p0
-    :try_end_0
-    .catchall {:try_start_0 .. :try_end_0} :catchall_0
-
-    const/4 v2, 0x1
-
-    if-ne p0, v2, :cond_0
-
-    move v3, v2
-
-    :cond_0
     invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
 
-    return v3
-
-    :catchall_0
-    move-exception p0
-
-    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+    const/4 p0, 0x0
 
-    throw p0
+    return p0
 .end method
 
 .method getlegacyPassword()Ljava/lang/String;
diff --git a/smali/com/samsung/android/server/wifi/b2b/WifiB2bPolicyManager.smali b/smali/com/samsung/android/server/wifi/b2b/WifiB2bPolicyManager.smali
index 52ed3c9..9c29f44 100644
--- a/smali/com/samsung/android/server/wifi/b2b/WifiB2bPolicyManager.smali
+++ b/smali/com/samsung/android/server/wifi/b2b/WifiB2bPolicyManager.smali
@@ -169,7 +169,7 @@
 .end method
 
 .method public constructor <init>(Landroid/content/Context;Landroid/os/Looper;Lcom/samsung/android/server/wifi/b2b/NativeB2bRoamCommand;Lcom/samsung/android/server/wifi/SemWifiManagerProxy;)V
-    .locals 1
+    .locals 2
 
     invoke-direct {p0}, Ljava/lang/Object;-><init>()V
 
@@ -221,9 +221,9 @@
 
     iput-boolean v0, p0, Lcom/samsung/android/server/wifi/b2b/WifiB2bPolicyManager;->isRoamBandSupportedByDriver:Z
 
-    const/4 v0, 0x3
+    const/4 v1, 0x3
 
-    iput v0, p0, Lcom/samsung/android/server/wifi/b2b/WifiB2bPolicyManager;->setbandDefaultValue:I
+    iput v1, p0, Lcom/samsung/android/server/wifi/b2b/WifiB2bPolicyManager;->setbandDefaultValue:I
 
     iput-object p1, p0, Lcom/samsung/android/server/wifi/b2b/WifiB2bPolicyManager;->context:Landroid/content/Context;
 
@@ -239,9 +239,16 @@
 
     iput p1, p0, Lcom/samsung/android/server/wifi/b2b/WifiB2bPolicyManager;->supportedBand:I
 
+    iget p2, p0, Lcom/samsung/android/server/wifi/b2b/WifiB2bPolicyManager;->setbandDefaultValue:I
+
+    if-gt p1, p2, :cond_0
+
+    iput v0, p0, Lcom/samsung/android/server/wifi/b2b/WifiB2bPolicyManager;->setbandDefaultValue:I
+
+    :cond_0
     new-instance p1, Ljava/lang/StringBuilder;
 
-    const-string p2, "value of 6ghz secproduct feature :true  setbandDefaultValue "
+    const-string p2, "value of 6ghz secproduct feature :false  setbandDefaultValue "
 
     invoke-direct {p1, p2}, Ljava/lang/StringBuilder;-><init>(Ljava/lang/String;)V
 
@@ -1595,31 +1602,21 @@
 .end method
 
 .method public setRoamBand(Ljava/lang/String;I)Z
-    .locals 2
+    .locals 1
 
     invoke-direct {p0}, Lcom/samsung/android/server/wifi/b2b/WifiB2bPolicyManager;->getVendorVersion()I
 
-    move-result v0
-
-    const/16 v1, 0xb
-
-    if-ne v0, v1, :cond_0
-
-    goto :goto_0
-
-    :cond_0
     invoke-virtual {p0, p1}, Lcom/samsung/android/server/wifi/b2b/WifiB2bPolicyManager;->isPolicyApplied(Ljava/lang/String;)Z
 
     move-result v0
 
-    if-eqz v0, :cond_1
+    if-eqz v0, :cond_0
 
-    :goto_0
     const/4 p0, 0x0
 
     return p0
 
-    :cond_1
+    :cond_0
     iget-object p0, p0, Lcom/samsung/android/server/wifi/b2b/WifiB2bPolicyManager;->wifiNative:Lcom/samsung/android/server/wifi/b2b/NativeB2bRoamCommand;
 
     invoke-interface {p0, p1, p2}, Lcom/samsung/android/server/wifi/b2b/NativeB2bRoamCommand;->setRoamBand(Ljava/lang/String;I)Z
-- 
2.45.2

